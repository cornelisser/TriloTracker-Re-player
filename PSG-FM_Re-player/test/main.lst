Sjasm Z80 Assembler v0.42b8 - www.xl2s.tk             [2022.09.10 - 13:35:24]

main.asm
Errors: 0

       1   00:0000                      	defpage	0,0x4000, 0x8000		; page 0 contains main code + far call routines
       2   00:0000                      
       3   00:0000                      ; -----------------------------
       4   00:0000                      ; TT-replayer example
       5   00:0000                      ; 
       6   00:0000                      ; This example plays compiled PSG+FM songs
       7   00:0000                      ; ------------------------------
       8   00:0000                      
       9   00:0000                      ;	include	".\code\variables.asm"
      10   00:0000                      
      11   00:0000  (00)                	page 0
      12   00:4000                      	code page 0
      13   00:4000                      	
      14   00:4000                      	org	04000h
      15   00:4000  41 42               	db	041h,042h
      16   00:4002  10 40               	dw	initmain
      17   00:4004                      	dz 	'TTDEMO'
      17   00:4004  54 54 44 45 4D 4F 00 
      18   00:400B  00 (5)              	ds	5
      19   00:4010                      		
      20   00:4010                      initmain:
      21   00:4010                      
      22   00:4010                      ;	ei
      23   00:4010                      ;	halt
      24   00:4010  F3                  	di
      25   00:4011                      		
      26   00:4011                      ;; set pages and subslot
      27   00:4011                      ;;
      28   00:4011  CD 38 01            	call    0x138
      29   00:4014  0F                  	rrca
      30   00:4015  0F                  	rrca
      31   00:4016  E6 03               	and     0x03
      32   00:4018  4F                  	ld      c,a
      33   00:4019  06 00               	ld      b,0
      34   00:401B  21 C1 FC            	ld      hl,0xfcc1
      35   00:401E  09                  	add     hl,bc
      36   00:401F  B6                  	or      (hl)
      37   00:4020  47                  	ld      b,a
      38   00:4021  23                  	inc     hl
      39   00:4022  23                  	inc     hl
      40   00:4023  23                  	inc     hl
      41   00:4024  23                  	inc     hl
      42   00:4025  7E                  	ld      a,(hl)
      43   00:4026  E6 0C               	and     0x0c
      44   00:4028  B0                  	or      b
      45   00:4029                          
      46   00:4029  26 80               	ld      h,0x80
      47   00:402B  CD 24 00            	call    0x24        
      48   00:402E                      	
      49   00:402E                      	;clear RAM (first kb only)
      50   00:402E  01 00 04            	ld	bc,1024
      51   00:4031  21 00 C0            	ld	hl,0xc000
      52   00:4034  11 01 C0            	ld	de,0xc001
      53   00:4037                      
      54   00:4037  36 00               	ld	(hl),0
      55   00:4039  ED B0               	ldir	
      56   00:403B                      
      57   00:403B                      	;--- place replayer on hook
      58   00:403B  3E C3               	ld	a,0xc3
      59   00:403D  21 EA 40            	ld	hl,isr
      60   00:4040  32 9A FD            	ld	(0xFD9A),a
      61   00:4043  22 9B FD            	ld	(0xFD9B),hl	
      62   00:4046                      	
      63   00:4046                      	
      64   00:4046                      	
      65   00:4046                      	;--- Init screen
      66   00:4046  CD BF 42            	call 	init_vdp
      67   00:4049  FB                  	ei
      68   00:404A  76                  	halt
      69   00:404B  F3                  	di
      70   00:404C  CD 05 46            	call	init_font		; set the new font
      71   00:404F                      	
      72   00:404F                      	;--- initialise replayer
      73   00:404F  CD C8 49            	call	replay_init
      74   00:4052                      
      75   00:4052                      
      76   00:4052                      	;--- initialise demo song
      77   00:4052  21 86 5B            	ld	hl,demo_song
      78   00:4055  CD 89 4A            	call	replay_loadsong
      79   00:4058                      	 
      80   00:4058                      	;--- initialise sfx pointers
      81   00:4058                      	
      82   00:4058                      	
      83   00:4058  CD 27 41            	call	clear_debug
      84   00:405B                      	
      85   00:405B  FB                  	ei
      86   00:405C                      	
      87   00:405C  CD 0B 43            	call	clear_screen
      88   00:405F  21 56 01            	ld	hl,80*4+22
      89   00:4062  11 55 5C            	ld	de,TEXT_Title
      90   00:4065  CD 52 43            	call	draw_label
      91   00:4068  21 04 02            	ld	hl,80*6+36
      92   00:406B  11 7A 5C            	ld	de,TEXT_Step
      93   00:406E  CD 52 43            	call	draw_label
      94   00:4071  21 84 02            	ld	hl,80*8+4
      95   00:4074  11 80 5C            	ld	de,TEXT_Header_Data
      96   00:4077  CD 52 43            	call	draw_label	
      97   00:407A                      	
      98   00:407A  21 A6 02            	ld	hl,80*8+38
      99   00:407D  11 98 5C            	ld	de,TEXT_Register_Header
     100   00:4080  CD 52 43            	call	draw_label		
     101   00:4083                      
     102   00:4083  21 48 04            	ld 	hl,80*13+56
     103   00:4086  11 BB 5C            	ld	de,TEXT_Register_Drum
     104   00:4089  CD 52 43            	call	draw_label	
     105   00:408C                      
     106   00:408C  21 A4 05            	ld 	hl,80*18+4
     107   00:408F  11 CC 5C            	ld	de,TEXT_Legend_Data
     108   00:4092  CD 52 43            	call	draw_label	
     109   00:4095                      
     110   00:4095                      
     111   00:4095                      	
     112   00:4095  AF                  	xor	a
     113   00:4096  32 7C C4            	ld	(pattern),a
     114   00:4099                      
     115   00:4099                      ;	call	replay_pause
     116   00:4099                      ;	ld	bc,$0001
     117   00:4099                      ;	call	ttsfx_start
     118   00:4099                      	
     119   00:4099                      infinite:
     120   00:4099  76                  	halt	
     121   00:409A                      ;	call	register_debug
     122   00:409A                      
     123   00:409A                      	
     124   00:409A                      ;	ld	a,$f0 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     125   00:409A                      ;	out	(0x99),a
     126   00:409A                      ;	ld	a,7+128
     127   00:409A                      ;	out	(0x99),a	
     128   00:409A                      
     129   00:409A                      
     130   00:409A                      	
     131   00:409A                      ;	ld	a,$f3 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     132   00:409A                      ;	out	(0x99),a
     133   00:409A                      ;	ld	a,7+128
     134   00:409A                      ;	out	(0x99),a
     135   00:409A                      	
     136   00:409A                      ;	ld	a,$f0
     137   00:409A                      ;	out	(0x99),a
     138   00:409A                      ;	ld	a,7+128
     139   00:409A                      ;	out	(0x99),a	
     140   00:409A                      	;--- display debug info
     141   00:409A  CD 35 41            	call	debuginfo	
     142   00:409D  CD AB 41            	call	register_debug
     143   00:40A0  CD 80 41            	call	step_debug
     144   00:40A3                      	
     145   00:40A3                      	;---- Cursors
     146   00:40A3  AF                  	xor	a
     147   00:40A4  CD D5 00            	call	$D5		;GTSTCK
     148   00:40A7                      
     149   00:40A7  A7                  	and	a
     150   00:40A8  CA BD 40            	jp	z,.space
     151   00:40AB                      
     152   00:40AB  FE 07               	cp	7		; left
     153   00:40AD  C2 B0 40            	jp	nz,.noleft
     154   00:40B0                      
     155   00:40B0                      	;--- Previous song
     156   00:40B0                      
     157   00:40B0                      .noleft:
     158   00:40B0  FE 03               	cp	3		; right
     159   00:40B2  C2 B5 40            	jp	nz,.noright
     160   00:40B5                      
     161   00:40B5                      	;--- Next Song
     162   00:40B5                      	
     163   00:40B5                      
     164   00:40B5                      
     165   00:40B5                      .noright:
     166   00:40B5                      
     167   00:40B5                      .waitcursor:
     168   00:40B5  AF                  	xor	a
     169   00:40B6  CD D5 00            	call	$D5		;GTSTCK	
     170   00:40B9  A7                  	and	a
     171   00:40BA  C2 B5 40            	jp	nz,.waitcursor
     172   00:40BD                      	
     173   00:40BD                      .space:	
     174   00:40BD                      	;---- Test for space
     175   00:40BD  AF                  	xor	a
     176   00:40BE  CD D8 00            	call	$00D8			;GTTRIG
     177   00:40C1  A7                  	and	a
     178   00:40C2  CA 99 40            	jp	z,infinite
     179   00:40C5                      
     180   00:40C5                      ;---- play an SFX
     181   00:40C5  3A 72 C4            	ld	a,(sfx)
     182   00:40C8  3C                  	inc	a
     183   00:40C9  47                  	ld	b,a
     184   00:40CA  3A 06 65            	ld	a,(sfxbank) 
     185   00:40CD  CB 3F               	srl	a
     186   00:40CF  3D                  	dec	a
     187   00:40D0  B8                  	cp	b
     188   00:40D1  D2 D6 40            	jp	nc,.skip
     189   00:40D4  06 00               	ld	b,0
     190   00:40D6                      .skip:
     191   00:40D6                      
     192   00:40D6  78                  	ld	a,b
     193   00:40D7  32 72 C4            	ld	(sfx),a
     194   00:40DA  0E 00               	ld	c,0
     195   00:40DC  CD D9 5A            	call	ttsfx_start
     196   00:40DF                      	; wait_key_release
     197   00:40DF                      99:	
     198   00:40DF  AF                  	xor	a
     199   00:40E0  CD D8 00            	call	$00D8
     200   00:40E3  A7                  	and	a
     201   00:40E4  C2 DF 40            	jp	nz,99b
     202   00:40E7                      	
     203   00:40E7  C3 99 40            	jp	infinite
     204   00:40EA                      
     205   00:40EA                      	
     206   00:40EA                      	
     207   00:40EA                      isr:
     208   00:40EA  DB 99               	in	a,(0x99)
     209   00:40EC  CD 11 41            	call	write_debug
     210   00:40EF  3E FC               	ld	a,$fc ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     211   00:40F1  D3 99               	out	(0x99),a
     212   00:40F3  3E 87               	ld	a,7+128
     213   00:40F5  D3 99               	out	(0x99),a	
     214   00:40F7  CD 65 55            	call	replay_route		; first outout data
     215   00:40FA  3E F4               	ld	a,$f4 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     216   00:40FC  D3 99               	out	(0x99),a
     217   00:40FE  3E 87               	ld	a,7+128
     218   00:4100  D3 99               	out	(0x99),a		
     219   00:4102  CD 45 4B            	call	replay_play			; calculate next output
     220   00:4105  3E F0               	ld	a,$f0 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     221   00:4107  D3 99               	out	(0x99),a
     222   00:4109  3E 87               	ld	a,7+128
     223   00:410B  D3 99               	out	(0x99),a	
     224   00:410D  CD F7 5A            	call	ttsfx_play
     225   00:4110                      
     226   00:4110                      
     227   00:4110                      
     228   00:4110  C9                  	ret
     229   00:4111                      	
     230   00:4111                      write_debug:
     231   00:4111  21 D0 22            	ld 	hl,_PNT+(80*9)
     232   00:4114  CD CD 45            	call	set_vdpwrite	
     233   00:4117                      
     234   00:4117  21 CA C1            	ld 	hl,debug_pnt
     235   00:411A  3E 08               	ld	a,8
     236   00:411C  0E 98               	ld	c,$98
     237   00:411E                      _wd_loop:
     238   00:411E  06 50               	ld	b,80
     239   00:4120  ED B3               	otir
     240   00:4122                      	
     241   00:4122  3D                  	dec	a
     242   00:4123  C2 1E 41            	jp	nz,_wd_loop
     243   00:4126                      
     244   00:4126  C9                  	ret
     245   00:4127                      	
     246   00:4127                      clear_debug:
     247   00:4127  21 CA C1            	ld	hl,debug_pnt
     248   00:412A  11 CB C1            	ld	de,debug_pnt+1
     249   00:412D  36 20               	ld	(hl),32
     250   00:412F  01 7F 02            	ld	bc,(8*80)-1
     251   00:4132  ED B0               	ldir
     252   00:4134  C9                  	ret
     253   00:4135                      
     254   00:4135                      debuginfo:
     255   00:4135                      ;	ld	bc,40
     256   00:4135                      ;	call	clear_TEXT
     257   00:4135                      	
     258   00:4135  06 08               	ld	b,8
     259   00:4137  DD 21 44 C0         	ld	ix,TRACK_Chan1+17
     260   00:413B  11 CE C1            	ld	de,debug_pnt+4
     261   00:413E                      .loop	
     262   00:413E  C5                  	push	bc
     263   00:413F  D5                  	push	de
     264   00:4140                      	
     265   00:4140  3E 09               	ld	a,9
     266   00:4142  90                  	sub	b
     267   00:4143  CD C0 43            	call	draw_decimal
     268   00:4146  13                  	inc	de
     269   00:4147  DD 7E F6            	ld	a,(ix+TRACK_Note)
     270   00:414A  CD B0 43            	call	draw_hex2
     271   00:414D  13                  	inc 	de
     272   00:414E  DD 7E EF            	ld	a,(ix+TRACK_Instrument)
     273   00:4151  CD B0 43            	call	draw_hex2
     274   00:4154  13                  	inc 	de
     275   00:4155  DD 7E F8            	ld	a,(ix+TRACK_Voice)
     276   00:4158  CD B0 43            	call	draw_hex2
     277   00:415B  13                  	inc 	de	
     278   00:415C  DD 7E F7            	ld	a,(ix+TRACK_Volume)
     279   00:415F  CD B0 43            	call	draw_hex2
     280   00:4162  13                  	inc 	de
     281   00:4163  DD 7E F0            	ld	a,(ix+TRACK_Command)
     282   00:4166  CD B0 43            	call	draw_hex2	
     283   00:4169  13                  	inc 	de
     284   00:416A                      
     285   00:416A  EB                  	ex	de,hl
     286   00:416B  DD 46 F9            	ld	b,(ix+TRACK_Flags)
     287   00:416E  CD 54 42            	call 	debug_flags
     288   00:4171                      
     289   00:4171                      
     290   00:4171                      	; next line
     291   00:4171  E1                  	pop	hl
     292   00:4172  11 50 00            	ld	de,80
     293   00:4175  19                  	add	hl,de
     294   00:4176  EB                  	ex	de,hl
     295   00:4177                      	
     296   00:4177                      
     297   00:4177                      	;--- Next track
     298   00:4177  01 27 00            	ld	bc,TRACK_REC_SIZE
     299   00:417A  DD 09               	add	ix,bc
     300   00:417C                      	
     301   00:417C  C1                  	pop	bc
     302   00:417D  10 BF               	djnz	.loop
     303   00:417F  C9                  	ret
     304   00:4180                      
     305   00:4180                      step_debug:
     306   00:4180  01 07 00            	ld	bc,7
     307   00:4183  CD 48 42            	call	clear_TEXT
     308   00:4186  2A 1D C0            	ld	hl,(replay_orderpointer)
     309   00:4189  11 8D 5B            	ld	de,demo_song+7
     310   00:418C  AF                  	xor 	a
     311   00:418D  ED 52               	sbc	hl,de
     312   00:418F  29                  	add	hl,hl		;X2
     313   00:4190  29                  	add	hl,hl		;X4	
     314   00:4191  29                  	add	hl,hl		;X8
     315   00:4192  29                  	add	hl,hl		;X16
     316   00:4193  7C                  	ld	a,h
     317   00:4194  3D                  	dec	a
     318   00:4195  21 C6 C1            	ld	hl,debug_pointer1
     319   00:4198  77                  	ld	(hl),a
     320   00:4199  11 4A C4            	ld	de,TEXT_Chan
     321   00:419C  CD D7 43            	call	draw_decimal3
     322   00:419F                      	
     323   00:419F  21 09 02            	ld	hl,80*6+41
     324   00:41A2  11 4A C4            	ld	de,TEXT_Chan
     325   00:41A5  06 03               	ld	b,3
     326   00:41A7  CD 66 43            	call	draw_label_fast
     327   00:41AA  C9                  	ret
     328   00:41AB                      	
     329   00:41AB                      
     330   00:41AB                      register_debug:
     331   00:41AB                      ;	ld	bc,7
     332   00:41AB                      ;	call	clear_TEXT
     333   00:41AB  21 0C 42            	ld	hl,REG_list
     334   00:41AE                      	
     335   00:41AE                      	;	DRAW PSG Tone vol	
     336   00:41AE  FD 2E 03            	ld	iyl,3
     337   00:41B1  11 F9 C1            	ld 	de,debug_pnt+47
     338   00:41B4                      ;	ld	(debug_pointer1),bc
     339   00:41B4  CD E5 41            	call	register_debug_loop
     340   00:41B7                      
     341   00:41B7                      	;	DRAW PSG Noise and mixer	
     342   00:41B7  FD 2E 01            	ld	iyl,1
     343   00:41BA  11 02 C2            	ld 	de,debug_pnt+56
     344   00:41BD                      ;	ld	(debug_pointer1),bc
     345   00:41BD  CD E5 41            	call	register_debug_loop	
     346   00:41C0                      	
     347   00:41C0                      	;	DRAW PSG Envelop + shape
     348   00:41C0  FD 2E 01            	ld	iyl,1
     349   00:41C3  11 0B C2            	ld 	de,debug_pnt+65
     350   00:41C6                      ;	ld	(debug_pointer1),bc
     351   00:41C6  CD E5 41            	call	register_debug_loop		
     352   00:41C9                      
     353   00:41C9                      	;	DRAW FM Tone Vol	
     354   00:41C9  FD 2E 06            	ld	iyl,6
     355   00:41CC  11 90 C2            	ld 	de,debug_pnt+(80*2)+38
     356   00:41CF                      ;	ld	(debug_pointer1),bc
     357   00:41CF  CD E5 41            	call	register_debug_loop
     358   00:41D2                      	
     359   00:41D2                      	
     360   00:41D2                      	;	DRAW FM Drum macro + percusion
     361   00:41D2  FD 2E 01            	ld	iyl,1
     362   00:41D5  11 92 C3            	ld 	de,debug_pnt+(80*5)+56
     363   00:41D8                      ;	ld	(debug_pointer1),bc
     364   00:41D8  CD E5 41            	call	register_debug_loop
     365   00:41DB                      
     366   00:41DB                      	;	DRAW FM Drum tone + vol
     367   00:41DB  FD 2E 03            	ld	iyl,3
     368   00:41DE  11 9B C3            	ld 	de,debug_pnt+(80*5)+65
     369   00:41E1                      ;	ld	(debug_pointer1),bc
     370   00:41E1  CD E5 41            	call	register_debug_loop
     371   00:41E4                      	
     372   00:41E4  C9                  	ret
     373   00:41E5                      
     374   00:41E5                      register_debug_loop:
     375   00:41E5  D5                  	push 	de
     376   00:41E6                      ;	ld	de,TEXT_Chan
     377   00:41E6  4E                  	ld	c,(hl)
     378   00:41E7  23                  	inc	hl
     379   00:41E8  46                  	ld	b,(hl)
     380   00:41E9  23                  	inc	hl
     381   00:41EA                      	
     382   00:41EA  03                  	inc	bc
     383   00:41EB  0A                  	ld	a,(bc)
     384   00:41EC  0B                  	dec	bc
     385   00:41ED  CD B0 43            	call	draw_hex2		; tone
     386   00:41F0  0A                  	ld	a,(bc)
     387   00:41F1  CD B0 43            	call	draw_hex2
     388   00:41F4                      	
     389   00:41F4  13                  	inc 	de	
     390   00:41F5                      	
     391   00:41F5  4E                  	ld	c,(hl)
     392   00:41F6  23                  	inc	hl
     393   00:41F7  46                  	ld	b,(hl)
     394   00:41F8  23                  	inc	hl	
     395   00:41F9                      	
     396   00:41F9  0A                  	ld	a,(bc)
     397   00:41FA  CD B0 43            	call	draw_hex2		; vol
     398   00:41FD                      	
     399   00:41FD                      	;-- next line
     400   00:41FD  D1                  	pop 	de
     401   00:41FE  3E 50               	ld	a,80
     402   00:4200  83                  	add	a,e
     403   00:4201  5F                  	ld	e,a
     404   00:4202  D2 06 42            	jp	nc,99f
     405   00:4205  14                  	inc	d
     406   00:4206                      99:	
     407   00:4206  FD 2D               	dec	iyl
     408   00:4208  C2 E5 41            	jp	nz,register_debug_loop
     409   00:420B  C9                  	ret
     410   00:420C                      
     411   00:420C                      REG_list:
     412   00:420C  6B C1 73 C1         	dw	PSG_regToneA,PSG_regVOLA
     413   00:4210  6D C1 74 C1         	dw	PSG_regToneB,PSG_regVOLB
     414   00:4214  6F C1 75 C1         	dw	PSG_regToneC,PSG_regVOLC
     415   00:4218  71 C1 72 C1         	dw	PSG_regNOISE,PSG_regMIXER
     416   00:421C  00 00 00 00         	dw	0,0;PSG_regEnvL,PSG_regEnvShape 	
     417   00:4220  8A C1 8E C1         	dw	FM_regToneA,FM_regVOLA 
     418   00:4224  90 C1 94 C1         	dw	FM_regToneB,FM_regVOLB 
     419   00:4228  96 C1 9A C1         	dw	FM_regToneC,FM_regVOLC 
     420   00:422C  9C C1 A0 C1         	dw	FM_regToneD,FM_regVOLD 
     421   00:4230  A2 C1 A6 C1         	dw	FM_regToneE,FM_regVOLE 
     422   00:4234  A8 C1 AC C1         	dw	FM_regToneF,FM_regVOLF 
     423   00:4238  C3 C1 C0 C1         	dw	FM_DRUM_MACRO,FM_DRUM
     424   00:423C  AE C1 B2 C1         	dw	DRUM_regToneBD,DRUM_regVolBD
     425   00:4240  B4 C1 B8 C1         	dw	DRUM_regToneSH,DRUM_regVolSH	
     426   00:4244  BA C1 BE C1         	dw	DRUM_regToneCT,DRUM_regVolCT	
     427   00:4248                      
     428   00:4248                      
     429   00:4248                      
     430   00:4248                      
     431   00:4248                      ; input BC length to clear
     432   00:4248                      clear_TEXT:
     433   00:4248  0B                  	dec	bc
     434   00:4249  21 4A C4            	ld	hl,TEXT_Chan
     435   00:424C  11 4B C4            	ld	de,TEXT_Chan+1
     436   00:424F  36 20               	ld	(hl),' '
     437   00:4251  ED B0               	ldir
     438   00:4253  C9                  	ret
     439   00:4254                      
     440   00:4254                      debug_flags:
     441   00:4254  CB 78               	bit	7,b
     442   00:4256  CA 5E 42            	jp	z,1f
     443   00:4259  36 46               	ld	(hl),'F'
     444   00:425B  C3 60 42            	jp	2f
     445   00:425E                      1:
     446   00:425E  36 50               	ld	(hl),'P'
     447   00:4260                      	
     448   00:4260                      2:
     449   00:4260  23                  	inc	hl
     450   00:4261  CB 70               	bit	6,b
     451   00:4263  CA 6B 42            	jp	z,1f
     452   00:4266  36 56               	ld	(hl),'V'
     453   00:4268  C3 6D 42            	jp	2f
     454   00:426B                      1:
     455   00:426B  36 20               	ld	(hl),' '
     456   00:426D                      	
     457   00:426D                      2:	
     458   00:426D  23                  	inc	hl
     459   00:426E  CB 68               	bit	5,b
     460   00:4270  CA 78 42            	jp	z,1f
     461   00:4273  36 53               	ld	(hl),'S'
     462   00:4275  C3 7A 42            	jp	2f
     463   00:4278                      1:
     464   00:4278  36 20               	ld	(hl),' '
     465   00:427A                      	
     466   00:427A                      2:	
     467   00:427A  23                  	inc	hl
     468   00:427B  CB 60               	bit	4,b
     469   00:427D  C2 85 42            	jp	nz,1f
     470   00:4280  36 4B               	ld	(hl),'K'
     471   00:4282  C3 87 42            	jp	2f
     472   00:4285                      1:
     473   00:4285  36 20               	ld	(hl),' '
     474   00:4287                      	
     475   00:4287                      2:	
     476   00:4287  23                  	inc	hl
     477   00:4288  CB 58               	bit	3,b
     478   00:428A  CA 92 42            	jp	z,1f
     479   00:428D  36 43               	ld	(hl),'C'
     480   00:428F  C3 94 42            	jp	2f
     481   00:4292                      1:
     482   00:4292  36 20               	ld	(hl),' '
     483   00:4294                      	
     484   00:4294                      2:	
     485   00:4294  23                  	inc	hl
     486   00:4295  CB 50               	bit	2,b
     487   00:4297  CA 9F 42            	jp	z,1f
     488   00:429A  36 45               	ld	(hl),'E'
     489   00:429C  C3 A1 42            	jp	2f
     490   00:429F                      1:
     491   00:429F  36 20               	ld	(hl),' '
     492   00:42A1                      	
     493   00:42A1                      2:	
     494   00:42A1  23                  	inc	hl	
     495   00:42A2  CB 48               	bit	1,b
     496   00:42A4  CA AC 42            	jp	z,1f
     497   00:42A7  36 41               	ld	(hl),'A'
     498   00:42A9  C3 AE 42            	jp	2f
     499   00:42AC                      1:
     500   00:42AC  36 20               	ld	(hl),' '
     501   00:42AE                      	
     502   00:42AE                      2:	
     503   00:42AE  23                  	inc	hl	
     504   00:42AF  CB 40               	bit	0,b
     505   00:42B1  CA B9 42            	jp	z,1f
     506   00:42B4  36 4E               	ld	(hl),'N'
     507   00:42B6  C3 BB 42            	jp	2f
     508   00:42B9                      1:
     509   00:42B9  36 20               	ld	(hl),' '
     510   00:42BB                      	
     511   00:42BB                      2:	
     512   00:42BB  23                  	inc	hl		
     513   00:42BC  EB                  	ex	de,hl
     514   00:42BD                      
     515   00:42BD  13                  	inc 	de
     516   00:42BE  C9                  	ret
     517   00:42BF                      
     518   00:42BF                      
     519   00:42BF                      
     520   00:42BF                      
     521   00:42BF                      	
     522   00:42BF                      	; --- init_vdp
     523   00:42BF                      	; 
     524   00:42BF                      	; Initial init of the vdp
     525   00:42BF                      init_vdp:
     526   00:42BF                      
     527   00:42BF  3E 04               	ld	a,00000100b ; Reg#0 [ 0 ][DG ][IE2][IE1][M5 ][M4 ][M3 ][ 0 ]
     528   00:42C1  D3 99               	out	(0x99),a
     529   00:42C3  3E 80               	ld	a,0+128
     530   00:42C5  D3 99               	out	(0x99),a
     531   00:42C7                      
     532   00:42C7  3E 70               	ld	a,01110000b ; Reg#1 [ 0 ][BL ][IE0][M1 ][M2 ][ 0 ][SIZ][MAG]
     533   00:42C9                      
     534   00:42C9  D3 99               	out	(0x99),a
     535   00:42CB  3E 81               	ld	a,1+128
     536   00:42CD  D3 99               	out	(0x99),a	
     537   00:42CF                      
     538   00:42CF  3E 0B               	ld	a,00001011b ; REG#2[ 0 ][A16][A15][A14][A13][A12][ 1 ][ 1 ]  - Pattern layout table
     539   00:42D1                      
     540   00:42D1  D3 99               	out	(0x99),a
     541   00:42D3  3E 82               	ld	a,2+128
     542   00:42D5  D3 99               	out	(0x99),a	
     543   00:42D7                      
     544   00:42D7  3E AF               	ld	a,10101111b ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     545   00:42D9                      
     546   00:42D9  D3 99               	out	(0x99),a
     547   00:42DB  3E 83               	ld	a,3+128
     548   00:42DD  D3 99               	out	(0x99),a	
     549   00:42DF                      	
     550   00:42DF  3E 12               	ld	a,00010010b ; Reg#4 [ 0 ][ 0 ][A16][A15][A14][A13][A12][A11]  - Pattern generator table
     551   00:42E1                      
     552   00:42E1  D3 99               	out	(0x99),a
     553   00:42E3  3E 84               	ld	a,4+128
     554   00:42E5  D3 99               	out	(0x99),a	
     555   00:42E7                      	
     556   00:42E7  3A E8 FF            	ld	a,($FFE8)
     557   00:42EA  F6 80               	or	10000000b ; Reg#9 [LN ][ 0 ][S1 ][S0 ][IL ][EO ][NT ][DC ]
     558   00:42EC  D3 99               	out	(0x99),a
     559   00:42EE  3E 89               	ld	a,9+128
     560   00:42F0  D3 99               	out	(0x99),a	
     561   00:42F2                      
     562   00:42F2                      
     563   00:42F2  3E F0               	ld	a,$f0
     564   00:42F4  D3 99               	out	(0x99),a
     565   00:42F6  3E 87               	ld	a,7+128
     566   00:42F8  D3 99               	out	(0x99),a
     567   00:42FA  3E E1               	ld	a,$e1
     568   00:42FC  D3 99               	out	(0x99),a
     569   00:42FE  3E 8C               	ld	a,12+128
     570   00:4300  D3 99               	out	(0x99),a
     571   00:4302  3E F0               	ld	a,0xF0	;reg#13
     572   00:4304  D3 99               	out	(0x99),a
     573   00:4306  3E 8D               	ld	a,13+128
     574   00:4308  D3 99               	out	(0x99),a		
     575   00:430A                      	
     576   00:430A                      	
     577   00:430A                      
     578   00:430A  C9                  	ret		
     579   00:430B                      	include	".\screen.asm"
       1.  00:430B  (00:0082)           _UPLEFT			equ	130
       2.  00:430B  (00:0081)           _HORIZONTAL			equ	129
       3.  00:430B  (00:0083)           _UPRIGHT			equ	131
       4.  00:430B  (00:0080)           _VERTICAL			equ	128
       5.  00:430B  (00:0087)           _VERTICAL_SMALL		equ	135
       6.  00:430B  (00:0086)           _VERTICAL_DOUBLE		equ	134
       7.  00:430B  (00:008B)           _VERTICAL_STEP		equ	139
       8.  00:430B  (00:00B0)           _ARROWLEFT			equ	176
       9.  00:430B  (00:00B1)           _ARROWRIGHT			equ	177
      10.  00:430B  (00:00AE)           _LOOPSIGN			equ	174
      11.  00:430B  (00:00F1)           _TONE_OFF_SIGN		equ	241
      12.  00:430B  (00:00F2)           _TONE_ON_SIGN		equ	242
      13.  00:430B  (00:00F3)           _NOISE_OFF_SIGN		equ	243
      14.  00:430B  (00:00F4)           _NOISE_ON_SIGN		equ	244
      15.  00:430B  (00:00F5)           _ENV_OFF_SIGN		equ	245
      16.  00:430B  (00:00F6)           _ENV_ON_SIGN		equ	246
      17.  00:430B  (00:00BF)           _CMD_SIGN			equ	6*32-1
      18.  00:430B  (00:00FE)           _CURSOR			equ	254
      19.  00:430B                      
      20.  00:430B  (00:00FC)           MOUSE_CHR			equ 	252
      21.  00:430B                      
      22.  00:430B  (00:2000)           _PNT		equ	0x2000		; pnt
      23.  00:430B  (00:2A00)           _CNT		equ	0x2a00		; cnt
      24.  00:430B                      
      25.  00:430B                      
      26.  00:430B                      
      27.  00:430B                      ; ==========================================================	
      28.  00:430B                      	; --- clear_window
      29.  00:430B                      	; 
      30.  00:430B                      	; Clears the current screen (pnt and cnt)
      31.  00:430B                      	;
      32.  00:430B                      ; ==========================================================	
      33.  00:430B                      clear_screen:
      34.  00:430B  21 00 20            	ld 	hl,_PNT
      35.  00:430E  CD CD 45            	call	set_vdpwrite	
      36.  00:4311                      
      37.  00:4311  1E 1B               	ld	e,27
      38.  00:4313  3E 20               	ld	a,32
      39.  00:4315  F3                  	di
      40.  00:4316                      0:	;-- main loop
      41.  00:4316  01 98 50            	ld	bc,0x5098
      42.  00:4319                      1:	;--- sub loop
      43.  00:4319  ED 79               		out	(c),a
      44.  00:431B  10 FC               		djnz 	1b
      45.  00:431D                      	; -- end sub loop
      46.  00:431D  1D                  	dec	e
      47.  00:431E  20 F6               	jr	nz,0b
      48.  00:4320                      	; -- end main loop	
      49.  00:4320                      
      50.  00:4320                      clear_cnt:
      51.  00:4320  21 00 2A            	ld 	hl,_CNT
      52.  00:4323  CD CD 45            	call	set_vdpwrite	
      53.  00:4326                      	
      54.  00:4326  1E 1B               	ld	e,27
      55.  00:4328  3E 00               	ld	a,0
      56.  00:432A  F3                  	di
      57.  00:432B                      0:	;-- main loop
      58.  00:432B  01 98 0A            	ld	bc,0x0a98
      59.  00:432E                      1:	;--- sub loop
      60.  00:432E  ED 79               		out	(c),a
      61.  00:4330  10 FC               		djnz 	1b
      62.  00:4332                      	; -- end sub loop
      63.  00:4332  1D                  	dec	e
      64.  00:4333  20 F6               	jr	nz,0b
      65.  00:4335                      	; -- end main loop	
      66.  00:4335                      	
      67.  00:4335  FB                  	ei
      68.  00:4336  C9                  	ret
      69.  00:4337                      
      70.  00:4337                      ; ==========================================================	
      71.  00:4337                      	; --- clear_files
      72.  00:4337                      	; 
      73.  00:4337                      	; Clears the files area in the file dialog 
      74.  00:4337                      	;
      75.  00:4337                      ; ==========================================================	
      76.  00:4337                      clear_files:
      77.  00:4337                      
      78.  00:4337  06 14               	ld	b,20
      79.  00:4339  21 E0 21            	ld	hl,_PNT+(80*6)
      80.  00:433C                      
      81.  00:433C  C5                  0:	push	bc
      82.  00:433D  E5                  	push	hl
      83.  00:433E  CD CD 45            	call	set_vdpwrite	
      84.  00:4341                      
      85.  00:4341  06 38               	ld	b,56
      86.  00:4343  3E 20               	ld	a,32
      87.  00:4345                      
      88.  00:4345                      1:	;--- sub loop
      89.  00:4345  D3 98               		out	(0x98),a
      90.  00:4347  10 FC               		djnz 	1b
      91.  00:4349                      	; -- end sub loop
      92.  00:4349  E1                  	pop	hl
      93.  00:434A  01 50 00            	ld	bc,80
      94.  00:434D  09                  	add	hl,bc
      95.  00:434E                      	
      96.  00:434E  C1                  	pop	bc
      97.  00:434F  10 EB               	djnz	0b
      98.  00:4351                      
      99.  00:4351  C9                  	ret	
     100.  00:4352                      
     101.  00:4352                      
     102.  00:4352                      
     103.  00:4352                      
     104.  00:4352                      ; ==========================================================	
     105.  00:4352                      	; --- draw_label
     106.  00:4352                      	; 
     107.  00:4352                      	; Draw box 
     108.  00:4352                      	; HL = position in PNT (relative)
     109.  00:4352                      	; DE = pointer to the label text
     110.  00:4352                      ; ==========================================================
     111.  00:4352                      draw_label:
     112.  00:4352  F3                  	di
     113.  00:4353                      ;	ld	a,$f3 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     114.  00:4353                      ;	out	(0x99),a
     115.  00:4353                      ;	ld	a,7+128
     116.  00:4353                      ;	out	(0x99),a	
     117.  00:4353                      
     118.  00:4353                      	
     119.  00:4353  01 00 20            	ld 	bc,_PNT
     120.  00:4356  09                  	add	hl,bc
     121.  00:4357  CD CD 45            	call	set_vdpwrite			
     122.  00:435A                      	
     123.  00:435A                      draw_label_loop:
     124.  00:435A  1A                  	ld	a,(de)
     125.  00:435B  FE 00               	cp	0
     126.  00:435D  28 05               	jr.	z,draw_label_end	
     127.  00:435F  D3 98               	out	(0x98),a
     128.  00:4361                      	
     129.  00:4361  13                  	inc	de
     130.  00:4362  18 F6               	jr.	draw_label_loop
     131.  00:4364                      	
     132.  00:4364                      draw_label_end:
     133.  00:4364                      ;	ld	a,$f0 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     134.  00:4364                      ;	out	(0x99),a
     135.  00:4364                      ;	ld	a,7+128
     136.  00:4364                      ;	out	(0x99),a	
     137.  00:4364  FB                  	ei
     138.  00:4365  C9                  	ret
     139.  00:4366                      
     140.  00:4366                      ; ==========================================================	
     141.  00:4366                      	; --- draw_label_fast
     142.  00:4366                      	; 
     143.  00:4366                      	; Draw box 
     144.  00:4366                      	; HL = position in PNT (relative)
     145.  00:4366                      	; DE = pointer to the label text
     146.  00:4366                      	; BC = number of bytes to copy to vram
     147.  00:4366                      ; ==========================================================
     148.  00:4366                      draw_label_fast:
     149.  00:4366  F3                  	di
     150.  00:4367                      ;	ld	a,$f5 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     151.  00:4367                      ;	out	(0x99),a
     152.  00:4367                      ;	ld	a,7+128
     153.  00:4367                      ;	out	(0x99),a		
     154.  00:4367                      	
     155.  00:4367  C5                  	push	bc
     156.  00:4368  01 00 20            	ld 	bc,_PNT
     157.  00:436B  09                  	add	hl,bc	
     158.  00:436C  CD CD 45            	call	set_vdpwrite	
     159.  00:436F                      			
     160.  00:436F  EB                  	ex	de,hl
     161.  00:4370  C1                  	pop	bc
     162.  00:4371  0E 98               	ld	c,0x98
     163.  00:4373                      	
     164.  00:4373  ED B3               	otir
     165.  00:4375                      		
     166.  00:4375                      		
     167.  00:4375                      ;	ld	a,$f0 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     168.  00:4375                      ;	out	(0x99),a
     169.  00:4375                      ;	ld	a,7+128
     170.  00:4375                      ;	out	(0x99),a			
     171.  00:4375  FB                  	ei
     172.  00:4376                      	
     173.  00:4376  C9                  	ret
     174.  00:4377                      
     175.  00:4377                      ; ==========================================================	
     176.  00:4377                      	; --- draw_fake_hex_sp
     177.  00:4377                      	; 
     178.  00:4377                      	; Prints the value at an address as 1 digit decimal value 
     179.  00:4377                      	; But value 0 is printed as '.'
     180.  00:4377                      	; Values can be larger than F
     181.  00:4377                      	; A = the value
     182.  00:4377                      	; DE = position (relative) to put the value in PNT
     183.  00:4377                      	; 
     184.  00:4377                      ; ==========================================================
     185.  00:4377                      draw_fake_hex_sp:
     186.  00:4377  A7                  	and	a
     187.  00:4378  20 05               	jr.	nz,0f
     188.  00:437A  3E 2E               	ld	a,'.'
     189.  00:437C  12                  	ld	(de),a
     190.  00:437D  13                  	inc	de
     191.  00:437E  C9                  	ret
     192.  00:437F                      0:	
     193.  00:437F  FE 0A               	cp	10
     194.  00:4381  30 05               	jr.	nc,1f
     195.  00:4383  C6 30               	add	48
     196.  00:4385  12                  	ld	(de),a
     197.  00:4386  13                  	inc	de
     198.  00:4387  C9                  	ret
     199.  00:4388                      1:
     200.  00:4388  C6 37               	add 	55
     201.  00:438A  12                  	ld	(de),a
     202.  00:438B  13                  	inc	de	
     203.  00:438C  C9                  	ret
     204.  00:438D                      	
     205.  00:438D                      ; ==========================================================	
     206.  00:438D                      	; --- draw_fake_hex_sp_small
     207.  00:438D                      	; 
     208.  00:438D                      	; Prints the value at an address as 1 digit decimal value 
     209.  00:438D                      	; But value 0 is printed as '.'
     210.  00:438D                      	; Values can be larger than F
     211.  00:438D                      	; A = the value
     212.  00:438D                      	; DE = position (relative) to put the value in PNT
     213.  00:438D                      	; 
     214.  00:438D                      ; ==========================================================
     215.  00:438D                      draw_fake_hex_sp_small:
     216.  00:438D  A7                  	and	a
     217.  00:438E  20 05               	jr.	nz,0f
     218.  00:4390  3E 2E               	ld	a,'.'
     219.  00:4392  12                  	ld	(de),a
     220.  00:4393  13                  	inc	de
     221.  00:4394  C9                  	ret
     222.  00:4395                      0:	
     223.  00:4395  12                  	ld	(de),a
     224.  00:4396  13                  	inc	de	
     225.  00:4397  C9                  	ret
     226.  00:4398                      	
     227.  00:4398                      	
     228.  00:4398                      	
     229.  00:4398                      ; ==========================================================	
     230.  00:4398                      	; --- draw_hex_sp
     231.  00:4398                      	; 
     232.  00:4398                      	; Prints the value at an address as 1 digit decimal value 
     233.  00:4398                      	; But value 0 is printed as '.'
     234.  00:4398                      	; A = the value
     235.  00:4398                      	; DE = position (relative) to put the value in PNT
     236.  00:4398                      	; 
     237.  00:4398                      ; ==========================================================
     238.  00:4398                      ;draw_hex_sp:
     239.  00:4398                      ;	and	a
     240.  00:4398                      ;	jr.	nz,draw_hex
     241.  00:4398                      ;	ld	a,"."
     242.  00:4398                      ;	ld	(de),a
     243.  00:4398                      ;	inc	de
     244.  00:4398                      ;	ret
     245.  00:4398                      
     246.  00:4398                      ; ==========================================================	
     247.  00:4398                      	; --- draw_hex_sp_small
     248.  00:4398                      	; 
     249.  00:4398                      	; Prints the value at an address as 1 digit decimal value 
     250.  00:4398                      	; But value 0 is printed as '.'
     251.  00:4398                      	; A = the value
     252.  00:4398                      	; DE = position (relative) to put the value in PNT
     253.  00:4398                      	; 
     254.  00:4398                      ; ==========================================================
     255.  00:4398                      draw_hex_sp_small:
     256.  00:4398  A7                  	and	a
     257.  00:4399  20 10               	jr.	nz,draw_hex_small
     258.  00:439B  3E 2E               	ld	a,"."
     259.  00:439D  12                  	ld	(de),a
     260.  00:439E  13                  	inc	de
     261.  00:439F  C9                  	ret
     262.  00:43A0                      
     263.  00:43A0                      ; ==========================================================	
     264.  00:43A0                      	; --- draw_hex2_cmd
     265.  00:43A0                      	; 
     266.  00:43A0                      	; Prints the value at an address as 2 digit decimal value 
     267.  00:43A0                      	; A =  the value
     268.  00:43A0                      	; DE = position (relative) to put the value in PNT
     269.  00:43A0                      	; 
     270.  00:43A0                      	; Changes: AF
     271.  00:43A0                      ; ==========================================================
     272.  00:43A0                      ;draw_hex2_cmd:
     273.  00:43A0                      ;	push	af
     274.  00:43A0                      ;	and	0xf0
     275.  00:43A0                      ;	rrca
     276.  00:43A0                      ;	rrca
     277.  00:43A0                      ;	rrca
     278.  00:43A0                      ;	rrca	
     279.  00:43A0                      ;	call	draw_hex_small
     280.  00:43A0                      ;	pop	af
     281.  00:43A0                      ;	call	draw_hex_small
     282.  00:43A0                      ;	ret
     283.  00:43A0                      
     284.  00:43A0                      
     285.  00:43A0                      ; ==========================================================	
     286.  00:43A0                      	; --- draw_hex
     287.  00:43A0                      	; 
     288.  00:43A0                      	; Prints the value at an address as 1 digit decimal value 
     289.  00:43A0                      	; A = the value
     290.  00:43A0                      	; DE = position (relative) to put the value in PNT
     291.  00:43A0                      	; 
     292.  00:43A0                      ; ==========================================================
     293.  00:43A0                      draw_hex:
     294.  00:43A0  E6 0F               	and	0x0f
     295.  00:43A2                      draw_fakehex:	
     296.  00:43A2  C6 90               	add	a,0x90
     297.  00:43A4  27                  	daa
     298.  00:43A5  CE 40               	adc	a,0x40
     299.  00:43A7  27                  	daa
     300.  00:43A8  12                  	ld	(de),a
     301.  00:43A9  13                  	inc	de
     302.  00:43AA  C9                  	ret
     303.  00:43AB                      	
     304.  00:43AB                      	
     305.  00:43AB                      ; ==========================================================	
     306.  00:43AB                      	; --- draw_hex_small
     307.  00:43AB                      	; 
     308.  00:43AB                      	; Prints the value at an address as 1 digit decimal value 
     309.  00:43AB                      	; A = the value
     310.  00:43AB                      	; DE = position (relative) to put the value in PNT
     311.  00:43AB                      	; 
     312.  00:43AB                      ; ==========================================================
     313.  00:43AB                      draw_hex_small:
     314.  00:43AB  E6 0F               	and	0x0f
     315.  00:43AD  12                  	ld	(de),a
     316.  00:43AE  13                  	inc	de
     317.  00:43AF  C9                  	ret	
     318.  00:43B0                      	
     319.  00:43B0                      	
     320.  00:43B0                      ; ==========================================================	
     321.  00:43B0                      	; --- draw_hex2
     322.  00:43B0                      	; 
     323.  00:43B0                      	; Prints the value at an address as 2 digit decimal value 
     324.  00:43B0                      	; A =  the value
     325.  00:43B0                      	; DE = position (relative) to put the value in PNT
     326.  00:43B0                      	; 
     327.  00:43B0                      	; Changes: AF
     328.  00:43B0                      ; ==========================================================
     329.  00:43B0                      draw_hex2:
     330.  00:43B0  F5                  	push	af
     331.  00:43B1  E6 F0               	and	0xf0
     332.  00:43B3  0F                  	rrca
     333.  00:43B4  0F                  	rrca
     334.  00:43B5  0F                  	rrca
     335.  00:43B6  0F                  	rrca	
     336.  00:43B7  CD A0 43            	call	draw_hex
     337.  00:43BA  F1                  	pop	af
     338.  00:43BB  CD A0 43            	call	draw_hex
     339.  00:43BE  C9                  	ret
     340.  00:43BF                      	
     341.  00:43BF                      	
     342.  00:43BF                      	
     343.  00:43BF                      	
     344.  00:43BF                      
     345.  00:43BF                      ; ==========================================================	
     346.  00:43BF                      ; --- conv_decimal
     347.  00:43BF                      ; 
     348.  00:43BF                      ; converts the value at HL into a 2 digit decimal at DE 
     349.  00:43BF                      ; HL = position of the value
     350.  00:43BF                      ; DE = postion  to put the 2 digit value value 
     351.  00:43BF                      ; 
     352.  00:43BF                      ; ==========================================================	
     353.  00:43BF                      
     354.  00:43BF                      conv_decimal:
     355.  00:43BF                      
     356.  00:43BF  7E                  	ld	a,(hl)
     357.  00:43C0                      draw_decimal:
     358.  00:43C0  EB                  	ex	de,hl
     359.  00:43C1                      ;	ld	hl,_dd_tmpstring
     360.  00:43C1                      	
     361.  00:43C1  06 F6               1:	ld	b,-10
     362.  00:43C3  CD CD 43            	call	_dd_Num1
     363.  00:43C6  06 FF               	ld	b,-1
     364.  00:43C8  CD CD 43            	call	_dd_Num1
     365.  00:43CB                      
     366.  00:43CB  EB                  	ex	de,hl
     367.  00:43CC                      ;	ld	hl,_dd_tmpstring
     368.  00:43CC                      
     369.  00:43CC  C9                  	ret	
     370.  00:43CD                      _dd_Num1:	
     371.  00:43CD  0E 2F               	ld	c,"0"-1
     372.  00:43CF                      _dd_Num2:	
     373.  00:43CF  0C                  	inc	c
     374.  00:43D0  80                  	add	a,b
     375.  00:43D1  38 FC               	jr	c,_dd_Num2
     376.  00:43D3  98                  	sbc	a,b
     377.  00:43D4  71                  	ld	(hl),c
     378.  00:43D5  23                  	inc	hl
     379.  00:43D6  C9                  	ret 
     380.  00:43D7                      
     381.  00:43D7                      draw_decimal3:
     382.  00:43D7  EB                  	ex	de,hl
     383.  00:43D8  06 9C               	ld	b,-100
     384.  00:43DA  CD CD 43            	call	_dd_Num1
     385.  00:43DD  18 E2               	jr.	1b
     386.  00:43DF                      	
     387.  00:43DF                      	
     388.  00:43DF                      ;_dd_tmpstring:		
     389.  00:43DF                      ;	db	"XX",0		; temporary + delimiter
     390.  00:43DF                      
     391.  00:43DF                      ; ==========================================================	
     392.  00:43DF                      	; --- draw_box
     393.  00:43DF                      	; 
     394.  00:43DF                      	; Draw box 
     395.  00:43DF                      	; HL = position in PNT (relative)
     396.  00:43DF                      	; D = width
     397.  00:43DF                      	; E = height
     398.  00:43DF                      ; ==========================================================
     399.  00:43DF                      draw_box:
     400.  00:43DF  F3                  	di
     401.  00:43E0                      
     402.  00:43E0  01 00 20            	ld 	bc,_PNT
     403.  00:43E3  09                  	add	hl,bc
     404.  00:43E4  CD CD 45            	call	set_vdpwrite		
     405.  00:43E7                      	
     406.  00:43E7  3E 82               	ld	a,_UPLEFT		; upperleft corner
     407.  00:43E9                      
     408.  00:43E9                      draw_box_loop1:
     409.  00:43E9  42                  	ld	b,d	
     410.  00:43EA                      draw_box_loop0:
     411.  00:43EA                      
     412.  00:43EA                      	; change on last pos
     413.  00:43EA  05                  	dec	b
     414.  00:43EB  20 10               	jr.	nz,1f
     415.  00:43ED  FE 81               	cp	_HORIZONTAL
     416.  00:43EF  20 04               	jr.	nz,0f
     417.  00:43F1  3E 83               	ld	a,_UPRIGHT
     418.  00:43F3  18 08               	jr.	1f
     419.  00:43F5                      0:
     420.  00:43F5  FE 20               	cp	32
     421.  00:43F7  20 04               	jr.	nz,1f
     422.  00:43F9  3E 80               	ld	a,_VERTICAL
     423.  00:43FB  18 00               	jr.	1f
     424.  00:43FD                      	
     425.  00:43FD                      1:
     426.  00:43FD  04                  	inc	b	
     427.  00:43FE                      
     428.  00:43FE                      
     429.  00:43FE                      
     430.  00:43FE  D3 98               	out	(0x98),a
     431.  00:4400                      	
     432.  00:4400                      	; changed on pos > 1
     433.  00:4400  FE 82               	cp	_UPLEFT		; if is upleftcorner thern	
     434.  00:4402  20 04               	jr.	nz,0f
     435.  00:4404  3E 81               	ld	a,_HORIZONTAL
     436.  00:4406  18 08               	jr.	1f
     437.  00:4408                      0:	
     438.  00:4408  FE 80               	cp	_VERTICAL	; if is vertical line then space
     439.  00:440A  20 04               	jr.	nz,0f
     440.  00:440C  3E 20               	ld	a,32			; space	
     441.  00:440E  18 00               	jr.	1f
     442.  00:4410                      0:
     443.  00:4410                      1:
     444.  00:4410                      
     445.  00:4410  10 D8               	djnz	draw_box_loop0
     446.  00:4412                      
     447.  00:4412                      
     448.  00:4412                      	;loop lines
     449.  00:4412  1D                  	dec	e
     450.  00:4413  28 0E               	jr.	z,draw_box_end
     451.  00:4415                      	
     452.  00:4415  01 50 00            	ld	bc,80
     453.  00:4418  09                  	add	hl,bc
     454.  00:4419  01 00 20            	ld 	bc,_PNT
     455.  00:441C  CD CD 45            	call	set_vdpwrite
     456.  00:441F  3E 80               	ld	a,_VERTICAL			
     457.  00:4421  18 C6               	jr.	draw_box_loop1
     458.  00:4423                      
     459.  00:4423                      
     460.  00:4423                      draw_box_end:
     461.  00:4423  FB                  	ei
     462.  00:4424  C9                  	ret
     463.  00:4425                      
     464.  00:4425                      
     465.  00:4425                      
     466.  00:4425                      
     467.  00:4425                      ; ==========================================================	
     468.  00:4425                      	; --- draw_colorbox
     469.  00:4425                      	; 
     470.  00:4425                      	; Draw box 
     471.  00:4425                      	; H = x pos
     472.  00:4425                      	; L = y pos
     473.  00:4425                      	; D = width
     474.  00:4425                      	; E = height
     475.  00:4425                      ; ==========================================================
     476.  00:4425                      draw_colorbox:
     477.  00:4425                      	; --- get maskleft
     478.  00:4425  7C                  	ld	a,h
     479.  00:4426  E6 07               	and	0x07
     480.  00:4428  A7                  	and	a
     481.  00:4429  20 04               	jr.	nz,0f
     482.  00:442B  3E FF               	ld	a,255
     483.  00:442D  18 07               	jr.	1f
     484.  00:442F                      0:	
     485.  00:442F  47                  	ld	b,a
     486.  00:4430  3E FF               	ld	a,255
     487.  00:4432                      	
     488.  00:4432                      _dc_maskleft_loop:
     489.  00:4432  CB 3F               		srl	a
     490.  00:4434  10 FC               		djnz	_dc_maskleft_loop
     491.  00:4436  32 00 00            1:	ld	(cb_maskleft),a
     492.  00:4439                      
     493.  00:4439                      	; --- get maskright (7-(x+(w-1)) & 0x07)	
     494.  00:4439  7A                  	ld	a,d
     495.  00:443A  3D                  	dec	a
     496.  00:443B  84                  	add	h
     497.  00:443C  E6 07               	and	0x07
     498.  00:443E  FE 07               	cp	7
     499.  00:4440  20 04               	jr.	nz,0f
     500.  00:4442  3E 00               	ld	a,0
     501.  00:4444  18 0B               	jr.	1f
     502.  00:4446  47                  0:	ld	b,a
     503.  00:4447  3E 07               	ld	a,7
     504.  00:4449  90                  	sub	b
     505.  00:444A                      
     506.  00:444A                      
     507.  00:444A  47                  	ld	b,a
     508.  00:444B  3E FF               	ld	a,255	
     509.  00:444D                      	
     510.  00:444D                      _dc_maskright_loop:
     511.  00:444D  CB 27               		sla	a
     512.  00:444F  10 FC               		djnz	_dc_maskright_loop
     513.  00:4451  32 01 00            1:	ld	(cb_maskright),a
     514.  00:4454                      	
     515.  00:4454                      	; --- calculate the full cnt bytes to copy
     516.  00:4454  7C                  	ld	a,h
     517.  00:4455  E6 F8               	and	0xf8
     518.  00:4457  47                  	ld	b,a		; store in b the full bytes
     519.  00:4458  7C                  	ld	a,h
     520.  00:4459  82                  	add	d
     521.  00:445A  E6 F8               	and	0xf8
     522.  00:445C  90                  	sub	b
     523.  00:445D  CB 3F CB 3F CB 3F   [3]	srl	a		; divide by 8
     524.  00:4463  3D                  	dec	a		; 255 is begin and end in same byte
     525.  00:4464                      				; 0 is no full bytes to copy
     526.  00:4464                      				; >0 full bytes to copy inbetween masks
     527.  00:4464  32 02 00            	ld	(cb_fullbytes),a	
     528.  00:4467                      
     529.  00:4467                      	; --- Calculate start address
     530.  00:4467  4C                  	ld	c,h		; x in c
     531.  00:4468  45                  	ld	b,l		; y in b
     532.  00:4469  21 00 2A            	ld	hl,_CNT
     533.  00:446C  78                  	ld	a,b
     534.  00:446D  A7                  	and	a
     535.  00:446E  28 09               	jr.	z,0f
     536.  00:4470                      
     537.  00:4470                      _dc_start_loop:
     538.  00:4470  7D                  	ld	a,l
     539.  00:4471  C6 0A               	add	10		; every line adds 10 bytes to the addres
     540.  00:4473  6F                  	ld	l,a
     541.  00:4474  30 01               	jr.	nc,1f
     542.  00:4476  24                  	inc	h
     543.  00:4477                      1:
     544.  00:4477  10 F7               	djnz	_dc_start_loop	
     545.  00:4479                      0:
     546.  00:4479  79                  	ld	a,c		; add the x pos.
     547.  00:447A  E6 F8               	and	0xf8
     548.  00:447C  CB 3F CB 3F CB 3F   [3]	srl	a	
     549.  00:4482  85                  	add	l
     550.  00:4483  6F                  	ld	l,a
     551.  00:4484  30 01               	jr.	nc,1f
     552.  00:4486  24                  	inc	h
     553.  00:4487                      1:
     554.  00:4487                      	; now we have start addres in the cnt in HL
     555.  00:4487  4B                  	ld	c,e	; # lines to plot
     556.  00:4488                      	
     557.  00:4488                      	; --- get way to copy
     558.  00:4488  3A 02 00            	ld	a,(cb_fullbytes)
     559.  00:448B  FE FF               	cp	255
     560.  00:448D  28 46               	jr.	z,_cp_clip_copy
     561.  00:448F                      	
     562.  00:448F                      	; --- 'normal' copy
     563.  00:448F                      _cb_copyloop_main:	
     564.  00:448F  E5                  	push	hl
     565.  00:4490  CD EA 45            	call	set_vdpread
     566.  00:4493  DB 98               	in	a,(0x98)
     567.  00:4495  47                  	ld	b,a
     568.  00:4496  3A 00 00            	ld	a,(cb_maskleft)
     569.  00:4499  B0                  	or	b
     570.  00:449A  47                  	ld	b,a
     571.  00:449B                      	
     572.  00:449B  E1                  	pop	hl
     573.  00:449C  E5                  	push	hl
     574.  00:449D  CD CD 45            	call	set_vdpwrite
     575.  00:44A0                      	
     576.  00:44A0  78                  	ld	a,b
     577.  00:44A1  D3 98               	out	(0x98),a
     578.  00:44A3  3A 02 00            	ld	a,(cb_fullbytes)
     579.  00:44A6  A7                  	and	a
     580.  00:44A7  47                  	ld	b,a
     581.  00:44A8  E1                  	pop	hl
     582.  00:44A9  E5                  	push	hl
     583.  00:44AA  23                  	inc	hl
     584.  00:44AB  28 0B               	jr.	z,0f
     585.  00:44AD                      
     586.  00:44AD  85                  	add	a,l
     587.  00:44AE  6F                  	ld	l,a
     588.  00:44AF  30 01               	jr.	nc,9f
     589.  00:44B1  24                  	inc	h
     590.  00:44B2                      9:
     591.  00:44B2  3E FF               	ld	a,255
     592.  00:44B4                      _cb_copyloop:
     593.  00:44B4  D3 98               	out	(0x98),a
     594.  00:44B6  10 FC               	djnz	_cb_copyloop
     595.  00:44B8                      0:	
     596.  00:44B8  54                  	ld	d,h
     597.  00:44B9  5D                  	ld	e,l
     598.  00:44BA  CD EA 45            	call	set_vdpread
     599.  00:44BD  DB 98               	in	a,(0x98)
     600.  00:44BF  47                  	ld	b,a
     601.  00:44C0  3A 01 00            	ld	a,(cb_maskright)
     602.  00:44C3  B0                  	or	b
     603.  00:44C4  47                  	ld	b,a
     604.  00:44C5                      	
     605.  00:44C5  EB                  	ex	de,hl	
     606.  00:44C6  CD CD 45            	call	set_vdpwrite
     607.  00:44C9  78                  	ld	a,b	
     608.  00:44CA  D3 98               	out	(0x98),a
     609.  00:44CC                      	
     610.  00:44CC  E1                  	pop 	hl
     611.  00:44CD  11 0A 00            	ld	de,10
     612.  00:44D0  19                  	add	hl,de
     613.  00:44D1                      	
     614.  00:44D1  0D                  	dec	c
     615.  00:44D2  20 BB               	jr.	nz,_cb_copyloop_main
     616.  00:44D4                      	
     617.  00:44D4  C9                  	ret
     618.  00:44D5                      	
     619.  00:44D5                      
     620.  00:44D5                      _cp_clip_copy:
     621.  00:44D5  E5                  	push	hl
     622.  00:44D6                      
     623.  00:44D6  3A 00 00            	ld	a,(cb_maskleft)
     624.  00:44D9  47                  	ld	b,a
     625.  00:44DA  3A 01 00            	ld	a,(cb_maskright)
     626.  00:44DD  A0                  	and	b
     627.  00:44DE  47                  	ld	b,a
     628.  00:44DF                      
     629.  00:44DF  CD EA 45            	call	set_vdpread
     630.  00:44E2  DB 98               	in	a,(0x98)
     631.  00:44E4                      
     632.  00:44E4  B0                  	or	b
     633.  00:44E5  47                  	ld	b,a
     634.  00:44E6                      	
     635.  00:44E6  E1                  	pop	hl
     636.  00:44E7  E5                  	push	hl
     637.  00:44E8  CD CD 45            	call	set_vdpwrite
     638.  00:44EB                      	
     639.  00:44EB  78                  	ld	a,b
     640.  00:44EC  D3 98               	out	(0x98),a	
     641.  00:44EE                      
     642.  00:44EE  E1                  	pop 	hl
     643.  00:44EF  11 0A 00            	ld	de,10
     644.  00:44F2  19                  	add	hl,de
     645.  00:44F3                      	
     646.  00:44F3  0D                  	dec	c
     647.  00:44F4  20 DF               	jr.	nz,_cp_clip_copy	
     648.  00:44F6                      	
     649.  00:44F6  C9                  	ret
     650.  00:44F7                      
     651.  00:44F7                      ; ==========================================================	
     652.  00:44F7                      	; --- erase_colorbox
     653.  00:44F7                      	; 
     654.  00:44F7                      	; Draw box 
     655.  00:44F7                      	; H = x pos
     656.  00:44F7                      	; L = y pos
     657.  00:44F7                      	; D = width
     658.  00:44F7                      	; E = height
     659.  00:44F7                      ; ==========================================================
     660.  00:44F7                      erase_colorbox:
     661.  00:44F7                      	; --- get maskleft
     662.  00:44F7  7C                  	ld	a,h
     663.  00:44F8  E6 07               	and	0x07
     664.  00:44FA  A7                  	and	a
     665.  00:44FB  20 04               	jr.	nz,0f
     666.  00:44FD  3E FF               	ld	a,255
     667.  00:44FF  18 07               	jr.	1f
     668.  00:4501                      0:	
     669.  00:4501  47                  	ld	b,a
     670.  00:4502  3E FF               	ld	a,255
     671.  00:4504                      	
     672.  00:4504                      _ecb_maskleft_loop:
     673.  00:4504  CB 3F               		srl	a
     674.  00:4506  10 FC               		djnz	_ecb_maskleft_loop
     675.  00:4508                      1:	
     676.  00:4508  EE FF               	xor	255
     677.  00:450A  32 00 00            	ld	(cb_maskleft),a
     678.  00:450D                      
     679.  00:450D                      	; --- get maskright (7-(x+(w-1)) & 0x07)	
     680.  00:450D  7A                  	ld	a,d
     681.  00:450E  3D                  	dec	a
     682.  00:450F  84                  	add	h
     683.  00:4510  E6 07               	and	0x07
     684.  00:4512  FE 07               	cp	7
     685.  00:4514  20 04               	jr.	nz,0f
     686.  00:4516  3E 00               	ld	a,0
     687.  00:4518  18 0B               	jr.	1f
     688.  00:451A  47                  0:	ld	b,a
     689.  00:451B  3E 07               	ld	a,7
     690.  00:451D  90                  	sub	b
     691.  00:451E                      
     692.  00:451E                      
     693.  00:451E  47                  	ld	b,a
     694.  00:451F  3E FF               	ld	a,255	
     695.  00:4521                      	
     696.  00:4521                      _ecb_maskright_loop:
     697.  00:4521  CB 27               		sla	a
     698.  00:4523  10 FC               		djnz	_ecb_maskright_loop
     699.  00:4525                      1:	
     700.  00:4525  EE FF               	xor	255
     701.  00:4527  32 01 00            	ld	(cb_maskright),a
     702.  00:452A                      	
     703.  00:452A                      	; --- calculate the full cnt bytes to copy
     704.  00:452A  7C                  	ld	a,h
     705.  00:452B  E6 F8               	and	0xf8
     706.  00:452D  47                  	ld	b,a		; store in b the full bytes
     707.  00:452E  7C                  	ld	a,h
     708.  00:452F  82                  	add	d
     709.  00:4530  E6 F8               	and	0xf8
     710.  00:4532  90                  	sub	b
     711.  00:4533  CB 3F CB 3F CB 3F   [3]	srl	a		; divide by 8
     712.  00:4539  3D                  	dec	a		; 255 is begin and end in same byte
     713.  00:453A                      				; 0 is no full bytes to copy
     714.  00:453A                      				; >0 full bytes to copy inbetween masks
     715.  00:453A  32 02 00            	ld	(cb_fullbytes),a	
     716.  00:453D                      
     717.  00:453D                      	; --- Calculate start address
     718.  00:453D  4C                  	ld	c,h		; x in c
     719.  00:453E  45                  	ld	b,l		; y in b
     720.  00:453F  21 00 2A            	ld	hl,_CNT
     721.  00:4542  78                  	ld	a,b
     722.  00:4543  A7                  	and	a
     723.  00:4544  28 09               	jr.	z,0f
     724.  00:4546                      
     725.  00:4546                      _ecb_start_loop:
     726.  00:4546  7D                  	ld	a,l
     727.  00:4547  C6 0A               	add	10		; every line adds 10 bytes to the addres
     728.  00:4549  6F                  	ld	l,a
     729.  00:454A  30 01               	jr.	nc,1f
     730.  00:454C  24                  	inc	h
     731.  00:454D                      1:
     732.  00:454D  10 F7               	djnz	_ecb_start_loop	
     733.  00:454F                      0:
     734.  00:454F  79                  	ld	a,c		; add the x pos.
     735.  00:4550  E6 F8               	and	0xf8
     736.  00:4552  CB 3F CB 3F CB 3F   [3]	srl	a	
     737.  00:4558  85                  	add	l
     738.  00:4559  6F                  	ld	l,a
     739.  00:455A  30 01               	jr.	nc,1f
     740.  00:455C  24                  	inc	h
     741.  00:455D                      1:
     742.  00:455D                      	; now we have start addres in the cnt in HL
     743.  00:455D  4B                  	ld	c,e	; # lines to plot
     744.  00:455E                      	
     745.  00:455E                      	; --- get way to copy
     746.  00:455E  3A 02 00            	ld	a,(cb_fullbytes)
     747.  00:4561  FE FF               	cp	255
     748.  00:4563  28 46               	jr.	z,_ecb_clip_copy
     749.  00:4565                      	
     750.  00:4565                      	; --- 'normal' copy
     751.  00:4565                      _ecb_copyloop_main:	
     752.  00:4565  E5                  	push	hl
     753.  00:4566  CD EA 45            	call	set_vdpread
     754.  00:4569  DB 98               	in	a,(0x98)
     755.  00:456B  47                  	ld	b,a
     756.  00:456C  3A 00 00            	ld	a,(cb_maskleft)
     757.  00:456F  A0                  	and	b
     758.  00:4570  47                  	ld	b,a
     759.  00:4571                      	
     760.  00:4571  E1                  	pop	hl
     761.  00:4572  E5                  	push	hl
     762.  00:4573  CD CD 45            	call	set_vdpwrite
     763.  00:4576                      	
     764.  00:4576  78                  	ld	a,b
     765.  00:4577  D3 98               	out	(0x98),a
     766.  00:4579  3A 02 00            	ld	a,(cb_fullbytes)
     767.  00:457C  A7                  	and	a
     768.  00:457D  47                  	ld	b,a
     769.  00:457E  E1                  	pop	hl
     770.  00:457F  E5                  	push	hl
     771.  00:4580  23                  	inc	hl
     772.  00:4581  28 0B               	jr.	z,0f
     773.  00:4583                      
     774.  00:4583  85                  	add	a,l
     775.  00:4584  6F                  	ld	l,a
     776.  00:4585  30 01               	jr.	nc,9f
     777.  00:4587  24                  	inc	h
     778.  00:4588                      9:
     779.  00:4588  3E 00               	ld	a,0
     780.  00:458A                      _ecb_copyloop:
     781.  00:458A  D3 98               	out	(0x98),a
     782.  00:458C  10 FC               	djnz	_ecb_copyloop
     783.  00:458E                      0:	
     784.  00:458E  54                  	ld	d,h
     785.  00:458F  5D                  	ld	e,l
     786.  00:4590  CD EA 45            	call	set_vdpread
     787.  00:4593  DB 98               	in	a,(0x98)
     788.  00:4595  47                  	ld	b,a
     789.  00:4596  3A 01 00            	ld	a,(cb_maskright)
     790.  00:4599  A0                  	and	b
     791.  00:459A  47                  	ld	b,a
     792.  00:459B                      	
     793.  00:459B  EB                  	ex	de,hl	
     794.  00:459C  CD CD 45            	call	set_vdpwrite
     795.  00:459F  78                  	ld	a,b	
     796.  00:45A0  D3 98               	out	(0x98),a
     797.  00:45A2                      	
     798.  00:45A2  E1                  	pop 	hl
     799.  00:45A3  11 0A 00            	ld	de,10
     800.  00:45A6  19                  	add	hl,de
     801.  00:45A7                      	
     802.  00:45A7  0D                  	dec	c
     803.  00:45A8  20 BB               	jr.	nz,_ecb_copyloop_main
     804.  00:45AA                      	
     805.  00:45AA  C9                  	ret
     806.  00:45AB                      	
     807.  00:45AB                      
     808.  00:45AB                      _ecb_clip_copy:
     809.  00:45AB  E5                  	push	hl
     810.  00:45AC                      
     811.  00:45AC  3A 00 00            	ld	a,(cb_maskleft)
     812.  00:45AF  47                  	ld	b,a
     813.  00:45B0  3A 01 00            	ld	a,(cb_maskright)
     814.  00:45B3  B0                  	or	b
     815.  00:45B4  47                  	ld	b,a
     816.  00:45B5                      
     817.  00:45B5  CD EA 45            	call	set_vdpread
     818.  00:45B8  DB 98               	in	a,(0x98)
     819.  00:45BA                      
     820.  00:45BA  A0                  	and	b
     821.  00:45BB  47                  	ld	b,a
     822.  00:45BC                      	
     823.  00:45BC  E1                  	pop	hl
     824.  00:45BD  E5                  	push	hl
     825.  00:45BE  CD CD 45            	call	set_vdpwrite
     826.  00:45C1                      	
     827.  00:45C1  78                  	ld	a,b
     828.  00:45C2  D3 98               	out	(0x98),a	
     829.  00:45C4                      
     830.  00:45C4  E1                  	pop 	hl
     831.  00:45C5  11 0A 00            	ld	de,10
     832.  00:45C8  19                  	add	hl,de
     833.  00:45C9                      	
     834.  00:45C9  0D                  	dec	c
     835.  00:45CA  20 DF               	jr.	nz,_ecb_clip_copy	
     836.  00:45CC                      	
     837.  00:45CC  C9                  	ret
     838.  00:45CD                      
     839.  00:45CD                      	; --- set_vdpwrite
     840.  00:45CD                      	; sets up the vdp address in HL to write to
     841.  00:45CD                      	; enables ISR and changes a
     842.  00:45CD                      
     843.  00:45CD                      set_vdpwrite:
     844.  00:45CD  AF                  	xor	a
     845.  00:45CE  CB 04               	rlc	h
     846.  00:45D0  17                  	rla
     847.  00:45D1  CB 04               	rlc	h
     848.  00:45D3  17                  	rla
     849.  00:45D4  CB 3C               	srl	h
     850.  00:45D6  CB 3C               	srl	h
     851.  00:45D8  F3                  	di
     852.  00:45D9  D3 99               	out	(#99),a
     853.  00:45DB  3E 8E               	ld	a,14+128
     854.  00:45DD  D3 99               	out	(#99),a
     855.  00:45DF  7D                  	ld	a,l
     856.  00:45E0  00                  	nop
     857.  00:45E1  D3 99               	out	(#99),a
     858.  00:45E3  7C                  	ld	a,h
     859.  00:45E4  F6 40               	or	64
     860.  00:45E6  FB                  	ei
     861.  00:45E7  D3 99               	out	(#99),a
     862.  00:45E9  C9                  	ret
     863.  00:45EA                      
     864.  00:45EA                      
     865.  00:45EA                      	; --- set_vdpwrite
     866.  00:45EA                      	; sets up the vdp address in HL to write to
     867.  00:45EA                      	; enables ISR and changes a
     868.  00:45EA                      
     869.  00:45EA                      set_vdpread:
     870.  00:45EA  AF                  	xor	a
     871.  00:45EB  CB 04               	rlc	h
     872.  00:45ED  17                  	rla
     873.  00:45EE  CB 04               	rlc	h
     874.  00:45F0  17                  	rla
     875.  00:45F1  CB 3C               	srl	h
     876.  00:45F3  CB 3C               	srl	h
     877.  00:45F5  F3                  	di
     878.  00:45F6  D3 99               	out	(#99),a
     879.  00:45F8  3E 8E               	ld	a,14+128
     880.  00:45FA  D3 99               	out	(#99),a
     881.  00:45FC  7D                  	ld	a,l
     882.  00:45FD  00                  	nop
     883.  00:45FE  D3 99               	out	(#99),a
     884.  00:4600  7C                  	ld	a,h
     885.  00:4601  D3 99               	out	(#99),a
     886.  00:4603  FB                  	ei
     887.  00:4604  C9                  	ret
     888.  00:4605                      
     889.  00:4605                      
     890.  00:4605                      ; --- Colorbox function variables
     891.  00:4605  (00:0000)           cb_maskleft:	#1
     892.  00:4605  (00:0001)           cb_maskright:	#1
     893.  00:4605  (00:0002)           cb_fullbytes:	#1
     894.  00:4605  (00:0003)           cb_status:		#1
     895.  00:4605                      
     896.  00:4605                      
     897.  00:4605                      	; --- init_font
     898.  00:4605                      	;
     899.  00:4605                      	; Init the font in the PGT.
     900.  00:4605                      
     901.  00:4605                      init_font:
     902.  00:4605                      
     903.  00:4605  F3                  	di
     904.  00:4606                      	; relocate the PGT (old is at 0x1000)
     905.  00:4606                      	; new is at 0x9000
     906.  00:4606                      ;	ld	a,00010010b
     907.  00:4606                      ;	out	(0x99),a
     908.  00:4606                      ;	ld	a,128+4	
     909.  00:4606                      ;	out	(0x99),a
     910.  00:4606                      
     911.  00:4606  21 00 90            	ld	hl,0x9000
     912.  00:4609  CD CD 45            	call	set_vdpwrite
     913.  00:460C                      	
     914.  00:460C  F3                  	di
     915.  00:460D  3E 08               	ld a,8		; loop 8 times
     916.  00:460F  0E 98               	ld c,0x98
     917.  00:4611                      
     918.  00:4611  21 06 5D            	ld hl,font_data
     919.  00:4614                      
     920.  00:4614                      _fontloop:
     921.  00:4614  06 FF               		ld b,255		; subloop 255 times
     922.  00:4616  ED B3               		otir
     923.  00:4618  3D                  	dec a
     924.  00:4619  20 F9               	jr. nz,_fontloop
     925.  00:461B                      	
     926.  00:461B  FB                  	ei
     927.  00:461C  C9                  	ret
     580   00:461D                      	include	"..\code\ttreplayFM.asm"
       1.  00:461D                      ;=================================
       2.  00:461D                      ; TriloTracker Re-player FM
       3.  00:461D                      ; 
       4.  00:461D                      ; Functions:
       5.  00:461D                      ; 	replay_init
       6.  00:461D                      ;	replay_pause
       7.  00:461D                      ;	replay_resume
       8.  00:461D                      ;	replay_fade_out
       9.  00:461D                      ;	replay_set_FM_balance
      10.  00:461D                      ;	replay_set_PSG_balance
      11.  00:461D                      ;	replay_equalization_on
      12.  00:461D                      ;	replay_equalization_off
      13.  00:461D                      ;	replay_load_song
      14.  00:461D                      ;================================
      15.  00:461D                      ; Compile options:
      16.  00:461D                      define MSX2				; Used in speed equalization
      17.  00:461D                      
      18.  00:461D                      ;define TAIL_ON			; Limit volume to 1
      19.  00:461D                      
      20.  00:461D                      ;--- Only set 1 of the settings below for the period table
      21.  00:461D                      define PERIOD_A440		; Modern 
      22.  00:461D                      ;define PERIOD_A432		; Earth
      23.  00:461D                      ;define PERIOD_A445		; Konami
      24.  00:461D                      ;define PERIOD_A448		; Classical
      25.  00:461D                      
      26.  00:461D                      define SFXPLAY_ENABLED	; Enable the SFX functionality.
      27.  00:461D                      
      28.  00:461D                      ;---- Performance option
      29.  00:461D                      ;define TREMOLO_OFF		; removes tremolo code making the replayer a little bit faster
      30.  00:461D                      
      31.  00:461D  (00:007C)           FM_WRITE:	equ	0x7c	; port to set fm reg nr.
      32.  00:461D  (00:007D)           FM_DATA:	equ	0x7d	; port to set fm data for reg	
      33.  00:461D                      ;===============================
      34.  00:461D  (00:0060)           _REL:		equ	96	; = release
      35.  00:461D  (00:0061)           _SUS:		equ	97	; = sustain
      36.  00:461D  (00:0062)           _VOL:		equ	98	; = volume 0
      37.  00:461D  (00:0072)           _INS:		equ	113+1	; = instrument 1
      38.  00:461D  (00:0091)           _CMD:		equ	144+1	; = effect 0
      39.  00:461D  (00:00B8)           _SPC:		equ	184	; = special commands  [NOT USED]
      40.  00:461D  (00:00BF)           _EOT:		equ	191	; = end of track
      41.  00:461D  (00:00C0)           _WAIT:	equ	192	; = wait 1
      42.  00:461D                      	
      43.  00:461D  (00E3)              	ALIGN 256
      44.  00:4700                      
      45.  00:4700                      MACROACTIONLIST:
      46.  00:4700  C3 1C 52            	jp	macro_volume_same		; 0
      47.  00:4703  00                  	nop
      48.  00:4704  C3 BA 51            	jp  	macro_mixer			; 2
      49.  00:4707  00                  	nop
      50.  00:4708  C3 C7 51            	jp  	macro_tone_add		; 4			
      51.  00:470B  00                  	nop
      52.  00:470C  C3 15 52            	jp  	macro_stop			; 6			
      53.  00:470F  00                  	nop
      54.  00:4710  C3 22 52            	jp  	macro_vol_base		; 8
      55.  00:4713  00                  	nop
      56.  00:4714  C3 2A 52            	jp  	macro_vol_add		; a
      57.  00:4717  00                  	nop
      58.  00:4718  C3 3C 52            	jp  	macro_vol_sub		; c
      59.  00:471B  00                  	nop
      60.  00:471C  C3 DA 51            	jp  	macro_noise_base		; e
      61.  00:471F  00                  	nop
      62.  00:4720  C3 E5 51            	jp  	macro_noise_add		; 10		; unused!!!	
      63.  00:4723  00                  	nop
      64.  00:4724  C3 E5 51            	jp  	macro_noise_add		; 12		
      65.  00:4727  00                  	nop
      66.  00:4728  C3 F3 51            	jp  	macro_noise_vol		; 14
      67.  00:472B  00                  	nop
      68.  00:472C  C3 F7 51            	jp  	macro_voice			; 16
      69.  00:472F  00                  	nop
      70.  00:4730  C3 0C 52            	jp  	macro_loop			; 18
      71.  00:4733  00                  	nop
      72.  00:4734  C3 04 52            	jp		macro_envelope		; 1a
      73.  00:4737  00                  	nop
      74.  00:4738  C3 FF 51            	jp		macro_envelope_shape	; 1c
      75.  00:473B                      
      76.  00:473B                      
      77.  00:473B                      PROCESS_CMDLIST:
      78.  00:473B                      	; This list only contains the primary commands.
      79.  00:473B  C3 A0 53            	jp	process_cmd3_port_tone
      80.  00:473E  00                  	nop
      81.  00:473F  C3 3B 54            	jp	process_cmd5_vibrato_port_tone
      82.  00:4742  00                  	nop
      83.  00:4743  C3 8E 53            	jp	process_cmd2_port_down
      84.  00:4746  00                  	nop		
      85.  00:4747  C3 0B 53            	jp	process_cmd0_arpeggio
      86.  00:474A  00                  	nop			
      87.  00:474B  C3 04 54            	jp	process_cmd4_vibrato
      88.  00:474E  00                  	nop		
      89.  00:474F  C3 7C 53            	jp	process_cmd1_port_up
      90.  00:4752  00                  	nop	
      91.  00:4753  C3 41 54            	jp	process_cmd6_vibrato_vol
      92.  00:4756  00                  	nop		
      93.  00:4757  C3 47 54            	jp	process_cmd7_vol_slide
      94.  00:475A  00                  	nop
      95.  00:475B  C3 E1 53            	jp	process_cmd8_tremolo
      96.  00:475E  00                  	nop
      97.  00:475F  C3 73 54            	jp	process_cmd9_note_cut	
      98.  00:4762  00                  	nop	
      99.  00:4763  C3 80 54            	jp	process_cmd10_note_delay
     100.  00:4766  00                  	nop			
     101.  00:4767  C3 FF 53            	jp	process_cmd4_vibrato_extended
     102.  00:476A                      DECODE_CMDLIST:
     103.  00:476A                      	; Primary
     104.  00:476A  C3 EF 4F            	jp	decode_cmd3_port_tone
     105.  00:476D  00                  	nop	
     106.  00:476E  C3 7D 50            	jp	decode_cmd5_vibrato_port_tone
     107.  00:4771  00                  	nop	
     108.  00:4772  C3 E4 4F            	jp	decode_cmd2_port_down
     109.  00:4775  00                  	nop	
     110.  00:4776  C3 C6 4F            	jp	decode_cmd0_arpeggio
     111.  00:4779  00                  	nop	
     112.  00:477A  C3 4F 50            	jp	decode_cmd4_vibrato
     113.  00:477D  00                  	nop	
     114.  00:477E  C3 D9 4F            	jp	decode_cmd1_port_up
     115.  00:4781  00                  	nop	
     116.  00:4782  C3 94 50            	jp	decode_cmd6_vibrato_vol	
     117.  00:4785  00                  	nop	
     118.  00:4786  C3 94 50            	jp	decode_cmd7_vol_slide
     119.  00:4789  00                  	nop	
     120.  00:478A  C3 4F 50            	jp	decode_cmd8_tremolo
     121.  00:478D  00                  	nop	
     122.  00:478E  C3 A4 50            	jp	decode_cmd9_note_cut
     123.  00:4791  00                  	nop	
     124.  00:4792  C3 AF 50            	jp	decode_cmd10_note_delay
     125.  00:4795  00                  	nop	
     126.  00:4796                      	; Secondary
     127.  00:4796  C3 CD 50            	jp	decode_cmd11_command_end
     128.  00:4799  00                  	nop	
     129.  00:479A  C3 D2 50            	jp	decode_cmd12_drum
     130.  00:479D  00                  	nop	
     131.  00:479E  C3 E9 50            	jp	decode_cmd13_arp_speed
     132.  00:47A1  00                  	nop	
     133.  00:47A2  C3 EF 50            	jp	decode_cmd14_fine_up
     134.  00:47A5  00                  	nop	
     135.  00:47A6  C3 F9 50            	jp	decode_cmd15_fine_down
     136.  00:47A9  00                  	nop	
     137.  00:47AA  C3 03 51            	jp	decode_cmd16_notelink
     138.  00:47AD  00                  	nop	
     139.  00:47AE  C3 0A 51            	jp	decode_cmd17_track_detune
     140.  00:47B1  00                  	nop	
     141.  00:47B2  C3 29 51            	jp	decode_cmd18_trigger
     142.  00:47B5  00                  	nop	
     143.  00:47B6  C3 2F 51            	jp	decode_cmd19_speed
     144.  00:47B9  00                  	nop	
     145.  00:47BA                      	; SoundChip Specific
     146.  00:47BA  C3 3F 51            	jp	decode_cmd20_tone_panning
     147.  00:47BD  00                  	nop	
     148.  00:47BE  C3 3F 51            	jp	decode_cmd21_noise_panning
     149.  00:47C1  00                  	nop	
     150.  00:47C2  C3 42 51            	jp	decode_cmd22_brightness	
     151.  00:47C5                      
     152.  00:47C5                      DRUM_MACRO_LIST:
     153.  00:47C5  C3 AB 54            	jp	_drum_stop		;2
     154.  00:47C8  00                  	nop	
     155.  00:47C9  C3 B3 54            	jp	_drum_vol_bd	;4
     156.  00:47CC  00                  	nop	
     157.  00:47CD  C3 BB 54            	jp	_drum_vol_sn	;6
     158.  00:47D0  00                  	nop	
     159.  00:47D1  C3 CA 54            	jp	_drum_vol_hh	;8
     160.  00:47D4  00                  	nop	
     161.  00:47D5  C3 D9 54            	jp	_drum_vol_snhh	;a
     162.  00:47D8  00                  	nop	
     163.  00:47D9  C3 E1 54            	jp	_drum_vol_cy	;c
     164.  00:47DC  00                  	nop	
     165.  00:47DD  C3 F0 54            	jp	_drum_vol_tt	;e
     166.  00:47E0  00                  	nop	
     167.  00:47E1  C3 FF 54            	jp	_drum_vol_cytt	;10
     168.  00:47E4  00                  	nop	
     169.  00:47E5  C3 07 55            	jp	_drum_note_bd	;12
     170.  00:47E8  00                  	nop	
     171.  00:47E9  C3 14 55            	jp	_drum_tone_bd	;14
     172.  00:47EC  00                  	nop	
     173.  00:47ED  C3 21 55            	jp	_drum_note_snhh	;16
     174.  00:47F0  00                  	nop	
     175.  00:47F1  C3 2E 55            	jp	_drum_tone_snhh	;18
     176.  00:47F4  00                  	nop	
     177.  00:47F5  C3 3E 55            	jp	_drum_note_cytt	;1a
     178.  00:47F8  00                  	nop	
     179.  00:47F9  C3 4B 55            	jp	_drum_tone_cytt	;1c
     180.  00:47FC  00                  	nop	
     181.  00:47FD  C3 5B 55            	jp	_drum_percussion	;1e
     182.  00:4800                      
     183.  00:4800  (0000)              	ALIGN 256
     184.  00:4800                      
     185.  00:4800                      TRACK_Vibrato_sine:	; Sine table used for tremelo and vibrato
     186.  00:4800                            db 	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00		      ; depth 	1
     186.  00:4800  00 00 00 00 00 00 00 00 00 00 01 01 01 01 01 01 
     186.  00:4810  01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00 
     187.  00:4820                            db 	$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$01,$02,$02,$02,$02,$02,$02,$01,$01,$01,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00		      ; depth 	2
     187.  00:4820  00 00 00 00 00 00 00 01 01 01 01 01 01 02 02 02 
     187.  00:4830  02 02 02 01 01 01 01 01 01 00 00 00 00 00 00 00 
     188.  00:4840                            db 	$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$02,$02,$02,$02,$03,$03,$03,$03,$02,$02,$02,$02,$01,$01,$01,$01,$01,$00,$00,$00,$00,$00		      ; depth 	3
     188.  00:4840  00 00 00 00 00 01 01 01 01 01 02 02 02 02 03 03 
     188.  00:4850  03 03 02 02 02 02 01 01 01 01 01 00 00 00 00 00 
     189.  00:4860                            db 	$00,$00,$00,$00,$00,$01,$01,$01,$01,$02,$02,$02,$03,$03,$04,$04,$04,$04,$03,$03,$02,$02,$02,$01,$01,$01,$01,$00,$00,$00,$00,$00		      ; depth 	4
     189.  00:4860  00 00 00 00 00 01 01 01 01 02 02 02 03 03 04 04 
     189.  00:4870  04 04 03 03 02 02 02 01 01 01 01 00 00 00 00 00 
     190.  00:4880                            db 	$00,$00,$00,$00,$01,$01,$01,$01,$02,$02,$03,$03,$04,$04,$05,$05,$05,$05,$04,$04,$03,$03,$02,$02,$01,$01,$01,$01,$00,$00,$00,$00		      ; depth 	5
     190.  00:4880  00 00 00 00 01 01 01 01 02 02 03 03 04 04 05 05 
     190.  00:4890  05 05 04 04 03 03 02 02 01 01 01 01 00 00 00 00 
     191.  00:48A0                            db 	$00,$00,$00,$00,$01,$01,$01,$02,$02,$03,$03,$04,$04,$05,$05,$06,$06,$05,$05,$04,$04,$03,$03,$02,$02,$01,$01,$01,$00,$00,$00,$00		      ; depth 	6
     191.  00:48A0  00 00 00 00 01 01 01 02 02 03 03 04 04 05 05 06 
     191.  00:48B0  06 05 05 04 04 03 03 02 02 01 01 01 00 00 00 00 
     192.  00:48C0                            db 	$00,$00,$00,$01,$01,$01,$02,$02,$03,$04,$04,$05,$06,$06,$07,$08,$08,$07,$06,$06,$05,$04,$04,$03,$02,$02,$01,$01,$01,$00,$00,$00		      ; depth 	7
     192.  00:48C0  00 00 00 01 01 01 02 02 03 04 04 05 06 06 07 08 
     192.  00:48D0  08 07 06 06 05 04 04 03 02 02 01 01 01 00 00 00 
     193.  00:48E0                            db 	$00,$00,$01,$01,$01,$02,$03,$04,$05,$06,$07,$08,$09,$0A,$0C,$0D,$0D,$0C,$0A,$09,$08,$07,$06,$05,$04,$03,$02,$01,$01,$01,$00,$00		      ; depth 	8
     193.  00:48E0  00 00 01 01 01 02 03 04 05 06 07 08 09 0A 0C 0D 
     193.  00:48F0  0D 0C 0A 09 08 07 06 05 04 03 02 01 01 01 00 00 
     194.  00:4900                      TRACK_Vibrato_sine_extended:	; Sine table used for tremelo and vibrato	
     195.  00:4900                            db 	$00,$00,$01,$02,$02,$04,$05,$06,$08,$09,$0B,$0D,$0F,$11,$13,$15,$15,$13,$11,$0F,$0D,$0B,$09,$08,$06,$05,$04,$02,$02,$01,$00,$00		      ; depth 	9
     195.  00:4900  00 00 01 02 02 04 05 06 08 09 0B 0D 0F 11 13 15 
     195.  00:4910  15 13 11 0F 0D 0B 09 08 06 05 04 02 02 01 00 00 
     196.  00:4920                            db 	$00,$01,$01,$02,$04,$05,$07,$09,$0B,$0E,$10,$13,$16,$19,$1C,$1F,$1F,$1C,$19,$16,$13,$10,$0E,$0B,$09,$07,$05,$04,$02,$01,$01,$00		      ; depth 	A
     196.  00:4920  00 01 01 02 04 05 07 09 0B 0E 10 13 16 19 1C 1F 
     196.  00:4930  1F 1C 19 16 13 10 0E 0B 09 07 05 04 02 01 01 00 
     197.  00:4940                            db 	$00,$01,$02,$03,$05,$08,$0B,$0E,$11,$15,$19,$1D,$21,$26,$2B,$2F,$2F,$2B,$26,$21,$1D,$19,$15,$11,$0E,$0B,$08,$05,$03,$02,$01,$00		      ; depth 	B
     197.  00:4940  00 01 02 03 05 08 0B 0E 11 15 19 1D 21 26 2B 2F 
     197.  00:4950  2F 2B 26 21 1D 19 15 11 0E 0B 08 05 03 02 01 00 
     198.  00:4960                            db 	$01,$01,$03,$05,$07,$0B,$0E,$12,$17,$1C,$21,$27,$2D,$33,$39,$3F,$3F,$39,$33,$2D,$27,$21,$1C,$17,$12,$0E,$0B,$07,$05,$03,$01,$01		      ; depth 	C
     198.  00:4960  01 01 03 05 07 0B 0E 12 17 1C 21 27 2D 33 39 3F 
     198.  00:4970  3F 39 33 2D 27 21 1C 17 12 0E 0B 07 05 03 01 01 
     199.  00:4980                      
     200.  00:4980                      
     201.  00:4980                      
     202.  00:4980                      _Default_Registers:
     203.  00:4980                      	db	$00,$ff,$00,$ff,$00,$ff,$00,$ff,$00,$ff,$00,$ff,$00,$ff,$00,$ff	; Voice reg
     203.  00:4980  00 FF 00 FF 00 FF 00 FF 00 FF 00 FF 00 FF 00 FF 
     204.  00:4990  00 00 FF FF 00 FF   	db	$00,$00,$ff,$ff,$00,$ff								; Chan A Tone + vol
     205.  00:4996  00 00 FF FF 00 FF   	db	$00,$00,$ff,$ff,$00,$ff
     206.  00:499C  00 00 FF FF 00 FF   	db	$00,$00,$ff,$ff,$00,$ff
     207.  00:49A2  00 00 FF FF 00 FF   	db	$00,$00,$ff,$ff,$00,$ff
     208.  00:49A8  00 00 FF FF 00 FF   	db	$00,$00,$ff,$ff,$00,$ff
     209.  00:49AE  00 00 FF FF 00 FF   	db	$00,$00,$ff,$ff,$00,$ff								; Chan F Tone + vol
     210.  00:49B4                      _DRUM_Default:
     211.  00:49B4                      	; values taken from XAK3 intro. Used the most used values as default
     212.  00:49B4  E4 04               	dw	0x04E4		; Bass drum
     213.  00:49B6  00 00               	dw	0x0000
     214.  00:49B8  00                  	db	0x00			; vol
     215.  00:49B9  FF                  	db	0xff
     216.  00:49BA  20 01               	dw	0x0120		; Snare + HiHat
     217.  00:49BC  00 00               	dw	0x0000
     218.  00:49BE  00                  	db	0x00			; vol
     219.  00:49BF  FF                  	db	0xff
     220.  00:49C0  AB 00               	dw	0x00AB		; Cymbal + TomTom
     221.  00:49C2  00 00               	dw	0x0000
     222.  00:49C4  00                  	db	0x00			; vol
     223.  00:49C5  FF                  	db	0xff
     224.  00:49C6  20                  	db	0x20			; FM drm
     225.  00:49C7  FF                  	db	0xff
     226.  00:49C8                      
     227.  00:49C8                      
     228.  00:49C8                      ;===========================================================
     229.  00:49C8                      ; ---	replay_init
     230.  00:49C8                      ; Initialize re-player data
     231.  00:49C8                      ; Only call this on start-up
     232.  00:49C8                      ; Input: none
     233.  00:49C8                      ;===========================================================
     234.  00:49C8                      replay_init:
     235.  00:49C8  3E 04               	ld	a,4
     236.  00:49CA  CD 4A 4A            	call	replay_set_FM_balance
     237.  00:49CD  3E 04               	ld	a,4
     238.  00:49CF  CD 57 4A            	call	replay_set_PSG_balance
     239.  00:49D2                      
     240.  00:49D2  CD 7F 4A            	call	replay_equalization_off
     241.  00:49D5                      
     242.  00:49D5  AF                  	xor	a
     243.  00:49D6  32 22 C0            	ld	(replay_mode),a	
     244.  00:49D9  32 32 C0            	ld	(equalization_cnt),a
     245.  00:49DC  32 31 C0            	ld	(equalization_freq),a
     246.  00:49DF                      
     247.  00:49DF                      	;--- Detect CPU
     248.  00:49DF  21 2D 00            	ld 	hl,$002D
     249.  00:49E2  3A C1 FC            	ld    a, ($fcc1)              ; (EXPTBL)
     250.  00:49E5  CD 0C 00            	call  $0C                     ; RDSLT
     251.  00:49E8                      
     252.  00:49E8  FE 03                  	cp 	3
     253.  00:49EA  38 06                  	jr.	c,.z80
     254.  00:49EC  3E 01               	ld	a,1
     255.  00:49EE  32 2F C0            	ld	(r800),a			; 0 = z80 other is R800
     256.  00:49F1  C9                  	ret
     257.  00:49F2                      .z80:
     258.  00:49F2  AF                  	xor	a
     259.  00:49F3  32 2F C0            	ld	(r800),a
     260.  00:49F6                      
     261.  00:49F6                      	;---- init YM2413
     262.  00:49F6  5F                  	ld	e,a
     263.  00:49F7  AF                  	xor	a
     264.  00:49F8  57                  	ld	d,a
     265.  00:49F9  06 39               	ld	b,$39
     266.  00:49FB  21 22 C0            	ld	hl,replay_mode
     267.  00:49FE                      _replay_init_loop:
     268.  00:49FE  F5                  	push 	af
     269.  00:49FF  CD 66 56            	call	_writeFM
     270.  00:4A02  F1                  	pop	af
     271.  00:4A03  3C                  	inc a
     272.  00:4A04  10 F8               	djnz	_replay_init_loop
     273.  00:4A06                      
     274.  00:4A06  C9                  	ret
     275.  00:4A07                      
     276.  00:4A07                      ;===========================================================
     277.  00:4A07                      ; ---	replay_pause
     278.  00:4A07                      ; Pause music playback
     279.  00:4A07                      ; 
     280.  00:4A07                      ; Input: none
     281.  00:4A07                      ;===========================================================
     282.  00:4A07                      replay_pause:
     283.  00:4A07                      	;-- stop decoding and processing music data
     284.  00:4A07  AF                  	xor	a
     285.  00:4A08  32 22 C0            	ld	(replay_mode),a	
     286.  00:4A0B                      	;--- Silence the SN7 PSG
     287.  00:4A0B  32 73 C1            	ld	(PSG_regVOLA),a
     288.  00:4A0E  32 74 C1            	ld	(PSG_regVOLB),a
     289.  00:4A11  32 75 C1            	ld	(PSG_regVOLC),a
     290.  00:4A14                      
     291.  00:4A14  32 C0 C1            	ld	(FM_DRUM),a
     292.  00:4A17  3E 0F               	ld	a,$0f
     293.  00:4A19  32 8E C1            	ld	(FM_regVOLA),a
     294.  00:4A1C  32 94 C1            	ld	(FM_regVOLB),a
     295.  00:4A1F  32 9A C1            	ld	(FM_regVOLC),a
     296.  00:4A22  32 A0 C1            	ld	(FM_regVOLD),a
     297.  00:4A25  32 A6 C1            	ld	(FM_regVOLE),a
     298.  00:4A28  32 AC C1            	ld	(FM_regVOLF),a
     299.  00:4A2B                      
     300.  00:4A2B                      
     301.  00:4A2B                      	; release key on all FM channels
     302.  00:4A2B  06 09               	ld	b,9
     303.  00:4A2D  21 8B C1            	ld	hl,FM_Registers+1
     304.  00:4A30  11 06 00            	ld	de,6
     305.  00:4A33  AF                  	xor	a
     306.  00:4A34                      _r_pause_loop:
     307.  00:4A34  77                  	ld	(hl),a
     308.  00:4A35  19                  	add	hl,de
     309.  00:4A36  10 FC               	djnz	_r_pause_loop
     310.  00:4A38  C9                  	ret	
     311.  00:4A39                      	
     312.  00:4A39                      
     313.  00:4A39                      ;===========================================================
     314.  00:4A39                      ; ---	replay_resume
     315.  00:4A39                      ; Resume music playback
     316.  00:4A39                      ; 
     317.  00:4A39                      ; Input: none
     318.  00:4A39                      ;===========================================================
     319.  00:4A39                      replay_resume:
     320.  00:4A39                      	;-- re-enable music decoding and processing
     321.  00:4A39  3E 01               	ld	a,1
     322.  00:4A3B  32 22 C0            	ld	(replay_mode),a
     323.  00:4A3E  C9                  	ret
     324.  00:4A3F                      
     325.  00:4A3F                      
     326.  00:4A3F                      ;===========================================================
     327.  00:4A3F                      ; ---	replay_fade_out
     328.  00:4A3F                      ; Fade out the music. 
     329.  00:4A3F                      ; Once the sound is silence the replayer is paused.
     330.  00:4A3F                      ;
     331.  00:4A3F                      ; in: [A] fade speed (1 - 255)
     332.  00:4A3F                      ;===========================================================	
     333.  00:4A3F                      replay_fade_out:
     334.  00:4A3F  32 25 C0            	ld	(replay_fade),a
     335.  00:4A42  32 26 C0            	ld	(replay_fade_timer),a
     336.  00:4A45  AF                  	xor	a
     337.  00:4A46  32 27 C0            	ld	(replay_fade_vol),a
     338.  00:4A49  C9                  	ret
     339.  00:4A4A                      
     340.  00:4A4A                      
     341.  00:4A4A                      	
     342.  00:4A4A                      ;===========================================================
     343.  00:4A4A                      ; ---	replay_set_FM_balance
     344.  00:4A4A                      ; Set the main volume for the FM chip. This enables for
     345.  00:4A4A                      ; setting the balance between FM and PSG as some MSX models 
     346.  00:4A4A                      ; default balance differs. 
     347.  00:4A4A                      ;
     348.  00:4A4A                      ; in: [A] master volume (0-4) 0=75% volume, 4=100% volume. 
     349.  00:4A4A                      ;===========================================================	
     350.  00:4A4A                      replay_set_FM_balance:
     351.  00:4A4A  FE 05               	cp	5	; limit 
     352.  00:4A4C  D0                  	ret	nc
     353.  00:4A4D  21 F6 57            	ld	hl,_VOLUME_TABLE_FM-64
     354.  00:4A50  CD 64 4A            	call	_getnewbalancebase
     355.  00:4A53  22 05 C0            	ld	(replay_mainFMvol),hl	
     356.  00:4A56  C9                  	ret
     357.  00:4A57                      	
     358.  00:4A57                      ;===========================================================
     359.  00:4A57                      ; ---	replay_set_PSG_balance
     360.  00:4A57                      ; Set the main volume for the PSG chip. This enables for
     361.  00:4A57                      ; setting the balance between FM and PSG as some MSX models 
     362.  00:4A57                      ; default balance differs. 
     363.  00:4A57                      ;
     364.  00:4A57                      ; in: [A] master volume (0-8) 0=75% volume, 4=100% volume. 
     365.  00:4A57                      ;===========================================================	
     366.  00:4A57                      replay_set_PSG_balance:
     367.  00:4A57  FE 05               	cp	5	; limit 
     368.  00:4A59  D0                  	ret	nc
     369.  00:4A5A  21 B6 56            	ld	hl,_VOLUME_TABLE_PSG-64
     370.  00:4A5D  CD 64 4A            	call	_getnewbalancebase
     371.  00:4A60  22 03 C0            	ld	(replay_mainPSGvol),hl	
     372.  00:4A63  C9                  	ret
     373.  00:4A64                      	
     374.  00:4A64                      _getnewbalancebase:
     375.  00:4A64  87                  	add	a		; times 16
     376.  00:4A65  87                  	add	a
     377.  00:4A66  87                  	add	a
     378.  00:4A67  87                  	add	a
     379.  00:4A68  85                  	add	a,l
     380.  00:4A69  6F                  	ld	l,a
     381.  00:4A6A  D0                  	ret 	nc
     382.  00:4A6B  24                  	inc	h
     383.  00:4A6C  C9                  	ret
     384.  00:4A6D                      	
     385.  00:4A6D                      ;===========================================================
     386.  00:4A6D                      ; ---	replay_equalization_on
     387.  00:4A6D                      ; Enables the speed equalization. 
     388.  00:4A6D                      ; This to enable same speed playback on 50 and 60Hz. 
     389.  00:4A6D                      ;===========================================================	
     390.  00:4A6D                      replay_equalization_on:
     391.  00:4A6D  3E 01               	ld	a,1
     392.  00:4A6F                      IFDEF MSX2
     393.  00:4A6F                      	;--- Only enable if in 60Hz mode
     394.  00:4A6F  3A E8 FF            	ld	a,($FFE8)	; get mirror of VDP reg# 9
     395.  00:4A72  E6 02               	and	00000010b
     396.  00:4A74  EE 02               	xor	00000010b
     397.  00:4A76                      ENDIF
     398.  00:4A76  32 31 C0            	ld	(equalization_freq),a
     399.  00:4A79  3E 01               	ld	a,1
     400.  00:4A7B  32 32 C0            	ld	(equalization_cnt),a
     401.  00:4A7E  C9                  	ret	
     402.  00:4A7F                      
     403.  00:4A7F                      ;===========================================================
     404.  00:4A7F                      ; ---	replay_equalization_off
     405.  00:4A7F                      ; Disables the speed equalization. 
     406.  00:4A7F                      ; This to enable same speed playback on 50 and 60Hz. 
     407.  00:4A7F                      ;===========================================================	
     408.  00:4A7F                      replay_equalization_off:
     409.  00:4A7F  AF                  	xor	a
     410.  00:4A80  32 31 C0            	ld	(equalization_freq),a
     411.  00:4A83  3E 01               	ld	a,1
     412.  00:4A85  32 32 C0            	ld	(equalization_cnt),a
     413.  00:4A88  C9                  	ret	
     414.  00:4A89                      
     415.  00:4A89                      
     416.  00:4A89                      ;===========================================================
     417.  00:4A89                      ; ---	replay_loadsong
     418.  00:4A89                      ; Initialize a song for playback
     419.  00:4A89                      ; 
     420.  00:4A89                      ; Input [HL] points to start song
     421.  00:4A89                      ;===========================================================
     422.  00:4A89                      replay_loadsong:
     423.  00:4A89                      	;--- Get the start speed.
     424.  00:4A89  7E                  	ld	a,(hl)	
     425.  00:4A8A  23                  	inc	hl
     426.  00:4A8B  32 1F C0            	ld	(replay_speed),a
     427.  00:4A8E                      
     428.  00:4A8E                      	;--- Get the channel setup
     429.  00:4A8E  7E                  	ld	a,(hl)	
     430.  00:4A8F  23                  	inc	hl
     431.  00:4A90  32 23 C0            	ld	(replay_chan_setup),a	
     432.  00:4A93                      
     433.  00:4A93                      	;--- Set voice base, drum base, instrument base and track pointers
     434.  00:4A93  11 07 C0            	ld 	de,replay_voicebase
     435.  00:4A96  01 16 00            	ld	bc,22
     436.  00:4A99  ED B0               	ldir
     437.  00:4A9B  22 1D C0            	ld	(replay_orderpointer),hl		; store pointer for next set
     438.  00:4A9E                      										; of track pointers
     439.  00:4A9E                      	;--- Initialize re-player variables.
     440.  00:4A9E  AF                  	xor	a
     441.  00:4A9F  32 20 C0            	ld	(replay_speed_subtimer),a
     442.  00:4AA2  32 2C C0            	ld	(FM_softvoice_req),a
     443.  00:4AA5  32 24 C0            	ld	(replay_arp_speed),a
     444.  00:4AA8  32 25 C0            	ld	(replay_fade),a
     445.  00:4AAB  32 C2 C1            	ld	(FM_DRUM_ACTIVE),a
     446.  00:4AAE                      
     447.  00:4AAE                      	;--- Erase channel data	in RAM
     448.  00:4AAE  01 37 01            	ld	bc,TRACK_REC_SIZE*8-1
     449.  00:4AB1  21 33 C0            	ld	hl,TRACK_Chan1
     450.  00:4AB4  11 34 C0            	ld	de,TRACK_Chan1+1
     451.  00:4AB7  77                  	ld	(hl),a
     452.  00:4AB8  ED B0               	ldir
     453.  00:4ABA                      	
     454.  00:4ABA  21 80 49            	ld	hl,_Default_Registers
     455.  00:4ABD  11 7A C1            	ld	de,FM_Voicereg
     456.  00:4AC0  01 42 00            	ld	bc,66
     457.  00:4AC3  ED B0               	ldir
     458.  00:4AC5                      
     459.  00:4AC5  3E 01               	ld	a,1
     460.  00:4AC7  32 21 C0            	ld	(replay_speed_timer),a
     461.  00:4ACA  32 57 C0            	ld	(TRACK_Chan1+17+TRACK_Delay),a	
     462.  00:4ACD  32 7E C0            	ld	(TRACK_Chan2+17+TRACK_Delay),a		
     463.  00:4AD0  32 A5 C0            	ld	(TRACK_Chan3+17+TRACK_Delay),a	
     464.  00:4AD3  32 CC C0            	ld	(TRACK_Chan4+17+TRACK_Delay),a	
     465.  00:4AD6  32 F3 C0            	ld	(TRACK_Chan5+17+TRACK_Delay),a		
     466.  00:4AD9  32 1A C1            	ld	(TRACK_Chan6+17+TRACK_Delay),a		
     467.  00:4ADC  32 41 C1            	ld	(TRACK_Chan7+17+TRACK_Delay),a		
     468.  00:4ADF  32 68 C1            	ld	(TRACK_Chan8+17+TRACK_Delay),a	
     469.  00:4AE2                      	
     470.  00:4AE2  3E FE               	ld	a,254
     471.  00:4AE4  32 33 C0            	ld	(TRACK_Chan1+17+TRACK_Instrument),a	
     472.  00:4AE7  32 5A C0            	ld	(TRACK_Chan2+17+TRACK_Instrument),a		
     473.  00:4AEA  32 81 C0            	ld	(TRACK_Chan3+17+TRACK_Instrument),a	
     474.  00:4AED  32 A8 C0            	ld	(TRACK_Chan4+17+TRACK_Instrument),a	
     475.  00:4AF0  32 CF C0            	ld	(TRACK_Chan5+17+TRACK_Instrument),a		
     476.  00:4AF3  32 F6 C0            	ld	(TRACK_Chan6+17+TRACK_Instrument),a		
     477.  00:4AF6  32 1D C1            	ld	(TRACK_Chan7+17+TRACK_Instrument),a		
     478.  00:4AF9  32 44 C1            	ld	(TRACK_Chan8+17+TRACK_Instrument),a	
     479.  00:4AFC  32 2B C0            	ld	(replay_softvoice),a
     480.  00:4AFF                      ;	ld	(FM_softvoice_set),a
     481.  00:4AFF                      
     482.  00:4AFF  3E 10               	ld	a,16
     483.  00:4B01  32 8A C0            	ld	(TRACK_Chan3+17+TRACK_Voice),a
     484.  00:4B04  32 B1 C0            	ld	(TRACK_Chan4+17+TRACK_Voice),a
     485.  00:4B07  32 D8 C0            	ld	(TRACK_Chan5+17+TRACK_Voice),a
     486.  00:4B0A  32 FF C0            	ld	(TRACK_Chan6+17+TRACK_Voice),a	
     487.  00:4B0D  32 26 C1            	ld	(TRACK_Chan7+17+TRACK_Voice),a	
     488.  00:4B10  32 4D C1            	ld	(TRACK_Chan8+17+TRACK_Voice),a
     489.  00:4B13  3E 80               	ld	a,128
     490.  00:4B15  32 8B C0            	ld	(TRACK_Chan3+17+TRACK_Flags),a
     491.  00:4B18  32 B2 C0            	ld	(TRACK_Chan4+17+TRACK_Flags),a
     492.  00:4B1B  32 D9 C0            	ld	(TRACK_Chan5+17+TRACK_Flags),a
     493.  00:4B1E  32 00 C1            	ld	(TRACK_Chan6+17+TRACK_Flags),a	
     494.  00:4B21  32 27 C1            	ld	(TRACK_Chan7+17+TRACK_Flags),a
     495.  00:4B24  32 4E C1            	ld	(TRACK_Chan8+17+TRACK_Flags),a	
     496.  00:4B27                      	
     497.  00:4B27                      	;--- Check if there are 3 psg chans.
     498.  00:4B27  3A 23 C0            	ld	a,(replay_chan_setup)
     499.  00:4B2A  A7                  	and	a
     500.  00:4B2B  CA 32 4B            	jp	z,99f
     501.  00:4B2E  AF                  	xor 	a
     502.  00:4B2F  32 8B C0            	ld	(TRACK_Chan3+17+TRACK_Flags),a	
     503.  00:4B32                      99:	
     504.  00:4B32                      
     505.  00:4B32  CD 65 55            	call	replay_route
     506.  00:4B35                      	
     507.  00:4B35                      	; end	is here
     508.  00:4B35  3E 01               	ld	a,1
     509.  00:4B37  32 22 C0            	ld	(replay_mode),a	
     510.  00:4B3A  C9                  	ret
     511.  00:4B3B                      
     512.  00:4B3B                      
     513.  00:4B3B                      ;===========================================================
     514.  00:4B3B                      ; Set mixer values to silent.
     515.  00:4B3B                      ;===========================================================
     516.  00:4B3B                      replay_play_no:
     517.  00:4B3B  AF                        xor   a
     518.  00:4B3C  32 C5 C1                  ld    (FM_regMIXER),a
     519.  00:4B3F  EE 3F                     xor   $3f
     520.  00:4B41  32 72 C1                  ld    (PSG_regMIXER),a
     521.  00:4B44  C9                        ret
     522.  00:4B45                      
     523.  00:4B45                      ;===========================================================
     524.  00:4B45                      ; ---	replay_play
     525.  00:4B45                      ; Decode music data and process instruments and effects. 
     526.  00:4B45                      ; Music chip registers will be prepared for replay_route 
     527.  00:4B45                      ;
     528.  00:4B45                      ; Input none
     529.  00:4B45                      ;===========================================================	
     530.  00:4B45                      replay_play:
     531.  00:4B45  3A 22 C0            	ld	a,(replay_mode)
     532.  00:4B48  A7                  	and	a
     533.  00:4B49  28 F0                     jr    z,replay_play_no
     534.  00:4B4B                      ;	ret	z		; replay mode = 0	; halted
     535.  00:4B4B                      				; replay mode = 1	; active
     536.  00:4B4B                      	
     537.  00:4B4B                      	;---- SPEED EQUALIZATION 
     538.  00:4B4B  3A 31 C0            	ld	a,(equalization_freq)		; 0 = 50Hz, otherwise 60Hz
     539.  00:4B4E  A7                  	and	a
     540.  00:4B4F  CA 5C 4B            	jp	z,.PAL               		; if PAL process at any interrupt;
     541.  00:4B52                      
     542.  00:4B52                      .NTSC:
     543.  00:4B52  21 32 C0            	ld	hl,equalization_cnt  		; if NTSC call 5 times out of 6
     544.  00:4B55  35                  	dec	(hl)
     545.  00:4B56  C2 5C 4B            	jp	nz,.PAL               		; skip music data processing one tic out of 6
     546.  00:4B59                      
     547.  00:4B59                      	;--- Reset timer and raise equalization flag
     548.  00:4B59  36 06               	ld	(hl),6						
     549.  00:4B5B  C9                  	ret
     550.  00:4B5C                      .PAL:                             
     551.  00:4B5C                      	;---- END SPEED EQUALIZATION	
     552.  00:4B5C                      
     553.  00:4B5C                      	;--- check for end of pattern
     554.  00:4B5C  2A 0D C0            	ld	hl,(TRACK_pointer1)
     555.  00:4B5F  7E                  	ld	a,(hl)
     556.  00:4B60  FE BF               	cp	191	
     557.  00:4B62  C2 6F 4B            	jp	nz,.skip_EOT
     558.  00:4B65                      
     559.  00:4B65  3A 57 C0            	ld 	a,(TRACK_Chan1+17+TRACK_Delay)
     560.  00:4B68  3D                  	dec	a
     561.  00:4B69  C2 6F 4B            	jp	nz,.skip_EOT
     562.  00:4B6C  CC 9A 4E            	call	z,_replay_check_patternend	
     563.  00:4B6F                      .skip_EOT:	
     564.  00:4B6F                      	;--- The speed timer
     565.  00:4B6F  21 21 C0            	ld	hl,replay_speed_timer
     566.  00:4B72  35                  	dec	(hl)
     567.  00:4B73  C2 E8 4C            	jp	nz,process_data	
     568.  00:4B76                      
     569.  00:4B76                      	;--- Re-init Timer == 0
     570.  00:4B76  AF                  	xor	a
     571.  00:4B77  ED 4B 1F C0         	ld	bc,(replay_speed)		; [b]	sub-timer [c] speed
     572.  00:4B7B  CB 39               	srl	c				; bit	0 is halve speed step
     573.  00:4B7D  8F                  	adc	a,a
     574.  00:4B7E  A8                  	xor	b				; alternate	speed	to have halve speed.
     575.  00:4B7F  32 20 C0            	ld	(replay_speed_subtimer),a
     576.  00:4B82  81                  	add	c
     577.  00:4B83  32 21 C0            	ld	(replay_speed_timer),a
     578.  00:4B86                      		
     579.  00:4B86                      ;===========================================================
     580.  00:4B86                      ; ---	replay_decodedata
     581.  00:4B86                      ; Process the pattern data 
     582.  00:4B86                      ;===========================================================
     583.  00:4B86                      decode_data:
     584.  00:4B86                      	;--- process the channels (tracks)
     585.  00:4B86  21 36 59            	ld	hl,TRACK_ToneTable_PSG			; Set the PSG note table
     586.  00:4B89  22 2D C0            	ld	(replay_tonetable),hl	
     587.  00:4B8C                      	
     588.  00:4B8C                      .decode1:	
     589.  00:4B8C  21 57 C0            	ld 	hl,TRACK_Chan1+17+TRACK_Delay
     590.  00:4B8F  35                  	dec	(hl)
     591.  00:4B90  C2 AD 4B            	jp	nz,.decode2
     592.  00:4B93                      
     593.  00:4B93  3A 3D C0            	ld	a,(TRACK_Chan1+17+TRACK_Flags)
     594.  00:4B96  57                  	ld	d,a
     595.  00:4B97  3A 3A C0            	ld	a,(TRACK_Chan1+17+TRACK_Note)	
     596.  00:4B9A  DD 21 44 C0         	ld	ix,TRACK_Chan1+17
     597.  00:4B9E  ED 4B 0D C0         	ld	bc,(TRACK_pointer1)
     598.  00:4BA2  CD C7 4E            	call	decode_data_chan
     599.  00:4BA5  ED 43 0D C0         	ld	(TRACK_pointer1),bc
     600.  00:4BA9  7A                  	ld	a,d
     601.  00:4BAA  32 3D C0            	ld	(TRACK_Chan1+17+TRACK_Flags),a	
     602.  00:4BAD                      
     603.  00:4BAD                      .decode2:	
     604.  00:4BAD  21 7E C0            	ld 	hl,TRACK_Chan2+17+TRACK_Delay
     605.  00:4BB0  35                  	dec	(hl)
     606.  00:4BB1  C2 CE 4B            	jp	nz,.setupcheck
     607.  00:4BB4                      
     608.  00:4BB4  3A 64 C0            	ld	a,(TRACK_Chan2+17+TRACK_Flags)
     609.  00:4BB7  57                  	ld	d,a
     610.  00:4BB8  3A 61 C0            	ld	a,(TRACK_Chan2+17+TRACK_Note)	
     611.  00:4BBB  DD 21 6B C0         	ld	ix,TRACK_Chan2+17
     612.  00:4BBF  ED 4B 0F C0         	ld	bc,(TRACK_pointer2)
     613.  00:4BC3  CD C7 4E            	call	decode_data_chan
     614.  00:4BC6  ED 43 0F C0         	ld	(TRACK_pointer2),bc
     615.  00:4BCA  7A                  	ld	a,d				;'
     616.  00:4BCB  32 64 C0            	ld	(TRACK_Chan2+17+TRACK_Flags),a	
     617.  00:4BCE                      
     618.  00:4BCE                      .setupcheck:
     619.  00:4BCE                      	; 2-5 and 3-5 channel support
     620.  00:4BCE  3A 23 C0            	ld	a,(replay_chan_setup)
     621.  00:4BD1  A7                  	and	a
     622.  00:4BD2  CA FF 4B            	jp	z,.decode3_35chan
     623.  00:4BD5                      
     624.  00:4BD5                      .decode3_26chan:
     625.  00:4BD5  21 A5 C0            	ld 	hl,TRACK_Chan3+17+TRACK_Delay
     626.  00:4BD8  35                  	dec	(hl)
     627.  00:4BD9  C2 F6 4B            	jp	nz,.decode3_end
     628.  00:4BDC                      
     629.  00:4BDC  3A 8B C0            	ld	a,(TRACK_Chan3+17+TRACK_Flags)
     630.  00:4BDF  57                  	ld	d,a		;'
     631.  00:4BE0  3A 88 C0            	ld	a,(TRACK_Chan3+17+TRACK_Note)	
     632.  00:4BE3  DD 21 92 C0         	ld	ix,TRACK_Chan3+17
     633.  00:4BE7  ED 4B 11 C0         	ld	bc,(TRACK_pointer3)
     634.  00:4BEB  CD C7 4E            	call	decode_data_chan
     635.  00:4BEE  ED 43 11 C0         	ld	(TRACK_pointer3),bc
     636.  00:4BF2  7A                  	ld	a,d				;'
     637.  00:4BF3  32 8B C0            	ld	(TRACK_Chan3+17+TRACK_Flags),a
     638.  00:4BF6                      .decode3_end:	
     639.  00:4BF6                      	;--- Set FM Tone table
     640.  00:4BF6  21 F6 59            	ld	hl,TRACK_ToneTable_FM
     641.  00:4BF9  22 2D C0            	ld	(replay_tonetable),hl
     642.  00:4BFC  C3 26 4C            	jp	.decode4
     643.  00:4BFF                      
     644.  00:4BFF                      
     645.  00:4BFF                      .decode3_35chan:	
     646.  00:4BFF                      	;--- Set FM Tone table
     647.  00:4BFF  21 F6 59            	ld	hl,TRACK_ToneTable_FM
     648.  00:4C02  22 2D C0            	ld	(replay_tonetable),hl
     649.  00:4C05                      
     650.  00:4C05  21 A5 C0            	ld 	hl,TRACK_Chan3+17+TRACK_Delay
     651.  00:4C08  35                  	dec	(hl)
     652.  00:4C09  C2 26 4C            	jp	nz,.decode4
     653.  00:4C0C                      
     654.  00:4C0C  3A 8B C0            	ld	a,(TRACK_Chan3+17+TRACK_Flags)
     655.  00:4C0F  57                  	ld	d,a		;'
     656.  00:4C10  3A 88 C0            	ld	a,(TRACK_Chan3+17+TRACK_Note)	
     657.  00:4C13  DD 21 92 C0         	ld	ix,TRACK_Chan3+17
     658.  00:4C17  ED 4B 11 C0         	ld	bc,(TRACK_pointer3)
     659.  00:4C1B  CD C7 4E            	call	decode_data_chan
     660.  00:4C1E  ED 43 11 C0         	ld	(TRACK_pointer3),bc
     661.  00:4C22  7A                  	ld	a,d				;'
     662.  00:4C23  32 8B C0            	ld	(TRACK_Chan3+17+TRACK_Flags),a	
     663.  00:4C26                      
     664.  00:4C26                      .decode4:
     665.  00:4C26  21 CC C0            	ld 	hl,TRACK_Chan4+17+TRACK_Delay
     666.  00:4C29  35                  	dec	(hl)
     667.  00:4C2A  C2 47 4C            	jp	nz,.decode5
     668.  00:4C2D                      
     669.  00:4C2D  3A B2 C0            	ld	a,(TRACK_Chan4+17+TRACK_Flags)
     670.  00:4C30  57                  	ld 	d,a		;'
     671.  00:4C31  3A AF C0            	ld	a,(TRACK_Chan4+17+TRACK_Note)	
     672.  00:4C34  DD 21 B9 C0         	ld	ix,TRACK_Chan4+17
     673.  00:4C38  ED 4B 13 C0         	ld	bc,(TRACK_pointer4)
     674.  00:4C3C  CD C7 4E            	call	decode_data_chan
     675.  00:4C3F  ED 43 13 C0         	ld	(TRACK_pointer4),bc
     676.  00:4C43  7A                  	ld	a,d			;'
     677.  00:4C44  32 B2 C0            	ld	(TRACK_Chan4+17+TRACK_Flags),a	
     678.  00:4C47                      
     679.  00:4C47                      .decode5:
     680.  00:4C47  21 F3 C0            	ld 	hl,TRACK_Chan5+17+TRACK_Delay
     681.  00:4C4A  35                  	dec	(hl)
     682.  00:4C4B  C2 68 4C            	jp	nz,.decode6
     683.  00:4C4E                      
     684.  00:4C4E  3A D9 C0            	ld	a,(TRACK_Chan5+17+TRACK_Flags)
     685.  00:4C51  57                  	ld	d,a		;'
     686.  00:4C52  3A D6 C0            	ld	a,(TRACK_Chan5+17+TRACK_Note)	
     687.  00:4C55  DD 21 E0 C0         	ld	ix,TRACK_Chan5+17
     688.  00:4C59  ED 4B 15 C0         	ld	bc,(TRACK_pointer5)
     689.  00:4C5D  CD C7 4E            	call	decode_data_chan
     690.  00:4C60  ED 43 15 C0         	ld	(TRACK_pointer5),bc
     691.  00:4C64  7A                  	ld	a,d			;'
     692.  00:4C65  32 D9 C0            	ld	(TRACK_Chan5+17+TRACK_Flags),a	
     693.  00:4C68                      
     694.  00:4C68                      .decode6:
     695.  00:4C68  21 1A C1            	ld 	hl,TRACK_Chan6+17+TRACK_Delay
     696.  00:4C6B  35                  	dec	(hl)
     697.  00:4C6C  C2 89 4C            	jp	nz,.decode7
     698.  00:4C6F                      
     699.  00:4C6F  3A 00 C1            	ld	a,(TRACK_Chan6+17+TRACK_Flags)
     700.  00:4C72  57                  	ld	d,a		;'
     701.  00:4C73  3A FD C0            	ld	a,(TRACK_Chan6+17+TRACK_Note)	
     702.  00:4C76  DD 21 07 C1         	ld	ix,TRACK_Chan6+17
     703.  00:4C7A  ED 4B 17 C0         	ld	bc,(TRACK_pointer6)
     704.  00:4C7E  CD C7 4E            	call	decode_data_chan
     705.  00:4C81  ED 43 17 C0         	ld	(TRACK_pointer6),bc
     706.  00:4C85  7A                  	ld	a,d				;'
     707.  00:4C86  32 00 C1            	ld	(TRACK_Chan6+17+TRACK_Flags),a	
     708.  00:4C89                      
     709.  00:4C89                      .decode7:
     710.  00:4C89  21 41 C1            	ld 	hl,TRACK_Chan7+17+TRACK_Delay
     711.  00:4C8C  35                  	dec	(hl)
     712.  00:4C8D  C2 AA 4C            	jp	nz,.decode8
     713.  00:4C90                      
     714.  00:4C90  3A 27 C1            	ld	a,(TRACK_Chan7+17+TRACK_Flags)
     715.  00:4C93  57                  	ld	d,a		;'
     716.  00:4C94  3A 24 C1            	ld	a,(TRACK_Chan7+17+TRACK_Note)	
     717.  00:4C97  DD 21 2E C1         	ld	ix,TRACK_Chan7+17
     718.  00:4C9B  ED 4B 19 C0         	ld	bc,(TRACK_pointer7)
     719.  00:4C9F  CD C7 4E            	call	decode_data_chan
     720.  00:4CA2  ED 43 19 C0         	ld	(TRACK_pointer7),bc
     721.  00:4CA6  7A                  	ld	a,d				;'
     722.  00:4CA7  32 27 C1            	ld	(TRACK_Chan7+17+TRACK_Flags),a	
     723.  00:4CAA                      
     724.  00:4CAA                      .decode8:
     725.  00:4CAA  21 68 C1            	ld 	hl,TRACK_Chan8+17+TRACK_Delay
     726.  00:4CAD  35                  	dec	(hl)
     727.  00:4CAE  C2 CB 4C            	jp	nz,.decode_end
     728.  00:4CB1                      
     729.  00:4CB1  3A 4E C1            	ld	a,(TRACK_Chan8+17+TRACK_Flags)
     730.  00:4CB4  57                  	ld	d,a		;'
     731.  00:4CB5  3A 4B C1            	ld	a,(TRACK_Chan8+17+TRACK_Note)	
     732.  00:4CB8  DD 21 55 C1         	ld	ix,TRACK_Chan8+17
     733.  00:4CBC  ED 4B 1B C0         	ld	bc,(TRACK_pointer8)
     734.  00:4CC0  CD C7 4E            	call	decode_data_chan
     735.  00:4CC3  ED 43 1B C0         	ld	(TRACK_pointer8),bc
     736.  00:4CC7  7A                  	ld	a,d				;'
     737.  00:4CC8  32 4E C1            	ld	(TRACK_Chan8+17+TRACK_Flags),a
     738.  00:4CCB                      		
     739.  00:4CCB                      .decode_end:
     740.  00:4CCB                      	;---- Software voice loading
     741.  00:4CCB  3A 2C C0            	ld	a,(FM_softvoice_req)
     742.  00:4CCE  FE 02               	cp	2
     743.  00:4CD0  DA E8 4C            	jp	c,process_data
     744.  00:4CD3  2A 07 C0            	ld	hl,(replay_voicebase)
     745.  00:4CD6  87                  	add	a
     746.  00:4CD7  85                  	add	a,l
     747.  00:4CD8  6F                  	ld	l,a
     748.  00:4CD9  D2 DD 4C            	jp	nc,.skip
     749.  00:4CDC  24                  	inc	h
     750.  00:4CDD                      .skip:
     751.  00:4CDD  11 7A C1            	ld	de,FM_Voicereg
     752.  00:4CE0  01 10 08            	ld	bc,$0810
     753.  00:4CE3                      .loop:
     754.  00:4CE3  ED A0               	ldi
     755.  00:4CE5  13                  	inc	de
     756.  00:4CE6  10 FB               	djnz	.loop
     757.  00:4CE8                      
     758.  00:4CE8                      
     759.  00:4CE8                      
     760.  00:4CE8                      	; continue to process data
     761.  00:4CE8                      ;===========================================================
     762.  00:4CE8                      ; ---	replay_decodedata_NO
     763.  00:4CE8                      ; Process changes.
     764.  00:4CE8                      ; 
     765.  00:4CE8                      ; 
     766.  00:4CE8                      ;===========================================================
     767.  00:4CE8                      process_data:
     768.  00:4CE8                      	; Set tone table
     769.  00:4CE8  21 36 59            	ld	hl,TRACK_ToneTable_PSG
     770.  00:4CEB  22 2D C0            	ld	(replay_tonetable),hl
     771.  00:4CEE                      
     772.  00:4CEE                      	;--- Initialize PSG Mixer and volume
     773.  00:4CEE  AF                  	xor	a
     774.  00:4CEF  32 C5 C1            	ld	(FM_regMIXER),a
     775.  00:4CF2  32 73 C1            	ld	(PSG_regVOLA),a
     776.  00:4CF5  32 74 C1            	ld	(PSG_regVOLB),a
     777.  00:4CF8  32 75 C1            	ld	(PSG_regVOLC),a
     778.  00:4CFB                      	
     779.  00:4CFB                      	;--- PSG balance
     780.  00:4CFB  2A 03 C0            	ld	hl,(replay_mainPSGvol)
     781.  00:4CFE  22 29 C0            	ld	(replay_mainvol),hl
     782.  00:4D01                      	
     783.  00:4D01                      	;--------------------
     784.  00:4D01                      	;--- Process track 1
     785.  00:4D01                      	;--------------------
     786.  00:4D01  DD 21 44 C0         	ld	ix,TRACK_Chan1+17
     787.  00:4D05  3A 3D C0            	ld	a,(TRACK_Chan1+17+TRACK_Flags)
     788.  00:4D08  57                  	ld	d,a
     789.  00:4D09  CD 5A 51            	call	process_data_chan
     790.  00:4D0C  D2 12 4D            	jp	nc,.skipa
     791.  00:4D0F  22 6B C1            	ld	(PSG_regToneA),hl
     792.  00:4D12                      .skipa:
     793.  00:4D12  3A AC C1            	ld	a,(FM_regVOLF)
     794.  00:4D15  32 73 C1            	ld	(PSG_regVOLA),a	
     795.  00:4D18                      
     796.  00:4D18                      	;--------------------
     797.  00:4D18                      	;--- Process track 2
     798.  00:4D18                      	;--------------------
     799.  00:4D18  DD 21 6B C0         	ld	ix,TRACK_Chan2+17
     800.  00:4D1C  3A 64 C0            	ld	a,(TRACK_Chan2+17+TRACK_Flags)
     801.  00:4D1F  57                  	ld	d,a
     802.  00:4D20  CD 5A 51            	call	process_data_chan
     803.  00:4D23  D2 29 4D            	jp	nc,.skipb
     804.  00:4D26  22 6D C1            	ld	(PSG_regToneB),hl
     805.  00:4D29                      .skipb:
     806.  00:4D29  3A AC C1            	ld	a,(FM_regVOLF)
     807.  00:4D2C  32 74 C1            	ld	(PSG_regVOLB),a	
     808.  00:4D2F                      
     809.  00:4D2F  3A 23 C0            	ld	a,(replay_chan_setup)
     810.  00:4D32  A7                  	and	a
     811.  00:4D33  CA 6C 4D            	jp	z,_rdd_2psg_6fm
     812.  00:4D36                      
     813.  00:4D36                      _rdd_3psg_5fm:
     814.  00:4D36                      	;--------------------
     815.  00:4D36                      	;--- Process track 3	
     816.  00:4D36                      	;--------------------
     817.  00:4D36  DD 21 92 C0         	ld	ix,TRACK_Chan3+17
     818.  00:4D3A  3A 8B C0            	ld	a,(TRACK_Chan3+17+TRACK_Flags)
     819.  00:4D3D  57                  	ld	d,a
     820.  00:4D3E  CD 5A 51            	call	process_data_chan
     821.  00:4D41  D2 47 4D            	jp	nc,.skipc
     822.  00:4D44  22 6F C1            	ld	(PSG_regToneC),hl
     823.  00:4D47                      .skipc:
     824.  00:4D47  3A AC C1            	ld	a,(FM_regVOLF)
     825.  00:4D4A  32 75 C1            	ld	(PSG_regVOLC),a
     826.  00:4D4D                      
     827.  00:4D4D                      	;-- Convert mixer to AY
     828.  00:4D4D  3A C5 C1            	ld	a,(FM_regMIXER)		
     829.  00:4D50  CB 3F               	srl	a
     830.  00:4D52  CB 3F               	srl	a
     831.  00:4D54  EE 3F               	xor	0x3f
     832.  00:4D56  32 72 C1            	ld	(PSG_regMIXER),a
     833.  00:4D59  AF                  	xor	a
     834.  00:4D5A  32 C5 C1            	ld	(FM_regMIXER),a
     835.  00:4D5D                      
     836.  00:4D5D                      	; Set tone table
     837.  00:4D5D  21 F6 59            	ld	hl,TRACK_ToneTable_FM
     838.  00:4D60  22 2D C0            	ld	(replay_tonetable),hl
     839.  00:4D63                      	;--- set FM balance
     840.  00:4D63  2A 05 C0            	ld	hl,(replay_mainFMvol)
     841.  00:4D66  22 29 C0            	ld	(replay_mainvol),hl
     842.  00:4D69                      	
     843.  00:4D69  C3 A4 4D            	jp	_rdd_cont
     844.  00:4D6C                      	
     845.  00:4D6C                      	
     846.  00:4D6C                      _rdd_2psg_6fm:
     847.  00:4D6C                      	;-- Convert mixer to AY
     848.  00:4D6C  3A C5 C1            	ld	a,(FM_regMIXER)		
     849.  00:4D6F  CB 3F               	srl	a
     850.  00:4D71  CB 3F               	srl	a
     851.  00:4D73  CB 3F               	srl	a
     852.  00:4D75  EE 3F               	xor	0x3f
     853.  00:4D77  32 72 C1            	ld	(PSG_regMIXER),a
     854.  00:4D7A                      
     855.  00:4D7A                      	; Set tone table
     856.  00:4D7A  21 F6 59            	ld	hl,TRACK_ToneTable_FM
     857.  00:4D7D  22 2D C0            	ld	(replay_tonetable),hl
     858.  00:4D80                      	;--- set SCC balance
     859.  00:4D80  2A 05 C0            	ld	hl,(replay_mainFMvol)
     860.  00:4D83  22 29 C0            	ld	(replay_mainvol),hl
     861.  00:4D86                      
     862.  00:4D86                      	;--------------------
     863.  00:4D86                      	;--- Process track 3
     864.  00:4D86                      	;--------------------
     865.  00:4D86  DD 21 92 C0         	ld	ix,TRACK_Chan3+17
     866.  00:4D8A  3A 8B C0            	ld	a,(TRACK_Chan3+17+TRACK_Flags)
     867.  00:4D8D  57                  	ld	d,a
     868.  00:4D8E  CD 5A 51            	call	process_data_chan
     869.  00:4D91  D2 97 4D            	jp	nc,.skipc
     870.  00:4D94  22 8A C1            	ld	(FM_regToneA),hl
     871.  00:4D97                      .skipc:
     872.  00:4D97  3A AC C1            	ld	a,(FM_regVOLF)
     873.  00:4D9A  57                  	ld	d,a
     874.  00:4D9B  3A 8A C0            	ld	a,(TRACK_Chan3+17+TRACK_Voice)
     875.  00:4D9E  E6 F0               	and	$f0
     876.  00:4DA0  B2                  	or	d
     877.  00:4DA1  32 8E C1            	ld	(FM_regVOLA),a	
     878.  00:4DA4                      
     879.  00:4DA4                      
     880.  00:4DA4                      _rdd_cont:
     881.  00:4DA4                      	;--------------------
     882.  00:4DA4                      	;--- Process track 4
     883.  00:4DA4                      	;--------------------
     884.  00:4DA4  DD 21 B9 C0         	ld	ix,TRACK_Chan4+17
     885.  00:4DA8  3A B2 C0            	ld	a,(TRACK_Chan4+17+TRACK_Flags)
     886.  00:4DAB  57                  	ld	d,a
     887.  00:4DAC  CD 5A 51            	call	process_data_chan
     888.  00:4DAF  D2 B5 4D            	jp	nc,.skipd
     889.  00:4DB2  22 90 C1            	ld	(FM_regToneB),hl
     890.  00:4DB5                      .skipd:
     891.  00:4DB5  3A AC C1            	ld	a,(FM_regVOLF)	
     892.  00:4DB8  57                  	ld	d,a
     893.  00:4DB9  3A B1 C0            	ld	a,(TRACK_Chan4+17+TRACK_Voice)
     894.  00:4DBC  E6 F0               	and	$f0
     895.  00:4DBE  B2                  	or	d
     896.  00:4DBF  32 94 C1            	ld	(FM_regVOLB),a	
     897.  00:4DC2                      
     898.  00:4DC2                      	;--------------------
     899.  00:4DC2                      	;--- Process track 5
     900.  00:4DC2                      	;--------------------	
     901.  00:4DC2  DD 21 E0 C0         	ld	ix,TRACK_Chan5+17
     902.  00:4DC6  3A D9 C0            	ld	a,(TRACK_Chan5+17+TRACK_Flags)
     903.  00:4DC9  57                  	ld	d,a
     904.  00:4DCA  CD 5A 51            	call	process_data_chan
     905.  00:4DCD  D2 D3 4D            	jp	nc,.skipe
     906.  00:4DD0  22 96 C1            	ld	(FM_regToneC),hl
     907.  00:4DD3                      .skipe:
     908.  00:4DD3  3A AC C1            	ld	a,(FM_regVOLF)
     909.  00:4DD6  57                  	ld	d,a
     910.  00:4DD7  3A D8 C0            	ld	a,(TRACK_Chan5+17+TRACK_Voice)
     911.  00:4DDA  E6 F0               	and	$f0
     912.  00:4DDC  B2                  	or	d
     913.  00:4DDD  32 9A C1            	ld	(FM_regVOLC),a	
     914.  00:4DE0                      
     915.  00:4DE0                      	;--------------------
     916.  00:4DE0                      	;--- Process track 6
     917.  00:4DE0                      	;--------------------
     918.  00:4DE0                      		
     919.  00:4DE0  DD 21 07 C1         	ld	ix,TRACK_Chan6+17
     920.  00:4DE4  3A 00 C1            	ld	a,(TRACK_Chan6+17+TRACK_Flags)
     921.  00:4DE7  57                  	ld	d,a
     922.  00:4DE8  CD 5A 51            	call	process_data_chan
     923.  00:4DEB  D2 F1 4D            	jp	nc,.skipf
     924.  00:4DEE  22 9C C1            	ld	(FM_regToneD),hl
     925.  00:4DF1                      .skipf:
     926.  00:4DF1  3A AC C1            	ld	a,(FM_regVOLF)
     927.  00:4DF4  57                  	ld	d,a
     928.  00:4DF5  3A FF C0            	ld	a,(TRACK_Chan6+17+TRACK_Voice)
     929.  00:4DF8  E6 F0               	and	$f0
     930.  00:4DFA  B2                  	or	d
     931.  00:4DFB  32 A0 C1            	ld	(FM_regVOLD),a	
     932.  00:4DFE                      
     933.  00:4DFE                      	;--------------------
     934.  00:4DFE                      	;--- Process track 7
     935.  00:4DFE                      	;--------------------
     936.  00:4DFE  DD 21 2E C1         	ld	ix,TRACK_Chan7+17
     937.  00:4E02  3A 27 C1            	ld	a,(TRACK_Chan7+17+TRACK_Flags)
     938.  00:4E05  57                  	ld	d,a
     939.  00:4E06  CD 5A 51            	call	process_data_chan
     940.  00:4E09  D2 0F 4E            	jp	nc,.skipg
     941.  00:4E0C  22 A2 C1            	ld	(FM_regToneE),hl
     942.  00:4E0F                      .skipg:
     943.  00:4E0F  3A AC C1            	ld	a,(FM_regVOLF)
     944.  00:4E12  57                  	ld	d,a
     945.  00:4E13  3A 26 C1            	ld	a,(TRACK_Chan7+17+TRACK_Voice)
     946.  00:4E16  E6 F0               	and	$f0
     947.  00:4E18  B2                  	or	d
     948.  00:4E19  32 A6 C1            	ld	(FM_regVOLE),a		
     949.  00:4E1C                      
     950.  00:4E1C                      	;--------------------
     951.  00:4E1C                      	;--- Process track 8
     952.  00:4E1C                      	;--------------------		
     953.  00:4E1C  DD 21 55 C1         	ld	ix,TRACK_Chan8+17
     954.  00:4E20  3A 4E C1            	ld	a,(TRACK_Chan8+17+TRACK_Flags)
     955.  00:4E23  57                  	ld	d,a
     956.  00:4E24  CD 5A 51            	call	process_data_chan
     957.  00:4E27  D2 2D 4E            	jp	nc,.skiph
     958.  00:4E2A  22 A8 C1            	ld	(FM_regToneF),hl
     959.  00:4E2D                      .skiph:
     960.  00:4E2D  3A AC C1            	ld	a,(FM_regVOLF)
     961.  00:4E30  57                  	ld	d,a
     962.  00:4E31  3A 4D C1            	ld	a,(TRACK_Chan8+17+TRACK_Voice)
     963.  00:4E34  E6 F0               	and	$f0
     964.  00:4E36  B2                  	or	d	
     965.  00:4E37  32 AC C1            	ld	(FM_regVOLF),a
     966.  00:4E3A                      
     967.  00:4E3A                      	;--------------------
     968.  00:4E3A                      	;--- Process Drums
     969.  00:4E3A                      	;--------------------
     970.  00:4E3A  CD 93 54            	call	process_drum
     971.  00:4E3D                      
     972.  00:4E3D                      process_fade:	
     973.  00:4E3D                      	;--------------------
     974.  00:4E3D                      	; Fade out processing
     975.  00:4E3D                      	;--------------------
     976.  00:4E3D  3A 25 C0            	ld	a,(replay_fade)
     977.  00:4E40  A7                  	and	a
     978.  00:4E41  C8                  	ret	z	; if replay fade = 0 then no fade active
     979.  00:4E42                      	
     980.  00:4E42                      	; decrease fade timer
     981.  00:4E42  3A 26 C0            	ld	a,(replay_fade_timer)
     982.  00:4E45  3D                  	dec	a
     983.  00:4E46  C2 5F 4E            	jp	nz,.no_new_step
     984.  00:4E49                      
     985.  00:4E49  3A 27 C0            	ld	a,(replay_fade_vol)
     986.  00:4E4C  3C                  	inc	a
     987.  00:4E4D  FE 10               	cp	16
     988.  00:4E4F  DA 59 4E            	jp	c,.cont_fadeing
     989.  00:4E52  AF                  	xor	a
     990.  00:4E53  32 25 C0            	ld	(replay_fade),a
     991.  00:4E56  C3 07 4A            	jp	replay_pause
     992.  00:4E59                      .cont_fadeing:	
     993.  00:4E59  32 27 C0            	ld	(replay_fade_vol),a
     994.  00:4E5C  3A 25 C0            	ld	a,(replay_fade)
     995.  00:4E5F                      .no_new_step:
     996.  00:4E5F  32 26 C0            	ld	(replay_fade_timer),a
     997.  00:4E62                      
     998.  00:4E62  3A 27 C0            	ld	a,(replay_fade_vol)
     999.  00:4E65  4F                  	ld	c,a
    1000.  00:4E66  06 03               	ld	b,3
    1001.  00:4E68  21 73 C1            	ld	hl,PSG_regVOLA
    1002.  00:4E6B  CD 8F 4E            	call	.calc_vol
    1003.  00:4E6E  06 09               	ld	b,9
    1004.  00:4E70  21 8E C1            	ld	hl,FM_regVOLA
    1005.  00:4E73                      .calc_vol_FM:
    1006.  00:4E73  7E                  	ld	a,(hl)
    1007.  00:4E74  E6 0F               	and	$0f
    1008.  00:4E76  81                  	add	c
    1009.  00:4E77  FE 10               	cp	16
    1010.  00:4E79  DA 7E 4E            	jp	c,.no_limit_FM
    1011.  00:4E7C  3E 0F               	ld	a,15
    1012.  00:4E7E                      .no_limit_FM:
    1013.  00:4E7E  57                  	ld	d,a
    1014.  00:4E7F  7E                  	ld	a,(hl)
    1015.  00:4E80  E6 F0               	and	$f0
    1016.  00:4E82  B2                  	or	d
    1017.  00:4E83  77                  	ld	(hl),a
    1018.  00:4E84  3E 06               	ld	a,6
    1019.  00:4E86  85                  	add	a,l
    1020.  00:4E87  6F                  	ld	l,a
    1021.  00:4E88  D2 8C 4E            	jp	nc,99f
    1022.  00:4E8B  24                  	inc	h
    1023.  00:4E8C                      99:
    1024.  00:4E8C                      
    1025.  00:4E8C  10 E5               	djnz	.calc_vol_FM
    1026.  00:4E8E  C9                  	ret
    1027.  00:4E8F                      
    1028.  00:4E8F                      .calc_vol:	
    1029.  00:4E8F  7E                  	ld	a,(hl)
    1030.  00:4E90  91                  	sub	c
    1031.  00:4E91  D2 95 4E            	jp	nc,.no_carry
    1032.  00:4E94  AF                  	xor	a
    1033.  00:4E95                      .no_carry:	
    1034.  00:4E95  77                  	ld	(hl),a
    1035.  00:4E96  23                  	inc	hl
    1036.  00:4E97  10 F6               	djnz	.calc_vol
    1037.  00:4E99  C9                  	ret
    1038.  00:4E9A                      
    1039.  00:4E9A                      
    1040.  00:4E9A                      
    1041.  00:4E9A                      ;--------------------
    1042.  00:4E9A                      	
    1043.  00:4E9A                      	
    1044.  00:4E9A                      ;--------------------
    1045.  00:4E9A                      _replay_check_patternend:
    1046.  00:4E9A                      ;	ld 	a,(TRACK_Chan1+17+TRACK_Delay)
    1047.  00:4E9A                      ;	dec	a
    1048.  00:4E9A                      ;	jp	nz,process_data
    1049.  00:4E9A                      ;
    1050.  00:4E9A                      ;	ld	hl,(TRACK_pointer1)
    1051.  00:4E9A                      ;	ld	a,(hl)
    1052.  00:4E9A                      ;	
    1053.  00:4E9A                      ;	;--- check for end of pattern
    1054.  00:4E9A                      ;	cp	191	
    1055.  00:4E9A                      ;	jp	nz,process_data
    1056.  00:4E9A                      
    1057.  00:4E9A                      	;--- Set track pointers to start
    1058.  00:4E9A  2A 1D C0            	ld	hl,(replay_orderpointer)
    1059.  00:4E9D  AF                  	xor	a
    1060.  00:4E9E  BE                  	cp	(hl)
    1061.  00:4E9F  C2 BB 4E            	jp	nz,.no_restart
    1062.  00:4EA2  23                  	inc	hl
    1063.  00:4EA3  BE                  	cp	(hl)
    1064.  00:4EA4  2B                  	dec	hl
    1065.  00:4EA5  C2 BB 4E            	jp	nz,.no_restart
    1066.  00:4EA8                      	;--- next is restart order
    1067.  00:4EA8  23                  	inc	hl
    1068.  00:4EA9  23                  	inc	hl
    1069.  00:4EAA  7E                  	ld	a,(hl)
    1070.  00:4EAB  23                  	inc	hl
    1071.  00:4EAC  66                  	ld	h,(hl)
    1072.  00:4EAD  6F                  	ld	l,a
    1073.  00:4EAE  BD                  	cp	l
    1074.  00:4EAF  C2 BB 4E            	jp	nz,.restart
    1075.  00:4EB2  A7                  	and	a
    1076.  00:4EB3  C2 BB 4E            	jp	nz,.restart
    1077.  00:4EB6                      	;--- STOP - There is no restart value
    1078.  00:4EB6  CD 07 4A            	call	replay_pause
    1079.  00:4EB9  F1                  	pop	af	;--- skip return to processing 
    1080.  00:4EBA  C9                  	ret		
    1081.  00:4EBB                      
    1082.  00:4EBB                      .restart:
    1083.  00:4EBB                      .no_restart:	
    1084.  00:4EBB  11 0D C0            	ld	de,TRACK_pointer1
    1085.  00:4EBE  01 10 00            	ld	bc,16
    1086.  00:4EC1  ED B0               	ldir
    1087.  00:4EC3  22 1D C0            	ld	(replay_orderpointer),hl		; store pointer for next set
    1088.  00:4EC6                      								; of strack pointers
    1089.  00:4EC6  C9                  	ret
    1090.  00:4EC7                      
    1091.  00:4EC7                      
    1092.  00:4EC7                      
    1093.  00:4EC7                      
    1094.  00:4EC7                      
    1095.  00:4EC7                      
    1096.  00:4EC7                      ;===========================================================
    1097.  00:4EC7                      ; ---	decode_data_chan
    1098.  00:4EC7                      ; Process the channel data
    1099.  00:4EC7                      ; 
    1100.  00:4EC7                      ; in BC is the pointer to the	data
    1101.  00:4EC7                      ;    D contains flags.
    1102.  00:4EC7                      ;===========================================================	
    1103.  00:4EC7                      decode_data_chan:
    1104.  00:4EC7                      	;--- initialize data
    1105.  00:4EC7  32 28 C0            	ld	(replay_previous_note),a
    1106.  00:4ECA                      
    1107.  00:4ECA                      	;=============
    1108.  00:4ECA                      	; Note 
    1109.  00:4ECA                      	;=============
    1110.  00:4ECA  0A                  	ld	a,(bc)
    1111.  00:4ECB  FE 60               	cp	_REL
    1112.  00:4ECD  DA 40 4F            	jp	c,_replay_decode_note
    1113.  00:4ED0  FE 61               	cp	_SUS
    1114.  00:4ED2  DA 4C 4F            	jp	c,_replay_decode_release
    1115.  00:4ED5  CA 57 4F            	jp	z,_replay_decode_sustain
    1116.  00:4ED8                      _rdn2:
    1117.  00:4ED8  FE 72               	cp	_INS
    1118.  00:4EDA  DA A4 4F            	jp	c,_replay_decode_vol
    1119.  00:4EDD                      _rdv2:
    1120.  00:4EDD  FE 91               	cp	_CMD
    1121.  00:4EDF  DA 60 4F            	jp	c,_replay_decode_ins
    1122.  00:4EE2                      _rdi2:
    1123.  00:4EE2  FE BF               	cp	_EOT
    1124.  00:4EE4  DA B9 4F            	jp	c,_replaydecode_cmd
    1125.  00:4EE7  C3 1C 4F            	jp	_replay_decode_delay
    1126.  00:4EEA                      
    1127.  00:4EEA                      _rdn:
    1128.  00:4EEA  FE 62               	cp	_SUS+1		
    1129.  00:4EEC  DA 0C 4F            	jp	c,_rd_delay
    1130.  00:4EEF  C3 D8 4E            	jp	_rdn2
    1131.  00:4EF2                      
    1132.  00:4EF2                      _rdi:
    1133.  00:4EF2  FE 91               	cp	_CMD
    1134.  00:4EF4  DA 0C 4F            	jp	c,_rd_delay
    1135.  00:4EF7  C3 E2 4E            	jp	_rdi2
    1136.  00:4EFA                      
    1137.  00:4EFA                      _rdv:
    1138.  00:4EFA  FE 72               	cp	_INS
    1139.  00:4EFC  DA 0C 4F            	jp	c,_rd_delay
    1140.  00:4EFF  C3 DD 4E            	jp	_rdv2
    1141.  00:4F02                      _rdc:
    1142.  00:4F02  03                  	inc	bc
    1143.  00:4F03                      _rdc_noinc:	
    1144.  00:4F03  0A                  	ld	a,(bc)
    1145.  00:4F04  FE BF               	cp	_EOT
    1146.  00:4F06  DA 0C 4F            	jp	c,_rd_delay
    1147.  00:4F09  C3 1C 4F            	jp	_replay_decode_delay
    1148.  00:4F0C                      
    1149.  00:4F0C                      	;--- re-init previous delay
    1150.  00:4F0C                      _rd_delay:
    1151.  00:4F0C  DD 7E 14            	ld	a,(ix+TRACK_prevDelay)
    1152.  00:4F0F  DD 77 13            	ld	(ix+TRACK_Delay),a
    1153.  00:4F12  C3 28 4F            	jp	_replay_decode_trigger_porttone_check
    1154.  00:4F15                      
    1155.  00:4F15                      _rd_eot:
    1156.  00:4F15  3C                  	inc	a
    1157.  00:4F16  DD 77 13            	ld	(ix+TRACK_Delay),a
    1158.  00:4F19  C3 28 4F            	jp	_replay_decode_trigger_porttone_check
    1159.  00:4F1C                      
    1160.  00:4F1C                      _replay_decode_delay:
    1161.  00:4F1C  D6 BF               	sub	_WAIT-1
    1162.  00:4F1E  CA 15 4F            	jp	z,_rd_eot		; EOT found
    1163.  00:4F21  DD 77 13            	ld	(ix+TRACK_Delay),a
    1164.  00:4F24  DD 77 14            	ld	(ix+TRACK_prevDelay),a
    1165.  00:4F27  03                  	inc	bc
    1166.  00:4F28                      	
    1167.  00:4F28                      _replay_decode_trigger_porttone_check:	
    1168.  00:4F28                      	;--- Check cmd active and note trigger?
    1169.  00:4F28  CB 42               	bit 	B_TRGNOT,d
    1170.  00:4F2A  C8                  	ret	z
    1171.  00:4F2B  CB 5A               	bit	B_TRGCMD,d
    1172.  00:4F2D  C8                  	ret	z
    1173.  00:4F2E                      	;--- Check for cmd3 or cmd5 (value 0 or 1) to continue
    1174.  00:4F2E  DD 7E F0            	ld	a,(ix+TRACK_Command)
    1175.  00:4F31  FE 02               	cp	2
    1176.  00:4F33  D0                  	ret	nc
    1177.  00:4F34                      	;-- trigger CMD
    1178.  00:4F34  CB 82               	res	B_TRGNOT,d
    1179.  00:4F36  3E 12               	ld	a,0010010b		;B_ACTNOT B_KEYON
    1180.  00:4F38  B2                  	or	d
    1181.  00:4F39  57                  	ld 	d,a
    1182.  00:4F3A  DD 7E 09            	ld	a,(ix+TRACK_cmd_3)
    1183.  00:4F3D  C3 0C 50            	jp	decode_cmd3_port_tone_new_note	
    1184.  00:4F40                      
    1185.  00:4F40                      _replay_decode_note:
    1186.  00:4F40  DD 77 F6            	ld	(ix+TRACK_Note),a
    1187.  00:4F43  CB C2               	set 	B_TRGNOT,d
    1188.  00:4F45  CB E2               	set 	B_KEYON,d
    1189.  00:4F47                      
    1190.  00:4F47  03                  	inc	bc
    1191.  00:4F48  0A                  	ld	a,(bc)
    1192.  00:4F49  C3 EA 4E            	jp	_rdn
    1193.  00:4F4C                      	
    1194.  00:4F4C                      
    1195.  00:4F4C                      
    1196.  00:4F4C                      _replay_decode_release:
    1197.  00:4F4C  CB 8A               	res	B_ACTNOT,d				; reset note bit to	0
    1198.  00:4F4E  CB AA               	res	B_SUST,d				; rest sustain
    1199.  00:4F50  CB A2               	res	B_KEYON,d				; reset Key on
    1200.  00:4F52                      
    1201.  00:4F52  03                  	inc	bc
    1202.  00:4F53  0A                  	ld	a,(bc)
    1203.  00:4F54  C3 EA 4E            	jp	_rdn	
    1204.  00:4F57                      	
    1205.  00:4F57                      
    1206.  00:4F57                      
    1207.  00:4F57                      _replay_decode_sustain:
    1208.  00:4F57                      ;	res	B_ACTNOT,d				; reset note bit to	0
    1209.  00:4F57  CB EA               	set	B_SUST,d				; rest sustain
    1210.  00:4F59  CB A2               	res	B_KEYON,d				; reset Key on
    1211.  00:4F5B                      
    1212.  00:4F5B  03                  	inc	bc
    1213.  00:4F5C  0A                  	ld	a,(bc)
    1214.  00:4F5D  C3 EA 4E            	jp	_rdn
    1215.  00:4F60                      
    1216.  00:4F60                      
    1217.  00:4F60                      
    1218.  00:4F60                      _replay_decode_ins:
    1219.  00:4F60  D6 72               	sub	_INS
    1220.  00:4F62  DD BE EF            	cp	(ix+TRACK_Instrument)
    1221.  00:4F65  CA 9F 4F            	jp	z,.skip_ins
    1222.  00:4F68                      	
    1223.  00:4F68                      	;--- instrument change found	
    1224.  00:4F68  DD 77 EF            	ld	(ix+TRACK_Instrument),a
    1225.  00:4F6B                      
    1226.  00:4F6B                      	;--- set instrument pointer
    1227.  00:4F6B  87                  	add	a
    1228.  00:4F6C  2A 0B C0            	ld	hl,(replay_insbase)
    1229.  00:4F6F  85                  	add	a,l
    1230.  00:4F70  6F                  	ld	l,a
    1231.  00:4F71  D2 75 4F            	jp	nc,.skip
    1232.  00:4F74  24                  	inc	h
    1233.  00:4F75                      .skip:
    1234.  00:4F75  7E                  	ld	a,(hl)
    1235.  00:4F76  23                  	inc	hl
    1236.  00:4F77  66                  	ld	h,(hl)
    1237.  00:4F78  6F                  	ld	l,a
    1238.  00:4F79                      
    1239.  00:4F79                      	;-- get voice
    1240.  00:4F79  7E                  	ld	a,(hl)
    1241.  00:4F7A  23                  	inc	hl
    1242.  00:4F7B                      		
    1243.  00:4F7B                      	;--- Set the software voice (if needed)
    1244.  00:4F7B  A7                  	and	a
    1245.  00:4F7C  C2 90 4F            	jp	nz,.skip_soft
    1246.  00:4F7F                      	;--- software voice found
    1247.  00:4F7F                      	
    1248.  00:4F7F  5E                  	ld	e,(hl)		; value is the offset in the soft voice data (8bytes)
    1249.  00:4F80  23                  	inc	hl
    1250.  00:4F81  3A 2B C0            	ld	a,(replay_softvoice)
    1251.  00:4F84  BB                  	cp	e
    1252.  00:4F85  CA 90 4F            	jp	z,.skip_soft
    1253.  00:4F88                      
    1254.  00:4F88  7B                  	ld	a,e
    1255.  00:4F89  32 2B C0            	ld	(replay_softvoice),a
    1256.  00:4F8C  32 2C C0            	ld 	(FM_softvoice_req),a
    1257.  00:4F8F  AF                  	xor 	a
    1258.  00:4F90                      
    1259.  00:4F90                      .skip_soft:
    1260.  00:4F90  DD 77 F8            	ld	(ix+TRACK_Voice),a
    1261.  00:4F93                      
    1262.  00:4F93                      	;--- Store the macro start
    1263.  00:4F93  DD 75 F1            	ld	(ix+TRACK_MacroPointer),l
    1264.  00:4F96  DD 74 F2            	ld	(ix+TRACK_MacroPointer+1),h	
    1265.  00:4F99                      	;--- Store the macro re-start
    1266.  00:4F99  DD 75 F3            	ld	(ix+TRACK_MacroStart),l
    1267.  00:4F9C  DD 74 F4            	ld	(ix+TRACK_MacroStart+1),h
    1268.  00:4F9F                      
    1269.  00:4F9F                      .skip_ins:	
    1270.  00:4F9F  03                  	inc	bc
    1271.  00:4FA0  0A                  	ld	a,(bc)
    1272.  00:4FA1  C3 F2 4E            	jp	_rdi
    1273.  00:4FA4                      
    1274.  00:4FA4                      
    1275.  00:4FA4                      
    1276.  00:4FA4                      _replay_decode_vol:
    1277.  00:4FA4  D6 62               	sub	_VOL
    1278.  00:4FA6                      	
    1279.  00:4FA6  87                  	add	a
    1280.  00:4FA7  87                  	add	a
    1281.  00:4FA8  87                  	add	a
    1282.  00:4FA9  87                  	add	a
    1283.  00:4FAA                      	
    1284.  00:4FAA                      	;--- Set new base	volume (high byte) but keep relative offset (low byte)
    1285.  00:4FAA  5F                  	ld	e,a
    1286.  00:4FAB  DD 7E F7            	ld	a,(ix+TRACK_Volume)
    1287.  00:4FAE  E6 0F               	and	0xf
    1288.  00:4FB0  B3                  	or	e
    1289.  00:4FB1  DD 77 F7            	ld	(ix+TRACK_Volume),a
    1290.  00:4FB4                      
    1291.  00:4FB4  03                  	inc	bc
    1292.  00:4FB5  0A                  	ld	a,(bc)
    1293.  00:4FB6  C3 FA 4E            	jp	_rdv
    1294.  00:4FB9                      
    1295.  00:4FB9                      
    1296.  00:4FB9                      
    1297.  00:4FB9                      _replaydecode_cmd:
    1298.  00:4FB9  D6 91               	sub	_CMD
    1299.  00:4FBB                      	
    1300.  00:4FBB  5F                  	ld	e,a				; store command for later
    1301.  00:4FBC                      
    1302.  00:4FBC  21 6A 47            	ld	hl,DECODE_CMDLIST
    1303.  00:4FBF  87                  	add	a
    1304.  00:4FC0  87                  	add	a
    1305.  00:4FC1  85                  	add	l
    1306.  00:4FC2  6F                  	ld	l,a
    1307.  00:4FC3  03                  	inc	bc
    1308.  00:4FC4  0A                  	ld	a,(bc)
    1309.  00:4FC5  E9                  	jp	hl
    1310.  00:4FC6                      
    1311.  00:4FC6                      ;	ld	hl,DECODE_CMDLIST
    1312.  00:4FC6                      ;	add	a,a
    1313.  00:4FC6                      ;	add	a,l
    1314.  00:4FC6                      ;	ld	l,a
    1315.  00:4FC6                      ;	jp	nc,.skip
    1316.  00:4FC6                      ;	inc	h
    1317.  00:4FC6                      ;.skip:
    1318.  00:4FC6                      ;	ld	a,(hl)
    1319.  00:4FC6                      ;	inc	hl
    1320.  00:4FC6                      ;	ld	h,(hl)
    1321.  00:4FC6                      ;	ld	l,a
    1322.  00:4FC6                      ;	
    1323.  00:4FC6                      ;	inc	bc
    1324.  00:4FC6                      ;	ld	a,(bc)
    1325.  00:4FC6                      ;	jp	(hl)
    1326.  00:4FC6                      
    1327.  00:4FC6                      decode_cmd0_arpeggio:
    1328.  00:4FC6                      	; in:	[A] contains the paramvalue
    1329.  00:4FC6                      	; 
    1330.  00:4FC6                      	; ! do not change	[BC] this is the data pointer
    1331.  00:4FC6                      	;--------------------------------------------------
    1332.  00:4FC6  DD 77 06            	ld	(ix+TRACK_cmd_0),a
    1333.  00:4FC9  DD 73 F0            	ld	(ix+TRACK_Command),e
    1334.  00:4FCC  CB DA               	set	B_TRGCMD,d
    1335.  00:4FCE  DD 36 11 00         	ld	(ix+TRACK_Timer),0
    1336.  00:4FD2  DD 36 12 02         	ld	(ix+TRACK_Step),2
    1337.  00:4FD6  C3 02 4F            	jp	_rdc
    1338.  00:4FD9                      
    1339.  00:4FD9                      
    1340.  00:4FD9                      	
    1341.  00:4FD9                      decode_cmd1_port_up:
    1342.  00:4FD9                      	; in:	[A] contains the paramvalue
    1343.  00:4FD9                      	; 
    1344.  00:4FD9                      	; ! do not change	[BC] this is the data pointer
    1345.  00:4FD9                      	;--------------------------------------------------
    1346.  00:4FD9  DD 73 F0            	ld	(ix+TRACK_Command),e
    1347.  00:4FDC  DD 77 07            	ld	(ix+TRACK_cmd_1),a
    1348.  00:4FDF  CB DA               	set	B_TRGCMD,d
    1349.  00:4FE1  C3 02 4F            	jp	_rdc
    1350.  00:4FE4                      	
    1351.  00:4FE4                      	 
    1352.  00:4FE4                      	 
    1353.  00:4FE4                      decode_cmd2_port_down:
    1354.  00:4FE4                      	; in:	[A] contains the paramvalue
    1355.  00:4FE4                      	; 
    1356.  00:4FE4                      	; ! do not change	[BC] this is the data pointer
    1357.  00:4FE4                      	;--------------------------------------------------
    1358.  00:4FE4  DD 73 F0            	ld	(ix+TRACK_Command),e
    1359.  00:4FE7  DD 77 08            	ld	(ix+TRACK_cmd_2),a
    1360.  00:4FEA  CB DA               	set	B_TRGCMD,d
    1361.  00:4FEC  C3 02 4F            	jp	_rdc
    1362.  00:4FEF                      
    1363.  00:4FEF                      
    1364.  00:4FEF                      decode_cmd3_port_tone:
    1365.  00:4FEF                      	; in:	[A] contains the param value
    1366.  00:4FEF                      	; 
    1367.  00:4FEF                      	; ! do not change	[BC] this is the data pointer
    1368.  00:4FEF                      	;--------------------------------------------------
    1369.  00:4FEF  DD 73 F0            	ld	(ix+TRACK_Command),e
    1370.  00:4FF2  CB DA               	set	B_TRGCMD,d
    1371.  00:4FF4  CB CA               	set	B_ACTNOT,d
    1372.  00:4FF6                      	
    1373.  00:4FF6  DD 77 09            	ld	(ix+TRACK_cmd_3),a
    1374.  00:4FF9  DD 36 11 02         	ld	(ix+TRACK_Timer),2
    1375.  00:4FFD                      
    1376.  00:4FFD                      ;decode_cmd3_port_tone_cont:
    1377.  00:4FFD                      	;--- Check if we have a	note on the	same event
    1378.  00:4FFD  CB 42               	bit	B_TRGNOT,d
    1379.  00:4FFF  CA 02 4F            	jp	z,_rdc
    1380.  00:5002                      
    1381.  00:5002  CB E2               	set	B_KEYON,d
    1382.  00:5004  CB 82               	res 	B_TRGNOT,d
    1383.  00:5006                      	
    1384.  00:5006  CD 0C 50            	call	decode_cmd3_port_tone_new_note
    1385.  00:5009  C3 02 4F            	jp	_rdc
    1386.  00:500C                      	
    1387.  00:500C                      decode_cmd3_port_tone_new_note:
    1388.  00:500C                      	;-- remove deviation from parameter
    1389.  00:500C  E6 7F               	and 	$7f
    1390.  00:500E  08                  	ex	af,af'		;'
    1391.  00:500F  D9                  	exx
    1392.  00:5010                      
    1393.  00:5010                      	;-- get the	previous note freq
    1394.  00:5010  3A 28 C0            	ld	a,(replay_previous_note)
    1395.  00:5013  87                  	add	a
    1396.  00:5014                      
    1397.  00:5014                      
    1398.  00:5014                      
    1399.  00:5014                      ;	ld	hl,(base+transpose)
    1400.  00:5014                      ;	add	a,l
    1401.  00:5014                      ;	ld	l,a
    1402.  00:5014                      
    1403.  00:5014  2A 2D C0            	ld	hl,(replay_tonetable)
    1404.  00:5017  85                  	add	a,l
    1405.  00:5018  6F                  	ld	l,a
    1406.  00:5019  D2 1D 50            	jp	nc,.skip
    1407.  00:501C  24                  	inc	h
    1408.  00:501D                      .skip:
    1409.  00:501D  5E                  	ld	e,(hl)
    1410.  00:501E  23                  	inc	hl
    1411.  00:501F  56                  	ld	d,(hl)
    1412.  00:5020                      
    1413.  00:5020                      	; add	the toneadd
    1414.  00:5020  DD 6E 00            	ld	l,(ix+TRACK_cmd_ToneSlideAdd)
    1415.  00:5023  DD 66 01            	ld	h,(ix+TRACK_cmd_ToneSlideAdd+1)
    1416.  00:5026                      
    1417.  00:5026  19                  	add	hl,de	
    1418.  00:5027  EB                  	ex	de,hl				; store current freq in	[de]
    1419.  00:5028                      	;--- get the current note freq
    1420.  00:5028  DD 7E F6            	ld	a,(ix+TRACK_Note)
    1421.  00:502B  87                  	add	a
    1422.  00:502C  2A 2D C0            	ld	hl,(replay_tonetable)	;TRACK_ToneTable
    1423.  00:502F  85                  	add	a,l
    1424.  00:5030  6F                  	ld	l,a
    1425.  00:5031  D2 35 50            	jp	nc,.skip2
    1426.  00:5034  24                  	inc	h
    1427.  00:5035                      .skip2:
    1428.  00:5035  7E                  	ld	a,(hl)
    1429.  00:5036  23                  	inc	hl
    1430.  00:5037  66                  	ld	h,(hl)
    1431.  00:5038  6F                  	ld	l,a				; destination freq in [hl]
    1432.  00:5039                      	
    1433.  00:5039                      	;--- Calculate the delta
    1434.  00:5039  EB                  	ex	de,hl
    1435.  00:503A  ED 52               	sbc	hl,de				; results in pos/neg delta
    1436.  00:503C                      	
    1437.  00:503C  DD 75 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),l
    1438.  00:503F  DD 74 01            	ld	(ix+TRACK_cmd_ToneSlideAdd+1),h
    1439.  00:5042                      	
    1440.  00:5042                      	;--- re-apply deviation
    1441.  00:5042  08                  	ex	af,af'			;'
    1442.  00:5043  CB 7C               	bit	7,h
    1443.  00:5045  C2 4A 50            	jp	nz,.skip3
    1444.  00:5048  F6 80               	or 	128
    1445.  00:504A                      .skip3:
    1446.  00:504A  DD 77 09            	ld 	(ix+TRACK_cmd_3),a
    1447.  00:504D                      	
    1448.  00:504D  D9                  	exx					; restore flags in D
    1449.  00:504E  C9                  	ret
    1450.  00:504F                      	
    1451.  00:504F                      	
    1452.  00:504F                      decode_cmd8_tremolo:
    1453.  00:504F                      	; in:	[A] contains the paramvalue
    1454.  00:504F                      	; 
    1455.  00:504F                      	; ! do not change	[BC] this is the data pointer
    1456.  00:504F                      	;--------------------------------------------------
    1457.  00:504F                      decode_cmd4_vibrato:
    1458.  00:504F                      	; in:	[A] contains the paramvalue
    1459.  00:504F                      	; 
    1460.  00:504F                      	; ! do not change	[BC] this is the data pointer
    1461.  00:504F                      	;--------------------------------------------------
    1462.  00:504F                      	; Vibrato with speed x and depth y.	This command 
    1463.  00:504F                      	; will oscillate the frequency of the current note
    1464.  00:504F                      	; with a sine wave. 
    1465.  00:504F                      	;
    1466.  00:504F                      	; high 3 bits is depth (0-7) (direct offset in sinetable)
    1467.  00:504F                      	; low 5 bits is the speed. 1-16
    1468.  00:504F                      	;--- Init values
    1469.  00:504F  DD 73 F0            	ld	(ix+TRACK_Command),e
    1470.  00:5052  5F                  	ld	e,a
    1471.  00:5053                      	;--- Set the speed
    1472.  00:5053  E6 0F               	and	$0f
    1473.  00:5055  CA 60 50            	jp	z,.depth
    1474.  00:5058  DD 77 0C            	ld	(ix+TRACK_cmd_4_step),a	
    1475.  00:505B  ED 44               	neg	
    1476.  00:505D  DD 77 12            	ld	(ix+TRACK_Step),a	
    1477.  00:5060                      	
    1478.  00:5060                      .depth:
    1479.  00:5060                      	;-- set the depth
    1480.  00:5060  7B                  	ld	a,e
    1481.  00:5061  E6 F0               	and	$f0
    1482.  00:5063  CA 78 50            	jp	z,.end		; set depth when 0 only when command was not active.
    1483.  00:5066                      
    1484.  00:5066  FE 90               	cp	$90
    1485.  00:5068  DA 72 50            	jp	c,.skip_extended
    1486.  00:506B                      	;--- extended
    1487.  00:506B  D6 80               	sub	$80
    1488.  00:506D  1E 0B               	ld	e,11
    1489.  00:506F  DD 73 F0            	ld	(ix+TRACK_Command),e
    1490.  00:5072                      
    1491.  00:5072                      .skip_extended:
    1492.  00:5072  D6 10               	sub	$10
    1493.  00:5074  87                  	add	a,a
    1494.  00:5075  DD 77 0A            	ld	(ix+TRACK_cmd_4_depth),a
    1495.  00:5078                      
    1496.  00:5078                      ;	ld	hl,TRACK_Vibrato_sine;-16
    1497.  00:5078                      ;	add	a,a
    1498.  00:5078                      ;	jp	nc,.skip1
    1499.  00:5078                      ;	inc	h
    1500.  00:5078                      ;.skip1:	
    1501.  00:5078                      ;	add	a,l
    1502.  00:5078                      ;	ld 	l,a
    1503.  00:5078                      ;	jp	nc,.skip2
    1504.  00:5078                      ;	inc	h
    1505.  00:5078                      ;.skip2:
    1506.  00:5078                      ;	ld	(ix+TRACK_cmd_4_depth),l
    1507.  00:5078                      ;	ld	(ix+TRACK_cmd_4_depth+1),h
    1508.  00:5078                      	
    1509.  00:5078                      .end:	
    1510.  00:5078  CB DA               	set	B_TRGCMD,d
    1511.  00:507A  C3 02 4F            	jp	_rdc	
    1512.  00:507D                      
    1513.  00:507D                      
    1514.  00:507D                      decode_cmd5_vibrato_port_tone:
    1515.  00:507D                      	; in:	[A] contains the paramvalue
    1516.  00:507D                      	; 
    1517.  00:507D                      	; ! do not change	[BC] this is the data pointer
    1518.  00:507D                      	;--------------------------------------------------
    1519.  00:507D                      	; portTone	+ volumeslide
    1520.  00:507D                      	;--- Init values
    1521.  00:507D  DD 73 F0            	ld	(ix+TRACK_Command),e
    1522.  00:5080  DD 77 0E            	ld	(ix+TRACK_cmd_A),a
    1523.  00:5083  CB DA               	set	B_TRGCMD,d
    1524.  00:5085                      	
    1525.  00:5085                      	;-- Check if new note
    1526.  00:5085  CB 42               	bit	B_TRGNOT,d
    1527.  00:5087  CA 02 4F            	jp	z,_rdc
    1528.  00:508A                      	
    1529.  00:508A                      	;-- Set new port tone value
    1530.  00:508A  CB E2               	set	B_KEYON,d
    1531.  00:508C  CB 82               	res	B_TRGNOT,d
    1532.  00:508E  DD 7E 09            	ld	a,(ix+TRACK_cmd_3)
    1533.  00:5091  C3 0C 50            	jp	decode_cmd3_port_tone_new_note
    1534.  00:5094                      	
    1535.  00:5094                      	
    1536.  00:5094                      	
    1537.  00:5094                      decode_cmd6_vibrato_vol:
    1538.  00:5094                      	; in:	[A] contains the paramvalue
    1539.  00:5094                      	; 
    1540.  00:5094                      	; ! do not change	[BC] this is the data pointer
    1541.  00:5094                      	;--------------------------------------------------
    1542.  00:5094                      decode_cmd7_vol_slide:
    1543.  00:5094                      	; in:	[A] contains the paramvalue
    1544.  00:5094                      	; 
    1545.  00:5094                      	; ! do not change	[BC] this is the data pointer
    1546.  00:5094                      	;--------------------------------------------------
    1547.  00:5094  DD 73 F0            	ld	(ix+TRACK_Command),e	
    1548.  00:5097  DD 77 0E            	ld	(ix+TRACK_cmd_A),a
    1549.  00:509A  E6 7F               	and  	$7f
    1550.  00:509C  DD 77 11            	ld	(ix+TRACK_Timer),a
    1551.  00:509F  CB DA               	set	B_TRGCMD,d
    1552.  00:50A1  C3 02 4F            	jp	_rdc
    1553.  00:50A4                      
    1554.  00:50A4                      
    1555.  00:50A4                      decode_cmd9_note_cut:
    1556.  00:50A4  CB DA               	set	B_TRGCMD,d
    1557.  00:50A6  DD 73 F0            	ld	(ix+TRACK_Command),e
    1558.  00:50A9  DD 77 11            	ld	(ix+TRACK_Timer),a		; set	the timer to param y
    1559.  00:50AC  C3 02 4F            	jp 	_rdc
    1560.  00:50AF                      
    1561.  00:50AF                      
    1562.  00:50AF                      decode_cmd10_note_delay:
    1563.  00:50AF  CB 42               	bit	B_TRGNOT,d		; is there a note	in this eventstep?
    1564.  00:50B1  CA 02 4F            	jp	z,_rdc
    1565.  00:50B4                      
    1566.  00:50B4  CB DA               	set	B_TRGCMD,d					; command active
    1567.  00:50B6  CB 82               	res	B_TRGNOT,d					; reset any	trigger note
    1568.  00:50B8  DD 73 F0            	ld	(ix+TRACK_Command),e
    1569.  00:50BB                      	
    1570.  00:50BB  DD 77 11            	ld	(ix+TRACK_Timer),a			; set	the timer to param y
    1571.  00:50BE  DD 7E F6            	ld	a,(ix+TRACK_Note)
    1572.  00:50C1  DD 77 10            	ld	(ix+TRACK_cmd_E),a			; store the	new note
    1573.  00:50C4  3A 28 C0            	ld	a,(replay_previous_note)
    1574.  00:50C7  DD 77 F6            	ld	(ix+TRACK_Note),a				; restore the old	note
    1575.  00:50CA  C3 02 4F            	jp	_rdc	
    1576.  00:50CD                      
    1577.  00:50CD                      
    1578.  00:50CD                      decode_cmd11_command_end:
    1579.  00:50CD                      	; in:	[A] contains the paramvalue
    1580.  00:50CD                      	; 
    1581.  00:50CD                      	; ! do not change	[BC] this is the data pointer
    1582.  00:50CD                      	;--------------------------------------------------
    1583.  00:50CD  CB 9A               	res	B_TRGCMD,d
    1584.  00:50CF  C3 03 4F            	jp	_rdc_noinc
    1585.  00:50D2                      	
    1586.  00:50D2                      decode_cmd12_drum:
    1587.  00:50D2                      	; Get the base addres of the drum list
    1588.  00:50D2                      	;add 	a 
    1589.  00:50D2  2A 09 C0            	ld	hl,(replay_drumbase)
    1590.  00:50D5  85                  	add	a,l 
    1591.  00:50D6  6F                  	ld	l,a
    1592.  00:50D7  D2 DB 50            	jp	nc,99f
    1593.  00:50DA  24                  	inc	h 
    1594.  00:50DB                      99:
    1595.  00:50DB                      	; Get the start of the drum macro
    1596.  00:50DB  7E                  	ld	a,(hl)
    1597.  00:50DC  23                  	inc	hl
    1598.  00:50DD  66                  	ld	h,(hl)
    1599.  00:50DE  6F                  	ld	l,a
    1600.  00:50DF                      	
    1601.  00:50DF                      	; Store the address
    1602.  00:50DF  22 C3 C1            	ld 	(FM_DRUM_MACRO),hl
    1603.  00:50E2  7C                  	ld	a,h
    1604.  00:50E3  32 C2 C1            	ld	(FM_DRUM_ACTIVE),a
    1605.  00:50E6  C3 02 4F            	jp	_rdc		
    1606.  00:50E9                      		
    1607.  00:50E9                      	
    1608.  00:50E9                      
    1609.  00:50E9                      
    1610.  00:50E9                      decode_cmd13_arp_speed:
    1611.  00:50E9  32 24 C0            	ld	(replay_arp_speed),a		; store the halve not to add
    1612.  00:50EC  C3 02 4F            	jp	_rdc	
    1613.  00:50EF                      	
    1614.  00:50EF                      	
    1615.  00:50EF                      
    1616.  00:50EF                      decode_cmd14_fine_up:
    1617.  00:50EF  DD 77 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),a
    1618.  00:50F2  DD 36 01 00         	ld	(ix+TRACK_cmd_ToneSlideAdd+1),0
    1619.  00:50F6  C3 02 4F            	jp	_rdc
    1620.  00:50F9                      	
    1621.  00:50F9                      decode_cmd15_fine_down:
    1622.  00:50F9  DD 77 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),a
    1623.  00:50FC  DD 36 01 FF         	ld	(ix+TRACK_cmd_ToneSlideAdd+1),$ff
    1624.  00:5100  C3 02 4F            	jp	_rdc
    1625.  00:5103                      
    1626.  00:5103                      
    1627.  00:5103                      decode_cmd16_notelink:
    1628.  00:5103  CB 82               	res	B_TRGNOT,d
    1629.  00:5105  CB E2               	set 	B_KEYON,d
    1630.  00:5107  C3 03 4F            	jp	_rdc_noinc	
    1631.  00:510A                      
    1632.  00:510A                      decode_cmd17_track_detune:
    1633.  00:510A                      	; This command sets the	detune of the track.
    1634.  00:510A  5F                  	ld	e,a
    1635.  00:510B  E6 07               	and	0x07		; low	4 bits is value
    1636.  00:510D  CB 5B               	bit	3,e		; Center around 8
    1637.  00:510F  CA 1F 51            	jp	z,.pos
    1638.  00:5112  3C                  	inc	a
    1639.  00:5113  ED 44               	neg			; make correct value
    1640.  00:5115  DD 77 04            	ld	(ix+TRACK_cmd_detune),a
    1641.  00:5118  DD 36 05 FF         	ld	(ix+TRACK_cmd_detune+1),0xff
    1642.  00:511C                      
    1643.  00:511C  C3 02 4F            	jp	_rdc	
    1644.  00:511F                      
    1645.  00:511F                      .pos:
    1646.  00:511F  DD 77 04            	ld	(ix+TRACK_cmd_detune),a
    1647.  00:5122  DD 36 05 00         	ld	(ix+TRACK_cmd_detune+1),0x00	
    1648.  00:5126                      
    1649.  00:5126  C3 02 4F            	jp	_rdc	
    1650.  00:5129                      
    1651.  00:5129                      
    1652.  00:5129                      
    1653.  00:5129                      decode_cmd18_trigger:
    1654.  00:5129  32 02 C0            	ld	(replay_trigger),a
    1655.  00:512C  C3 02 4F            	jp	_rdc		
    1656.  00:512F                      
    1657.  00:512F                      
    1658.  00:512F                      decode_cmd19_speed:
    1659.  00:512F  32 1F C0            	ld	(replay_speed),a
    1660.  00:5132                      	;--- Reset Timer == 0
    1661.  00:5132  CB 3F               	srl	a				; divide speed with 2
    1662.  00:5134  5F                  	ld	e,a
    1663.  00:5135  3E 00               	ld	a,0				
    1664.  00:5137  8F                  	adc	a				; store carry of shift as subtimer
    1665.  00:5138  32 20 C0            	ld	(replay_speed_subtimer),a
    1666.  00:513B  83                  	add	a,e
    1667.  00:513C  32 21 C0            	ld	(replay_speed_timer),a
    1668.  00:513F                      
    1669.  00:513F                      decode_cmd20_tone_panning:
    1670.  00:513F                      decode_cmd21_noise_panning:
    1671.  00:513F  C3 02 4F            	jp	_rdc	
    1672.  00:5142                      
    1673.  00:5142                      
    1674.  00:5142                      decode_cmd22_brightness:
    1675.  00:5142  6F                  	ld	l,a
    1676.  00:5143  3A 7E C1            	ld	a,(FM_Voicereg+4)
    1677.  00:5146  67                  	ld	h,a
    1678.  00:5147  85                  	add	a,l
    1679.  00:5148  E6 3F               	and	00111111b
    1680.  00:514A  6F                  	ld	l,a
    1681.  00:514B  7C                  	ld	a,h
    1682.  00:514C  E6 C0               	and	11000000b
    1683.  00:514E  B5                  	or	l
    1684.  00:514F  32 7E C1            	ld	(FM_Voicereg+4),a
    1685.  00:5152  3E 01               	ld	a,1
    1686.  00:5154  32 2C C0            	ld	(FM_softvoice_req),a
    1687.  00:5157  C3 02 4F            	jp	_rdc
    1688.  00:515A                      
    1689.  00:515A                      
    1690.  00:515A                      
    1691.  00:515A                      ;===========================================================
    1692.  00:515A                      ; ---process_data_chan
    1693.  00:515A                      ; Process the cmd/instrument/note and vol data 
    1694.  00:515A                      ; 
    1695.  00:515A                      ; in HL is the current tone freq
    1696.  00:515A                      ; in D is TRACK_FLAGS  
    1697.  00:515A                      ;===========================================================
    1698.  00:515A                      process_data_chan:
    1699.  00:515A                      	;-- set the	mixer	right
    1700.  00:515A  21 C5 C1            	ld	hl,FM_regMIXER   
    1701.  00:515D  CB 0E               	rrc	(hl)
    1702.  00:515F                      
    1703.  00:515F                      	;=====
    1704.  00:515F                      	; COMMAND
    1705.  00:515F                      	;=====
    1706.  00:515F  DD 36 0D 00         	ld	(ix+TRACK_cmd_NoteAdd),0			; Always reset note add
    1707.  00:5163  CB 5A               	bit	B_TRGCMD,d	;(ix+TRACK_Flags)
    1708.  00:5165  CA 73 51            	jp	z,process_note
    1709.  00:5168                      
    1710.  00:5168  26 47               	ld	h,PROCESS_CMDLIST >> 8
    1711.  00:516A  DD 7E F0            	ld	a,(ix+TRACK_Command)
    1712.  00:516D  87                  	add	a
    1713.  00:516E  87                  	add	a
    1714.  00:516F  C6 3B               	add	PROCESS_CMDLIST & 255
    1715.  00:5171  6F                  	ld	l,a
    1716.  00:5172  E9                  	jp	hl
    1717.  00:5173                      
    1718.  00:5173                      ;	ld	hl,PROCESS_CMDLIST
    1719.  00:5173                      ;	ld	a,(ix+TRACK_Command)
    1720.  00:5173                      ;	add	a
    1721.  00:5173                      ;	add	a,l
    1722.  00:5173                      ;	ld	l,a
    1723.  00:5173                      ;	jp	nc,.skip
    1724.  00:5173                      ;	inc	h
    1725.  00:5173                      ;.skip:
    1726.  00:5173                      ;	ld	a,(hl)
    1727.  00:5173                      ;	inc	hl
    1728.  00:5173                      ;	ld	h,(hl)
    1729.  00:5173                      ;	ld	l,a	
    1730.  00:5173                      ;	jp	(hl)
    1731.  00:5173                      
    1732.  00:5173                      
    1733.  00:5173                      process_commandEND:
    1734.  00:5173                      process_note:
    1735.  00:5173                      
    1736.  00:5173                      	;=====
    1737.  00:5173                      	; Note
    1738.  00:5173                      	;=====
    1739.  00:5173                      	;--- Check if we need to trigger a new note
    1740.  00:5173  CB 42               	bit	B_TRGNOT,d	;(ix+TRACK_Flags)
    1741.  00:5175  CA A2 51            	jp	z,process_noNoteTrigger
    1742.  00:5178                      	
    1743.  00:5178                      
    1744.  00:5178                      process_triggerNote:	
    1745.  00:5178                      	;--- get new Note
    1746.  00:5178  CB 82               	res	B_TRGNOT,d		;(ix+TRACK_Flags)		; reset trigger note flag
    1747.  00:517A  CB CA               	set	B_ACTNOT,d		;(ix+TRACK_Flags)		; set	note active	flag
    1748.  00:517C                      
    1749.  00:517C  DD 6E F3            	ld	l,(ix+TRACK_MacroStart)
    1750.  00:517F  DD 66 F4            	ld	h,(ix+TRACK_MacroStart+1)
    1751.  00:5182                      	;--- Store the macro start	
    1752.  00:5182  DD 75 F1            	ld	(ix+TRACK_MacroPointer),l
    1753.  00:5185  DD 74 F2            	ld	(ix+TRACK_MacroPointer+1),h	
    1754.  00:5188                      
    1755.  00:5188  ED 73 00 C0         	ld	(_SP_Storage),sp
    1756.  00:518C  DD F9               	ld	sp,ix
    1757.  00:518E  F1                  	pop	af
    1758.  00:518F  F1                  	pop	af
    1759.  00:5190  21 00 00            	ld	hl,0
    1760.  00:5193  E5                  	push	hl
    1761.  00:5194  E5                  	push	hl		
    1762.  00:5195  E5                  	push	hl
    1763.  00:5196  E5                  	push	hl
    1764.  00:5197  E5                  	push	hl
    1765.  00:5198  ED 7B 00 C0         	ld	sp,(_SP_Storage)
    1766.  00:519C  FD 2E 40            	ld	iyl,64			; keyon flip trigger
    1767.  00:519F  C3 A5 51            	jp	process_instrument
    1768.  00:51A2                      
    1769.  00:51A2                      process_noNoteTrigger:
    1770.  00:51A2  FD 2E 00            	ld	iyl,0				; keyon flip trigger
    1771.  00:51A5                      	;==============
    1772.  00:51A5                      	; Macro instrument
    1773.  00:51A5                      	;==============
    1774.  00:51A5                      process_instrument:
    1775.  00:51A5  CB 4A               	bit	B_ACTNOT,d		
    1776.  00:51A7  DD 72 F9            	ld	(ix+TRACK_Flags),d	
    1777.  00:51AA  CA FB 52            	jp	z,process_noNoteActive
    1778.  00:51AD                      	
    1779.  00:51AD                      	;--- Get the macro len and loop
    1780.  00:51AD  DD 5E F1            	ld	e,(ix+TRACK_MacroPointer)
    1781.  00:51B0  DD 56 F2            	ld	d,(ix+TRACK_MacroPointer+1)
    1782.  00:51B3                      
    1783.  00:51B3  26 47               	ld	h,MACROACTIONLIST >> 8
    1784.  00:51B5                      process_macro:
    1785.  00:51B5  1A                  	ld	a,(de)
    1786.  00:51B6  13                  	inc	de
    1787.  00:51B7  87                  	add	a
    1788.  00:51B8  6F                  	ld	l,a
    1789.  00:51B9  E9                  	jp	hl
    1790.  00:51BA                      ;	ld	a,(de)
    1791.  00:51BA                      ;	inc	de
    1792.  00:51BA                      ;	and	a
    1793.  00:51BA                      ;	jp	z,macro_volume_same	
    1794.  00:51BA                      ;
    1795.  00:51BA                      ;	;--- Get macro action address
    1796.  00:51BA                      ;	ld	hl,MACROACTIONLIST-2
    1797.  00:51BA                      ;	add	a,l
    1798.  00:51BA                      ;	ld	l,a
    1799.  00:51BA                      ;	jp	nc,.skip
    1800.  00:51BA                      ;	inc	h
    1801.  00:51BA                      ;.skip:
    1802.  00:51BA                      ;	ld	a,(hl)
    1803.  00:51BA                      ;	inc	hl
    1804.  00:51BA                      ;	ld	h,(hl)
    1805.  00:51BA                      ;	ld	l,a
    1806.  00:51BA                      ;	jp	(hl)
    1807.  00:51BA                      
    1808.  00:51BA                      macro_mixer:
    1809.  00:51BA  1A                  	ld  a,(de)
    1810.  00:51BB  13                  	inc	de
    1811.  00:51BC  47                  	ld	b,a
    1812.  00:51BD  3A C5 C1            	ld	a,(FM_regMIXER)   
    1813.  00:51C0  B0                  	or	b
    1814.  00:51C1  32 C5 C1            	ld	(FM_regMIXER),a
    1815.  00:51C4  C3 B5 51            	jp  process_macro
    1816.  00:51C7                      
    1817.  00:51C7                      macro_tone_add:
    1818.  00:51C7  1A                  	ld	a,(de)
    1819.  00:51C8  13                  	inc   de
    1820.  00:51C9  DD 86 FB            	add   (ix+TRACK_ToneAdd)
    1821.  00:51CC  DD 77 FB            	ld	(ix+TRACK_ToneAdd),a
    1822.  00:51CF  1A                  	ld	a,(de)
    1823.  00:51D0  DD 8E FC            	adc   (ix+TRACK_ToneAdd+1)
    1824.  00:51D3  DD 77 FC            	ld	(ix+TRACK_ToneAdd+1),a
    1825.  00:51D6  13                  	inc	de
    1826.  00:51D7  C3 B5 51            	jp	process_macro
    1827.  00:51DA                      
    1828.  00:51DA                      macro_noise_base:
    1829.  00:51DA  1A                  	ld	a,(de)
    1830.  00:51DB  13                  	inc   de
    1831.  00:51DC  DD 77 FE            	ld	(ix+TRACK_Noise),a
    1832.  00:51DF                      	;ld	(PSG_regNOISE),a
    1833.  00:51DF  32 79 C1            	ld	(replay_noise),a
    1834.  00:51E2  C3 B5 51            	jp	process_macro
    1835.  00:51E5                      macro_noise_sub:
    1836.  00:51E5                      macro_noise_add:
    1837.  00:51E5  1A                  	ld	a,(de)
    1838.  00:51E6  13                  	inc   de
    1839.  00:51E7  DD 86 FE            	add   (ix+TRACK_Noise)
    1840.  00:51EA  DD 77 FE            	ld	(ix+TRACK_Noise),a
    1841.  00:51ED                      	;ld	(PSG_regNOISE),a
    1842.  00:51ED  32 79 C1            	ld	(replay_noise),a
    1843.  00:51F0  C3 B5 51            	jp	process_macro
    1844.  00:51F3                      
    1845.  00:51F3                      macro_noise_vol:
    1846.  00:51F3  13                  	inc	de
    1847.  00:51F4  C3 B5 51            	jp	process_macro
    1848.  00:51F7                      
    1849.  00:51F7                      macro_voice:
    1850.  00:51F7  1A                  	ld	a,(de)
    1851.  00:51F8  13                  	inc	de
    1852.  00:51F9  DD 77 F8            	ld	(ix+TRACK_Voice),a	
    1853.  00:51FC  C3 B5 51            	jp	process_macro
    1854.  00:51FF                      
    1855.  00:51FF                      macro_envelope_shape:
    1856.  00:51FF  1A                  	ld	a,(de)
    1857.  00:5200  13                  	inc	de
    1858.  00:5201  32 78 C1            	ld	(PSG_regEnvShape),a
    1859.  00:5204                      
    1860.  00:5204                      macro_envelope:
    1861.  00:5204  3E 10               	ld	a,16			; set volume to 16 == envelope
    1862.  00:5206  32 AC C1            	ld	(FM_regVOLF),a
    1863.  00:5209  C3 65 52            	jp	_macro_end
    1864.  00:520C                      
    1865.  00:520C                      macro_loop:
    1866.  00:520C  EB                  	ex	de,hl
    1867.  00:520D  4E                  	ld	c,(hl)
    1868.  00:520E  06 FF               	ld	b,$ff
    1869.  00:5210  09                  	add	hl,bc
    1870.  00:5211  EB                  	ex	de,hl
    1871.  00:5212  C3 B5 51            	jp	process_macro
    1872.  00:5215                      
    1873.  00:5215                      macro_stop:
    1874.  00:5215  DD CB F9 8E         	res	B_ACTNOT,(ix+TRACK_Flags)
    1875.  00:5219  C3 B5 51            	jp	process_macro
    1876.  00:521C                      
    1877.  00:521C                      macro_volume_same:
    1878.  00:521C  DD 7E FD            	ld	a,(ix+TRACK_VolumeAdd)
    1879.  00:521F  C3 4A 52            	jp	_macro_set_volume
    1880.  00:5222                      
    1881.  00:5222                      macro_vol_base:
    1882.  00:5222  1A                  	ld	a,(de)
    1883.  00:5223  13                  	inc   de
    1884.  00:5224  DD 77 FD            	ld	(ix+TRACK_VolumeAdd),a
    1885.  00:5227  C3 4A 52            	jp	_macro_set_volume
    1886.  00:522A                      
    1887.  00:522A                      
    1888.  00:522A                      macro_vol_add:
    1889.  00:522A  1A                  	ld	a,(de)
    1890.  00:522B  13                  	inc   de
    1891.  00:522C  DD 86 FD            	add   (ix+TRACK_VolumeAdd)
    1892.  00:522F  FE 10               	cp	16
    1893.  00:5231  DA 36 52            	jp	c,.nolimit
    1894.  00:5234  3E 0F               	ld	a,$0f
    1895.  00:5236                      .nolimit:	  
    1896.  00:5236  DD 77 FD            	ld	(ix+TRACK_VolumeAdd),a
    1897.  00:5239  C3 4A 52            	jp	_macro_set_volume
    1898.  00:523C                      
    1899.  00:523C                      
    1900.  00:523C                      macro_vol_sub:
    1901.  00:523C  1A                  	ld	a,(de)
    1902.  00:523D  47                  	ld	b,a
    1903.  00:523E  13                  	inc   de
    1904.  00:523F  DD 7E FD            	ld	a,(ix+TRACK_VolumeAdd)
    1905.  00:5242  90                  	sub   b
    1906.  00:5243  D2 47 52            	jp	nc,.nolimit
    1907.  00:5246  AF                  	xor   a
    1908.  00:5247                      .nolimit:
    1909.  00:5247  DD 77 FD            	ld	(ix+TRACK_VolumeAdd),a
    1910.  00:524A                      
    1911.  00:524A                      ;-- Set the output volume directly after any update
    1912.  00:524A                      _macro_set_volume:
    1913.  00:524A  DD B6 F7            	or	(ix+TRACK_Volume)
    1914.  00:524D                      
    1915.  00:524D                      IFDEF tremolo_OFF
    1916.  00:524D                    ~ ELSE	
    1917.  00:524D  DD 46 FF            	ld 	b,(ix+TRACK_cmd_VolumeAdd)
    1918.  00:5250  90                  	sub	a,b
    1919.  00:5251  D2 57 52            	jp 	nc,.skip2
    1920.  00:5254  80                  	add	a,b
    1921.  00:5255  E6 0F                	and	0x0f
    1922.  00:5257                      ENDIF
    1923.  00:5257                      .skip2:
    1924.  00:5257                      ; pseudo code for jump table. 
    1925.  00:5257                      	;--- apply main volume balance
    1926.  00:5257  ED 4B 29 C0         	ld	bc,(replay_mainvol)
    1927.  00:525B  81                  	add	a,c
    1928.  00:525C  4F                  	ld	c,a
    1929.  00:525D  D2 61 52            	jp	nc,.skip
    1930.  00:5260  04                  	inc	b
    1931.  00:5261                      .skip:
    1932.  00:5261  0A                  	ld	a,(bc)	
    1933.  00:5262  32 AC C1            	ld	(FM_regVOLF),a
    1934.  00:5265                      
    1935.  00:5265                      _macro_end:
    1936.  00:5265                      	;--- Store macro pointer
    1937.  00:5265  DD 73 F1            	ld	(ix+TRACK_MacroPointer),e		;--- store pointer for next time
    1938.  00:5268  DD 72 F2            	ld	(ix+TRACK_MacroPointer+1),d	
    1939.  00:526B                      
    1940.  00:526B                      
    1941.  00:526B                      	;-- Get the current note
    1942.  00:526B  DD 7E F6            	ld	a,(ix+TRACK_Note)
    1943.  00:526E  DD 86 0D            	add	a,(ix+TRACK_cmd_NoteAdd)
    1944.  00:5271  87                  	add	a
    1945.  00:5272                      
    1946.  00:5272  2A 2D C0            	ld	hl,(replay_tonetable)
    1947.  00:5275  85                  	add	a,l
    1948.  00:5276  6F                  	ld	l,a
    1949.  00:5277  D2 7B 52            	jp	nc,.skip
    1950.  00:527A  24                  	inc	h
    1951.  00:527B                      .skip:
    1952.  00:527B  7E                  	ld	a,(hl)	;--- Store the note tone value in hl
    1953.  00:527C  23                  	inc	hl
    1954.  00:527D  66                  	ld	h,(hl)
    1955.  00:527E  6F                  	ld	l,a
    1956.  00:527F                      
    1957.  00:527F  DD 5E FB            	ld	e,(ix+TRACK_ToneAdd)
    1958.  00:5282  DD 56 FC            	ld	d,(ix+TRACK_ToneAdd+1)	
    1959.  00:5285  19                  	add	hl,de		;--- Store tone deviation
    1960.  00:5286                      
    1961.  00:5286                      	;-- set the detune. 
    1962.  00:5286  ED 73 00 C0         	ld	(_SP_Storage),sp
    1963.  00:528A  DD F9               	ld	sp,ix
    1964.  00:528C  D1                  	pop	de		; cmd_ToneSlideAdd
    1965.  00:528D  19                  	add	hl,de
    1966.  00:528E  C1                  	pop	bc		; cmd_ToneAdd
    1967.  00:528F  09                  	add	hl,bc
    1968.  00:5290  C1                  	pop	bc		; TRACK_cmd_detune
    1969.  00:5291  09                  	add	hl,bc
    1970.  00:5292  ED 7B 00 C0         	ld	sp,(_SP_Storage)
    1971.  00:5296                      
    1972.  00:5296                      	;-----------------
    1973.  00:5296                      	; FM Octave wrapper
    1974.  00:5296                      	; enable slides over multiple octaves.
    1975.  00:5296                      	; [DE] still contains tone slide add.
    1976.  00:5296                      	;-----------------
    1977.  00:5296                      _wrap:
    1978.  00:5296  DD CB F9 7E         	bit	B_PSGFM,(ix+TRACK_Flags)
    1979.  00:529A  CA F9 52            	jp	z,_wrap_PSG			; skip wrapper for PSG
    1980.  00:529D                      
    1981.  00:529D  CB 44               	bit	0,h
    1982.  00:529F  CA C9 52            	jp	z,_wrap_lowcheck
    1983.  00:52A2                      _wrap_highcheck:
    1984.  00:52A2  7D                  	ld	a,l
    1985.  00:52A3  FE 5A               	cp	$5a				; $5a is the strict limit
    1986.  00:52A5  DA EC 52            	jp	c,_wrap_skip		; stop if smaller	
    1987.  00:52A8                      	
    1988.  00:52A8  E5                  	push	hl
    1989.  00:52A9  D5                  	push	de
    1990.  00:52AA                      	
    1991.  00:52AA                      	;--- Set new tone value for same note 1 octave lower
    1992.  00:52AA  CB 3F               	srl	a
    1993.  00:52AC  CB 44               	bit 	0,h		; test 9th bit
    1994.  00:52AE  CA B3 52            	jp	z,99f
    1995.  00:52B1  C6 80               	add	128
    1996.  00:52B3                      99:
    1997.  00:52B3  5F                  	ld	e,a
    1998.  00:52B4                      ;	ld	d,0
    1999.  00:52B4                      	;--- set octave higher
    2000.  00:52B4  7C                  	ld	a,h
    2001.  00:52B5  E6 FE               	and	$fe
    2002.  00:52B7  C6 02               	add	$02
    2003.  00:52B9                      ;	add	d		; merge with tone value
    2004.  00:52B9  57                  	ld	d,a
    2005.  00:52BA                      	;--- get difference between now and new
    2006.  00:52BA  EB                  	ex	de,hl
    2007.  00:52BB  AF                  	xor	a		; reset carry flag
    2008.  00:52BC  ED 52               	sbc	hl,de
    2009.  00:52BE                      	;--- add difference to current slide
    2010.  00:52BE  D1                  	pop	de		; restore slide
    2011.  00:52BF  19                  	add	hl,de
    2012.  00:52C0  DD 75 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),l
    2013.  00:52C3  DD 74 01            	ld	(ix+TRACK_cmd_ToneSlideAdd+1),h	
    2014.  00:52C6  E1                  	pop	hl	
    2015.  00:52C7  18 23               	jr.	_wrap_skip
    2016.  00:52C9                      	
    2017.  00:52C9                      _wrap_lowcheck:
    2018.  00:52C9  7D                  	ld	a,l
    2019.  00:52CA  FE 3B               	cp	$3b		; $ad is the strict limit
    2020.  00:52CC  30 1E               	jr.	nc,_wrap_skip		; stop if smaller
    2021.  00:52CE                      
    2022.  00:52CE                      
    2023.  00:52CE  E5                  	push 	hl		; store freq
    2024.  00:52CF  D5                  	push	de		; store slide
    2025.  00:52D0                      	;--- set new tone value for same note (but octave lower)
    2026.  00:52D0  87                  	add	a,a		; multiply by 2 in de 
    2027.  00:52D1  5F                  	ld	e,a
    2028.  00:52D2  16 00               	ld	d,0
    2029.  00:52D4  D2 D8 52            	jp	nc,99f
    2030.  00:52D7  14                  	inc	d	
    2031.  00:52D8                      99:
    2032.  00:52D8                      	;--- set octave higher
    2033.  00:52D8  7C                  	ld	a,h
    2034.  00:52D9  E6 FE               	and	$fe
    2035.  00:52DB  D6 02               	sub	$02
    2036.  00:52DD  82                  	add	d		; merge with tone value
    2037.  00:52DE  57                  	ld	d,a
    2038.  00:52DF                      	;--- get difference between now and new
    2039.  00:52DF  EB                  	ex	de,hl
    2040.  00:52E0  AF                  	xor	a		; reset carry flag
    2041.  00:52E1  ED 52               	sbc	hl,de
    2042.  00:52E3                      	;--- add difference to current slide
    2043.  00:52E3  D1                  	pop	de		; restore slide
    2044.  00:52E4  19                  	add	hl,de	
    2045.  00:52E5                      	
    2046.  00:52E5  DD 75 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),l
    2047.  00:52E8  DD 74 01            	ld	(ix+TRACK_cmd_ToneSlideAdd+1),h	
    2048.  00:52EB  E1                  	pop	hl	
    2049.  00:52EC                      	
    2050.  00:52EC                      _wrap_skip:
    2051.  00:52EC                      	; replace the last pushed value on stack
    2052.  00:52EC  7C                  	ld	a,h			; reset keyon and sustain
    2053.  00:52ED  E6 0F               	and	$0f
    2054.  00:52EF  67                  	ld	h,a
    2055.  00:52F0  DD 7E F9            	ld	a,(ix+TRACK_Flags)	; Add the sustain and key bits.
    2056.  00:52F3  E6 30               	and	16+32
    2057.  00:52F5  B4                  	or	h
    2058.  00:52F6  FD B5               	or	iyl			; iyl is 64 if there is a note trigger
    2059.  00:52F8  67                  	ld	h,a
    2060.  00:52F9                      
    2061.  00:52F9                      _wrap_PSG:
    2062.  00:52F9                      	;--- Return the tone register value
    2063.  00:52F9  37                  	scf		; no cary is update the register value
    2064.  00:52FA  C9                  	ret
    2065.  00:52FB                      
    2066.  00:52FB                      
    2067.  00:52FB                      
    2068.  00:52FB                      process_noNoteActive:
    2069.  00:52FB                      	;-- Silence
    2070.  00:52FB  CB 7A               	bit	B_PSGFM,d
    2071.  00:52FD  CA 06 53            	jp	z,.psg
    2072.  00:5300                      .fm:
    2073.  00:5300  3E 0F               	ld	a,$0f
    2074.  00:5302  32 AC C1            	ld	(FM_regVOLF),a
    2075.  00:5305  C9                  	ret
    2076.  00:5306                      .psg:
    2077.  00:5306  AF                  	xor	a			; also clears the carry flag.
    2078.  00:5307  32 AC C1            	ld	(FM_regVOLF),a
    2079.  00:530A  C9                  	ret 	
    2080.  00:530B                      	
    2081.  00:530B                      ;process_noNoteActive:
    2082.  00:530B                      ;	pop	hl
    2083.  00:530B                      ;	
    2084.  00:530B                      ;	;-- for FM add key and sustain bits to tone
    2085.  00:530B                      ;	inc	hl
    2086.  00:530B                      ;	ld	a,d
    2087.  00:530B                      ;	and	16+32	; keep key and sustain flags
    2088.  00:530B                      ;	ld	b,a
    2089.  00:530B                      ;	ld	a,(hl)
    2090.  00:530B                      ;	and 	$0f
    2091.  00:530B                      ;	or 	b
    2092.  00:530B                      ;	ld	(hl),a
    2093.  00:530B                      ;	
    2094.  00:530B                      ;	;-- Silence
    2095.  00:530B                      ;	xor	a
    2096.  00:530B                      ;	ld	(FM_regVOLF),a
    2097.  00:530B                      ;	ld	(ix+TRACK_Flags),d
    2098.  00:530B                      ;	ret			
    2099.  00:530B                      
    2100.  00:530B                      			
    2101.  00:530B                      process_cmd0_arpeggio:
    2102.  00:530B  DD 7E 11            	ld	a,(ix+TRACK_Timer)
    2103.  00:530E  A7                  	and	a
    2104.  00:530F  CA 2F 53            	jp	z,.nextNote
    2105.  00:5312                      	
    2106.  00:5312  3D                  	dec	a
    2107.  00:5313  DD 77 11            	ld	(IX+TRACK_Timer),a
    2108.  00:5316  DD 7E 12            	ld	a,(ix+TRACK_Step)
    2109.  00:5319  A7                  	and	a
    2110.  00:531A  CA 28 53            	jp	z,.skip
    2111.  00:531D  DD 7E 06            	ld	a,(IX+TRACK_cmd_0)
    2112.  00:5320  E6 0F               	and	$0f
    2113.  00:5322  DD 77 0D            	ld	(ix+TRACK_cmd_NoteAdd),a	
    2114.  00:5325  C3 73 51            	jr.	process_commandEND
    2115.  00:5328                      .skip:
    2116.  00:5328  DD 36 0D 00         	ld	(ix+TRACK_cmd_NoteAdd),0	
    2117.  00:532C  C3 73 51            	jr.	process_commandEND
    2118.  00:532F                      	
    2119.  00:532F                      
    2120.  00:532F                      .nextNote:
    2121.  00:532F                      	; re-init the speed.
    2122.  00:532F  3A 24 C0            	ld	a,(replay_arp_speed)
    2123.  00:5332  DD 77 11            	ld	(IX+TRACK_Timer),a
    2124.  00:5335                      	
    2125.  00:5335  DD 7E 12            	ld	a,(ix+TRACK_Step)
    2126.  00:5338  A7                  	and	a
    2127.  00:5339  20 16               	jr.	nz,.skip1
    2128.  00:533B                      
    2129.  00:533B                      	;--- set x
    2130.  00:533B  DD 36 12 01         		ld	(ix+TRACK_Step),1
    2131.  00:533F  DD 7E 06            		ld	a,(ix+TRACK_cmd_0)
    2132.  00:5342  07                  		rlca
    2133.  00:5343  07                  		rlca
    2134.  00:5344  07                  		rlca
    2135.  00:5345  07                  		rlca		
    2136.  00:5346  DD 77 06            		ld	(ix+TRACK_cmd_0),a	
    2137.  00:5349  E6 0F               		and	$0f
    2138.  00:534B  DD 77 0D            		ld	(ix+TRACK_cmd_NoteAdd),a
    2139.  00:534E  C3 73 51            		jr.	process_commandEND
    2140.  00:5351                      	
    2141.  00:5351                      .skip1:
    2142.  00:5351  3D                  	dec	a
    2143.  00:5352  20 1D               	jr.	nz,.skip2
    2144.  00:5354                      
    2145.  00:5354                      	;--- set y
    2146.  00:5354  DD 36 12 02         		ld	(ix+TRACK_Step),2
    2147.  00:5358  DD 7E 06            		ld	a,(ix+TRACK_cmd_0)
    2148.  00:535B  07                  		rlca
    2149.  00:535C  07                  		rlca
    2150.  00:535D  07                  		rlca
    2151.  00:535E  07                  		rlca		
    2152.  00:535F  DD 77 06            		ld	(ix+TRACK_cmd_0),a			
    2153.  00:5362  E6 0F               		and	0x0f
    2154.  00:5364  C2 6B 53            		jp	nz,.zero
    2155.  00:5367                      		;--- if zero then skip this note and set step to start
    2156.  00:5367  DD 36 12 00         		ld	(ix+TRACK_Step),0
    2157.  00:536B                      .zero:		
    2158.  00:536B  DD 77 0D            		ld	(ix+TRACK_cmd_NoteAdd),a	
    2159.  00:536E  C3 73 51            		jr.	process_commandEND
    2160.  00:5371                      	
    2161.  00:5371                      .skip2:
    2162.  00:5371                      	;--- set none
    2163.  00:5371  DD 36 12 00         	ld	(ix+TRACK_Step),0
    2164.  00:5375  DD 36 0D 00         	ld	(ix+TRACK_cmd_NoteAdd),0		
    2165.  00:5379  C3 73 51            	jr.	process_commandEND
    2166.  00:537C                      		
    2167.  00:537C                      
    2168.  00:537C                      	
    2169.  00:537C                      
    2170.  00:537C                      	
    2171.  00:537C                      process_cmd1_port_up:
    2172.  00:537C  DD 7E 00            	ld	a,(ix+TRACK_cmd_ToneSlideAdd)
    2173.  00:537F  DD 96 07            	sub	(ix+TRACK_cmd_1)
    2174.  00:5382  DD 77 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),a
    2175.  00:5385  D2 73 51            	jp	nc,process_commandEND
    2176.  00:5388  DD 35 01            	dec	(ix+TRACK_cmd_ToneSlideAdd+1)
    2177.  00:538B  C3 73 51            	jp	process_commandEND
    2178.  00:538E                      
    2179.  00:538E                      	
    2180.  00:538E                      process_cmd2_port_down:	
    2181.  00:538E  DD 7E 00            	ld	a,(ix+TRACK_cmd_ToneSlideAdd)
    2182.  00:5391  DD 86 08            	add	(ix+TRACK_cmd_2)
    2183.  00:5394  DD 77 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),a
    2184.  00:5397  D2 73 51            	jp	nc,process_commandEND
    2185.  00:539A  DD 34 01            	inc	(ix+TRACK_cmd_ToneSlideAdd+1)
    2186.  00:539D  C3 73 51            	jp	process_commandEND
    2187.  00:53A0                      	
    2188.  00:53A0                      
    2189.  00:53A0                      process_cmd3_port_tone:
    2190.  00:53A0  DD 7E 09            	ld	a,(ix+TRACK_cmd_3)
    2191.  00:53A3  DD 6E 00            	ld	l,(ix+TRACK_cmd_ToneSlideAdd)
    2192.  00:53A6  DD 66 01            	ld	h,(ix+TRACK_cmd_ToneSlideAdd+1)
    2193.  00:53A9  CB 7C               	bit	7,h
    2194.  00:53AB  CA C1 53            	jp	z,process_cmd3_sub
    2195.  00:53AE                      process_cmd3_add:
    2196.  00:53AE                      	;pos slide
    2197.  00:53AE  85                  	add	a,l
    2198.  00:53AF  DD 77 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),a
    2199.  00:53B2  D2 B6 53            	jp	nc,.skip
    2200.  00:53B5  24                  	inc	h					
    2201.  00:53B6                      .skip:
    2202.  00:53B6  CB 7C               	bit	7,h
    2203.  00:53B8  CA D6 53            	jp	z,process_cmd3_stop			; delta turned pos ?
    2204.  00:53BB  DD 74 01            	ld	(ix+TRACK_cmd_ToneSlideAdd+1),h
    2205.  00:53BE  C3 73 51            	jp	process_commandEND
    2206.  00:53C1                      process_cmd3_sub:
    2207.  00:53C1                      	;negative slide	
    2208.  00:53C1  E6 7F               	and	$7f
    2209.  00:53C3  4F                  	ld	c,a
    2210.  00:53C4  AF                  	xor	a
    2211.  00:53C5  47                  	ld	b,a
    2212.  00:53C6  ED 42               	sbc	hl,bc
    2213.  00:53C8  CB 7C               	bit	7,h
    2214.  00:53CA  C2 D6 53            	jp	nz,process_cmd3_stop			; delta turned neg ?
    2215.  00:53CD  DD 75 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),l
    2216.  00:53D0  DD 74 01            	ld	(ix+TRACK_cmd_ToneSlideAdd+1),h
    2217.  00:53D3  C3 73 51            	jp	process_commandEND
    2218.  00:53D6                      process_cmd3_stop:	
    2219.  00:53D6                      ;	res	B_TRGCMD,d		;(ix+TRACK_Flags)
    2220.  00:53D6  DD 36 00 00         	ld	(ix+TRACK_cmd_ToneSlideAdd),0
    2221.  00:53DA  DD 36 01 00         	ld	(ix+TRACK_cmd_ToneSlideAdd+1),0	
    2222.  00:53DE  C3 73 51            	jp	process_commandEND
    2223.  00:53E1                      
    2224.  00:53E1                      
    2225.  00:53E1                      process_cmd8_tremolo:
    2226.  00:53E1                      IFDEF tremolo_OFF
    2227.  00:53E1                    ~ ELSE	
    2228.  00:53E1                      	;=================================
    2229.  00:53E1                      	;
    2230.  00:53E1                      	; tremolo	
    2231.  00:53E1                      	;
    2232.  00:53E1                      	;=================================	
    2233.  00:53E1  26 48               	ld	h,TRACK_Vibrato_sine >> 8
    2234.  00:53E3                      
    2235.  00:53E3                      ;	ld	l,(ix+TRACK_cmd_4_depth)
    2236.  00:53E3                      ;	ld	h,(ix+TRACK_cmd_4_depth+1)
    2237.  00:53E3                      
    2238.  00:53E3                      
    2239.  00:53E3                      	;--- Get next step
    2240.  00:53E3  DD 7E 12            	ld	a,(IX+TRACK_Step)
    2241.  00:53E6  DD 86 0C            	add	(ix+TRACK_cmd_4_step)
    2242.  00:53E9  E6 3F               	and	$3F			; max	64
    2243.  00:53EB  DD 77 12            	ld	(ix+TRACK_Step),a
    2244.  00:53EE  CB 2F               	sra	a			; devide step by 2	
    2245.  00:53F0                      
    2246.  00:53F0  DD 86 0A            	add	(ix+TRACK_cmd_4_depth)
    2247.  00:53F3                      ;	add	a,l
    2248.  00:53F3  6F                  	ld	l,a
    2249.  00:53F4                      ;	jp	nc,.skip
    2250.  00:53F4                      ;	inc	h
    2251.  00:53F4                      ;.skip:
    2252.  00:53F4  7E                  	ld	a,(hl)
    2253.  00:53F5  87                  	add	a
    2254.  00:53F6  87                  	add	a
    2255.  00:53F7  87                  	add	a
    2256.  00:53F8  87                  	add	a
    2257.  00:53F9  DD 77 FF            	ld	(ix+TRACK_cmd_VolumeAdd),a
    2258.  00:53FC                      ENDIF
    2259.  00:53FC  C3 73 51            	jp	process_commandEND	
    2260.  00:53FF                      
    2261.  00:53FF                      
    2262.  00:53FF                      
    2263.  00:53FF                      
    2264.  00:53FF                      	;=================================
    2265.  00:53FF                      	;
    2266.  00:53FF                      	; Vibrato	
    2267.  00:53FF                      	;
    2268.  00:53FF                      	;=================================
    2269.  00:53FF                      	; FIXME Remove this when implemented semitones in instruments
    2270.  00:53FF                      process_cmd4_vibrato_extended:
    2271.  00:53FF                      ;	ld	l,(ix+TRACK_cmd_4_depth)
    2272.  00:53FF                      ;	ld	h,(ix+TRACK_cmd_4_depth+1)
    2273.  00:53FF  26 49               	ld	h,TRACK_Vibrato_sine_extended >> 8	
    2274.  00:5401  C3 06 54            	jp	process_cmd4_vibrato.ext
    2275.  00:5404                      	;=================================
    2276.  00:5404                      	;
    2277.  00:5404                      	; Vibrato	
    2278.  00:5404                      	;
    2279.  00:5404                      	;=================================
    2280.  00:5404                      process_cmd4_vibrato:
    2281.  00:5404  26 48               	ld	h,TRACK_Vibrato_sine >> 8	
    2282.  00:5406                      .ext:
    2283.  00:5406                      	;--- Get next step
    2284.  00:5406  DD 7E 12            	ld	a,(IX+TRACK_Step)
    2285.  00:5409  DD 86 0C            	add	(ix+TRACK_cmd_4_step)
    2286.  00:540C  E6 3F               	and	$3F			; max	64
    2287.  00:540E  DD 77 12            	ld	(ix+TRACK_Step),a
    2288.  00:5411                      
    2289.  00:5411  CB 6F               	bit	5,a			; step 32-63 the neg	
    2290.  00:5413  CA 2C 54            	jp	z,.pos	
    2291.  00:5416                      	
    2292.  00:5416                      .neg:
    2293.  00:5416  E6 1F               	and	$1f	; make it 32 steps again
    2294.  00:5418                      ;	add	a,l
    2295.  00:5418  DD 86 0A            	add	(ix+TRACK_cmd_4_depth)
    2296.  00:541B  6F                  	ld	l,a
    2297.  00:541C                      ;	jp	nc,.skip1
    2298.  00:541C                      ;	inc	h
    2299.  00:541C                      ;.skip1:
    2300.  00:541C  7E                  	ld	a,(hl)
    2301.  00:541D  ED 44               	neg
    2302.  00:541F  CA 31 54            	jp	z,.zero			; $ff00 gives strange result ;)	
    2303.  00:5422  DD 77 02            	ld	(ix+TRACK_cmd_ToneAdd),a
    2304.  00:5425  DD 36 03 FF         	ld	(ix+TRACK_cmd_ToneAdd+1),0xff
    2305.  00:5429  C3 73 51            	jp	process_commandEND	
    2306.  00:542C                      
    2307.  00:542C                      .pos:
    2308.  00:542C  DD 86 0A            	add	(ix+TRACK_cmd_4_depth)
    2309.  00:542F                      ;	add	a,l
    2310.  00:542F  6F                  	ld	l,a
    2311.  00:5430                      ;	jp	nc,.skip2
    2312.  00:5430                      ;	inc	h
    2313.  00:5430                      ;.skip2:
    2314.  00:5430  7E                  	ld	a,(hl)
    2315.  00:5431                      .zero:	
    2316.  00:5431  DD 77 02            	ld	(ix+TRACK_cmd_ToneAdd),a
    2317.  00:5434  DD 36 03 00         	ld	(ix+TRACK_cmd_ToneAdd+1),0
    2318.  00:5438  C3 73 51            	jp	process_commandEND	
    2319.  00:543B                      
    2320.  00:543B                      
    2321.  00:543B                      process_cmd5_vibrato_port_tone:
    2322.  00:543B  CD 4D 54            	call	process_cmdasub
    2323.  00:543E  C3 A0 53            	jp	process_cmd3_port_tone
    2324.  00:5441                      	
    2325.  00:5441                      process_cmd6_vibrato_vol:
    2326.  00:5441  CD 4D 54            	call	process_cmdasub
    2327.  00:5444  C3 04 54            	jp	process_cmd4_vibrato	
    2328.  00:5447                      
    2329.  00:5447                      process_cmd7_vol_slide:
    2330.  00:5447  CD 4D 54            	call	process_cmdasub
    2331.  00:544A  C3 73 51            	jp	process_commandEND
    2332.  00:544D                      
    2333.  00:544D                      
    2334.  00:544D                      process_cmdasub:
    2335.  00:544D  DD 35 11            	dec	(ix+TRACK_Timer)
    2336.  00:5450  C0                  	ret	nz
    2337.  00:5451                      		
    2338.  00:5451                      	; vol	slide
    2339.  00:5451  DD 7E 0E            	ld	a,(ix+TRACK_cmd_A)
    2340.  00:5454  4F                  	ld	c,a
    2341.  00:5455  E6 7F               	and	$7f
    2342.  00:5457  DD 77 11            	ld	(ix+TRACK_Timer),a
    2343.  00:545A                      
    2344.  00:545A  DD 7E F7            	ld	a,(ix+TRACK_Volume)
    2345.  00:545D  CB 79               	bit	7,c
    2346.  00:545F  CA 6A 54            	jp	z,process_cmda_inc
    2347.  00:5462                      process_cmda_dec:
    2348.  00:5462  A7                  	and	a
    2349.  00:5463  C8                  	ret	z
    2350.  00:5464  D6 10               	sub	$10
    2351.  00:5466  DD 77 F7            	ld	(ix+TRACK_Volume),a
    2352.  00:5469  C9                  	ret
    2353.  00:546A                      process_cmda_inc:
    2354.  00:546A  FE F0               	cp	$f0
    2355.  00:546C  D0                  	ret	nc
    2356.  00:546D  C6 10               	add	$10	
    2357.  00:546F  DD 77 F7            	ld	(ix+TRACK_Volume),a
    2358.  00:5472  C9                  	ret
    2359.  00:5473                      
    2360.  00:5473                      
    2361.  00:5473                      
    2362.  00:5473                      process_cmd9_note_cut:
    2363.  00:5473  DD 35 11            	dec	(ix+TRACK_Timer)
    2364.  00:5476  C2 73 51            	jp	nz,process_commandEND
    2365.  00:5479                      	
    2366.  00:5479                      	; stop note
    2367.  00:5479  CB 9A               	res	B_TRGCMD,d	; set	note bit to	0
    2368.  00:547B  CB 8A               	res	B_ACTNOT,d
    2369.  00:547D  C3 73 51            	jp	process_commandEND		
    2370.  00:5480                      	
    2371.  00:5480                      process_cmd10_note_delay:
    2372.  00:5480                      	; note delay
    2373.  00:5480  DD 35 11            	dec	(ix+TRACK_Timer)
    2374.  00:5483  C2 73 51            	jp	nz,process_commandEND	; no delay yet
    2375.  00:5486                      
    2376.  00:5486                      	; trigger note
    2377.  00:5486  DD 7E 10            	ld	a,(ix+TRACK_cmd_E)		
    2378.  00:5489  DD 77 F6            	ld	(ix+TRACK_Note),a		; set	the note val
    2379.  00:548C  CB C2               	set	B_TRGNOT,d	;(ix+TRACK_Flags)		; set	trigger note flag
    2380.  00:548E  CB 9A               	res	B_TRGCMD,d	;(ix+TRACK_Flags)		; reset trigger cmd flag
    2381.  00:5490                      	
    2382.  00:5490  C3 73 51            	jp	process_commandEND	
    2383.  00:5493                      
    2384.  00:5493                      
    2385.  00:5493                      
    2386.  00:5493                      ;============================================================================
    2387.  00:5493                      ; process_drum
    2388.  00:5493                      ;
    2389.  00:5493                      ;
    2390.  00:5493                      ;
    2391.  00:5493                      ;============================================================================
    2392.  00:5493                      process_drum:
    2393.  00:5493  3A C2 C1            	ld	a,(FM_DRUM_ACTIVE)
    2394.  00:5496  A7                  	and	a
    2395.  00:5497  C2 9E 54            	jp	nz,.yes
    2396.  00:549A                      	;--- Nothing to play
    2397.  00:549A  32 C0 C1            	ld	(FM_DRUM),a
    2398.  00:549D  C9                  	ret
    2399.  00:549E                      .yes:	
    2400.  00:549E                      	;-- Retrieve the next action
    2401.  00:549E  ED 4B C3 C1         	ld	bc,(FM_DRUM_MACRO)
    2402.  00:54A2                      
    2403.  00:54A2                      
    2404.  00:54A2                      _process_drum_loop:
    2405.  00:54A2  21 C1 47            	ld	hl,DRUM_MACRO_LIST-4
    2406.  00:54A5  0A                  	ld	a,(bc)
    2407.  00:54A6  87                  	add	a
    2408.  00:54A7  85                  	add	l
    2409.  00:54A8  6F                  	ld	l,a
    2410.  00:54A9  03                  	inc	bc
    2411.  00:54AA  E9                  	jp	hl
    2412.  00:54AB                      
    2413.  00:54AB                      ;	ld	hl,DRUM_MACRO_LIST-2
    2414.  00:54AB                      ;	ld	a,(bc)
    2415.  00:54AB                      ;	inc	bc
    2416.  00:54AB                      ;;	and	a
    2417.  00:54AB                      ;;	jp	z,.end
    2418.  00:54AB                      ;	add	a,l
    2419.  00:54AB                      ;	ld	l,a
    2420.  00:54AB                      ;	jp	nc,99f
    2421.  00:54AB                      ;	inc	h
    2422.  00:54AB                      ;99:
    2423.  00:54AB                      ;	ld	a,(hl)
    2424.  00:54AB                      ;	inc	hl
    2425.  00:54AB                      ;	ld	h,(hl)
    2426.  00:54AB                      ;	ld	l,a
    2427.  00:54AB                      ;	jp	(hl)
    2428.  00:54AB                      
    2429.  00:54AB                      
    2430.  00:54AB                      _drum_stop:			;2
    2431.  00:54AB  AF                  	xor	a
    2432.  00:54AC  32 C2 C1            	ld	(FM_DRUM_ACTIVE),a
    2433.  00:54AF  32 C0 C1            	ld	(FM_DRUM),a	
    2434.  00:54B2  C9                  	ret
    2435.  00:54B3                      
    2436.  00:54B3                      _drum_vol_bd:		;4
    2437.  00:54B3  0A                  	ld	a,(bc)
    2438.  00:54B4  03                  	inc	bc
    2439.  00:54B5  32 B2 C1            	ld	(DRUM_regVolBD),a
    2440.  00:54B8  C3 A2 54            	jp	_process_drum_loop
    2441.  00:54BB                      
    2442.  00:54BB                      _drum_vol_sn:		;6
    2443.  00:54BB  3A B8 C1            	ld	a,(DRUM_regVolSH)
    2444.  00:54BE  E6 F0               	and	0xf0
    2445.  00:54C0  57                  	ld	d,a
    2446.  00:54C1  0A                  	ld	a,(bc)
    2447.  00:54C2  03                  	inc	bc
    2448.  00:54C3  B2                  	or	d
    2449.  00:54C4  32 B8 C1            	ld	(DRUM_regVolSH),a
    2450.  00:54C7  C3 A2 54            	jp	_process_drum_loop
    2451.  00:54CA                      
    2452.  00:54CA                      _drum_vol_hh:		;8
    2453.  00:54CA  3A B8 C1            	ld	a,(DRUM_regVolSH)
    2454.  00:54CD  E6 0F               	and	0x0f
    2455.  00:54CF  57                  	ld	d,a
    2456.  00:54D0  0A                  	ld	a,(bc)
    2457.  00:54D1  03                  	inc	bc
    2458.  00:54D2  B2                  	or	d
    2459.  00:54D3  32 B8 C1            	ld	(DRUM_regVolSH),a
    2460.  00:54D6  C3 A2 54            	jp	_process_drum_loop
    2461.  00:54D9                      
    2462.  00:54D9                      _drum_vol_snhh:	;a
    2463.  00:54D9  0A                  	ld	a,(bc)
    2464.  00:54DA  03                  	inc	bc
    2465.  00:54DB  32 B8 C1            	ld	(DRUM_regVolSH),a
    2466.  00:54DE  C3 A2 54            	jp	_process_drum_loop
    2467.  00:54E1                      
    2468.  00:54E1                      
    2469.  00:54E1                      _drum_vol_cy:		;6
    2470.  00:54E1  3A BE C1            	ld	a,(DRUM_regVolCT)
    2471.  00:54E4  E6 F0               	and	0xf0
    2472.  00:54E6  57                  	ld	d,a
    2473.  00:54E7  0A                  	ld	a,(bc)
    2474.  00:54E8  03                  	inc	bc
    2475.  00:54E9  B2                  	or	d
    2476.  00:54EA  32 BE C1            	ld	(DRUM_regVolCT),a
    2477.  00:54ED  C3 A2 54            	jp	_process_drum_loop
    2478.  00:54F0                      
    2479.  00:54F0                      _drum_vol_tt:		;8
    2480.  00:54F0  3A BE C1            	ld	a,(DRUM_regVolCT)
    2481.  00:54F3  E6 0F               	and	0x0f
    2482.  00:54F5  57                  	ld	d,a
    2483.  00:54F6  0A                  	ld	a,(bc)
    2484.  00:54F7  03                  	inc	bc
    2485.  00:54F8  B2                  	or	d
    2486.  00:54F9  32 BE C1            	ld	(DRUM_regVolCT),a
    2487.  00:54FC  C3 A2 54            	jp	_process_drum_loop
    2488.  00:54FF                      
    2489.  00:54FF                      _drum_vol_cytt:	;a
    2490.  00:54FF  0A                  	ld	a,(bc)
    2491.  00:5500  03                  	inc	bc
    2492.  00:5501  32 BE C1            	ld	(DRUM_regVolCT),a
    2493.  00:5504  C3 A2 54            	jp	_process_drum_loop
    2494.  00:5507                      
    2495.  00:5507                      _drum_note_bd:	;12
    2496.  00:5507  0A                  	ld	a,(bc)
    2497.  00:5508  03                  	inc	bc
    2498.  00:5509  32 AE C1            	ld	(DRUM_regToneBD),a
    2499.  00:550C  0A                  	ld	a,(bc)
    2500.  00:550D  03                  	inc	bc
    2501.  00:550E  32 AF C1            	ld	(DRUM_regToneBD+1),a
    2502.  00:5511  C3 A2 54            	jp	_process_drum_loop
    2503.  00:5514                      
    2504.  00:5514                      _drum_tone_bd:	;14
    2505.  00:5514  2A AE C1            	ld	hl,(DRUM_regToneBD)
    2506.  00:5517  0A                  	ld	a,(bc)
    2507.  00:5518  5F                  	ld	e,a
    2508.  00:5519  03                  	inc	bc
    2509.  00:551A  0A                  	ld	a,(bc)
    2510.  00:551B  03                  	inc	bc
    2511.  00:551C  57                  	ld	d,a
    2512.  00:551D  19                  	add	hl,de
    2513.  00:551E                      ;	ld	(DRUM_regToneBD),hl
    2514.  00:551E  C3 A2 54            	jp	_process_drum_loop
    2515.  00:5521                      
    2516.  00:5521                      _drum_note_snhh:	;16
    2517.  00:5521  0A                  	ld	a,(bc)
    2518.  00:5522  03                  	inc	bc
    2519.  00:5523  32 B4 C1            	ld	(DRUM_regToneSH),a
    2520.  00:5526  0A                  	ld	a,(bc)
    2521.  00:5527  03                  	inc	bc
    2522.  00:5528  32 B5 C1            	ld	(DRUM_regToneSH+1),a
    2523.  00:552B  C3 A2 54            	jp	_process_drum_loop
    2524.  00:552E                      
    2525.  00:552E                      _drum_tone_snhh:	;18
    2526.  00:552E  2A B4 C1            	ld	hl,(DRUM_regToneSH)
    2527.  00:5531  0A                  	ld	a,(bc)
    2528.  00:5532  5F                  	ld	e,a
    2529.  00:5533  03                  	inc	bc
    2530.  00:5534  0A                  	ld	a,(bc)
    2531.  00:5535  03                  	inc	bc
    2532.  00:5536  57                  	ld	d,a
    2533.  00:5537  19                  	add	hl,de
    2534.  00:5538  22 B4 C1            	ld	(DRUM_regToneSH),hl
    2535.  00:553B  C3 A2 54            	jp	_process_drum_loop
    2536.  00:553E                      
    2537.  00:553E                      _drum_note_cytt:	;1a
    2538.  00:553E  0A                  	ld	a,(bc)
    2539.  00:553F  03                  	inc	bc
    2540.  00:5540  32 BA C1            	ld	(DRUM_regToneCT),a
    2541.  00:5543  0A                  	ld	a,(bc)
    2542.  00:5544  03                  	inc	bc
    2543.  00:5545  32 BB C1            	ld	(DRUM_regToneCT+1),a
    2544.  00:5548  C3 A2 54            	jp	_process_drum_loop
    2545.  00:554B                      
    2546.  00:554B                      _drum_tone_cytt:	;1c
    2547.  00:554B  2A BA C1            	ld	hl,(DRUM_regToneCT)
    2548.  00:554E  0A                  	ld	a,(bc)
    2549.  00:554F  5F                  	ld	e,a
    2550.  00:5550  03                  	inc	bc
    2551.  00:5551  0A                  	ld	a,(bc)
    2552.  00:5552  03                  	inc	bc
    2553.  00:5553  57                  	ld	d,a
    2554.  00:5554  19                  	add	hl,de
    2555.  00:5555  22 BA C1            	ld	(DRUM_regToneCT),hl
    2556.  00:5558  C3 A2 54            	jp	_process_drum_loop
    2557.  00:555B                      
    2558.  00:555B                      _drum_percussion:	;1e
    2559.  00:555B  0A                  	ld	a,(bc)
    2560.  00:555C  03                  	inc	bc
    2561.  00:555D  32 C0 C1            	ld	(FM_DRUM),a
    2562.  00:5560                      ;	jp	_process_drum_loop
    2563.  00:5560                      .end:
    2564.  00:5560                      ;	inc	bc
    2565.  00:5560  ED 43 C3 C1         	ld	(FM_DRUM_MACRO),bc
    2566.  00:5564  C9                  	ret	
    2567.  00:5565                      
    2568.  00:5565                      
    2569.  00:5565                      
    2570.  00:5565                      
    2571.  00:5565                      ;===========================================================
    2572.  00:5565                      ; ---replay_route
    2573.  00:5565                      ; Output the data	to the CHIP	registers
    2574.  00:5565                      ; 
    2575.  00:5565                      ; 
    2576.  00:5565                      ;===========================================================
    2577.  00:5565                      replay_route:
    2578.  00:5565                      ;---------------
    2579.  00:5565                      ; P S G 
    2580.  00:5565                      ;---------------
    2581.  00:5565  3A 72 C1            	ld	a,(PSG_regMIXER)
    2582.  00:5568  E6 C0               	and	11000000b
    2583.  00:556A  FE 80               	cp	10000000b
    2584.  00:556C  C2 73 55            	jp	nz,99f
    2585.  00:556F                      0:
    2586.  00:556F  76                  	halt
    2587.  00:5570  C3 6F 55            	jp	0b
    2588.  00:5573                      99:
    2589.  00:5573                      	;--- Push values to AY HW
    2590.  00:5573  21 78 C1            	ld	hl,PSG_registers+13
    2591.  00:5576  01 A1 0C            	ld	bc,$0ca1			; 12 seq reg updates + port $a1
    2592.  00:5579                      
    2593.  00:5579                      	;--- Envelope shape R#13
    2594.  00:5579  7E                  	ld	a,(hl)
    2595.  00:557A  A7                  	and	a				; Value to write?
    2596.  00:557B  CA 87 55            	jp	z,_ptAY_noEnv	
    2597.  00:557E  57                  	ld	d,a	
    2598.  00:557F  3E 0D               	ld	a,$0d
    2599.  00:5581  D3 A0               	out	($a0),a	
    2600.  00:5583  ED 51               	out	(c),d
    2601.  00:5585  36 00               	ld	(hl),0			;reset the envwrite	
    2602.  00:5587                      _ptAY_noEnv:
    2603.  00:5587  2B                  	dec	hl
    2604.  00:5588  3E 0C               	ld	a,$0c				; Start at reg $0c 
    2605.  00:558A                      
    2606.  00:558A                      	;--- Rolled out psg update 6 times
    2607.  00:558A  D3 A0               	out	($a0),a			; reg c
    2608.  00:558C  3D                  	dec	a
    2609.  00:558D  ED AB               	outd
    2610.  00:558F  D3 A0               	out	($a0),a			; reg b
    2611.  00:5591  3D                  	dec	a
    2612.  00:5592  ED AB               	outd
    2613.  00:5594  D3 A0               	out	($a0),a			; reg	a
    2614.  00:5596  3D                  	dec	a
    2615.  00:5597  ED AB               	outd
    2616.  00:5599  D3 A0               	out	($a0),a			; reg	9
    2617.  00:559B  3D                  	dec	a
    2618.  00:559C  ED AB               	outd
    2619.  00:559E  D3 A0               	out	($a0),a			; reg 8
    2620.  00:55A0  3D                  	dec	a
    2621.  00:55A1  ED AB               	outd
    2622.  00:55A3  D3 A0               	out	($a0),a			; reg 7
    2623.  00:55A5  3D                  	dec	a
    2624.  00:55A6  ED AB               	outd
    2625.  00:55A8  D3 A0               	out	($a0),a			; reg 6
    2626.  00:55AA  ED AB               	outd
    2627.  00:55AC  3D                  	dec	a
    2628.  00:55AD  16 FF               	ld	d,$ff
    2629.  00:55AF                      _ptAY_loop:
    2630.  00:55AF  3D                  	dec	a
    2631.  00:55B0  D3 A0               	out	($a0),a
    2632.  00:55B2  ED 51               	out	(c),d
    2633.  00:55B4  3C                  	inc	a
    2634.  00:55B5  D3 A0               	out	($a0),a
    2635.  00:55B7  ED AB               	outd
    2636.  00:55B9  3D                  	dec	a
    2637.  00:55BA  D3 A0               	out	($a0),a
    2638.  00:55BC  ED AB               	outd
    2639.  00:55BE  3D                  	dec	a
    2640.  00:55BF  F2 AF 55            	jp	p,_ptAY_loop
    2641.  00:55C2                      		
    2642.  00:55C2                      	
    2643.  00:55C2                      
    2644.  00:55C2                      
    2645.  00:55C2                      
    2646.  00:55C2                      ;---------------
    2647.  00:55C2                      ; F M
    2648.  00:55C2                      ;---------------
    2649.  00:55C2                      route_FM:
    2650.  00:55C2                      	;--- 	Write FM channel registers
    2651.  00:55C2                      	;--- Store CPU type for later.
    2652.  00:55C2  3A 2F C0            	ld	a,(r800)
    2653.  00:55C5  5F                  	ld	e,a
    2654.  00:55C6  A7                  	and	a
    2655.  00:55C7  CA CF 55            	jp	z,.skipcount
    2656.  00:55CA                      	;--- init the r800 wait timer
    2657.  00:55CA  DB E6               	in	a,($e6)
    2658.  00:55CC  32 30 C0            	ld	(count_low),a
    2659.  00:55CF                      .skipcount:
    2660.  00:55CF                      	;--- Check if we need to update the voice regs
    2661.  00:55CF  3A 2C C0            	ld	a,(FM_softvoice_req)
    2662.  00:55D2  A7                  	and	a
    2663.  00:55D3  CA F0 55            	jp	z,.channels
    2664.  00:55D6                      
    2665.  00:55D6                      	;--- update the voice registers
    2666.  00:55D6  08                  	ex	af,af'
    2667.  00:55D7  AF                  	xor	a
    2668.  00:55D8  32 2C C0            	ld	(FM_softvoice_req),a
    2669.  00:55DB  21 7A C1            	ld	hl,FM_Voicereg
    2670.  00:55DE  01 00 08            	ld	bc,$0800		; 8 values, base register 0
    2671.  00:55E1                      
    2672.  00:55E1                      .voiceloop:
    2673.  00:55E1  7E                  	ld	a,(hl)
    2674.  00:55E2  23                  	inc	hl
    2675.  00:55E3  BE                  	cp	(hl)
    2676.  00:55E4  CA EC 55            	jp	z,.skipvoicereg
    2677.  00:55E7  57                  	ld	d,a
    2678.  00:55E8  79                  	ld	a,c
    2679.  00:55E9  CD 66 56            	call	_writeFM	
    2680.  00:55EC                      .skipvoicereg:
    2681.  00:55EC  23                  	inc	hl
    2682.  00:55ED  0C                  	inc	c
    2683.  00:55EE  10 F1               	djnz	.voiceloop
    2684.  00:55F0                      
    2685.  00:55F0                      
    2686.  00:55F0                      .channels:
    2687.  00:55F0  01 10 09            	ld	bc, $0910			; 9 channels, start reg# is $10
    2688.  00:55F3  21 8B C1            	ld	hl,FM_regToneA+1		; pointer to the backup of reg# $2x
    2689.  00:55F6                      .channel_loop:
    2690.  00:55F6                      ;	;--- Check if channel is active
    2691.  00:55F6  7E                  	ld	a,(hl)
    2692.  00:55F7                      ;	cp	128		; test bit 7	0 = chan not active
    2693.  00:55F7                      ;	jp	c,.notActive
    2694.  00:55F7  FE 40               	cp	64		; test bit 6	1 = note trigger
    2695.  00:55F9  DA 19 56            	jp	c,.noKeyOnSwitch
    2696.  00:55FC                      
    2697.  00:55FC                      .keyOnSwitch:
    2698.  00:55FC                      	;--- Flip KeyOn bit
    2699.  00:55FC                      	; To be honest I am a little confused on the this part as 
    2700.  00:55FC                      	; with certain FM instruments ($14) it is not sufficient to 
    2701.  00:55FC                      	; disable the keyon bit and enable it.  It needs to be a 
    2702.  00:55FC                      	; full on-off-on sequence to work on all instruments.
    2703.  00:55FC  23                  	inc	hl
    2704.  00:55FD  23                  	inc	hl
    2705.  00:55FE  7E                  	ld	a,(hl)
    2706.  00:55FF                      	;--- Check if Key is already ON
    2707.  00:55FF  CB 67               	bit	4,a
    2708.  00:5601  C2 0E 56            	jp	nz,99f		; skip if key was already set
    2709.  00:5604  F6 10               	or	00010000b		; set bit
    2710.  00:5606  57                  	ld	d,a
    2711.  00:5607  3E 10               	ld	a,$10
    2712.  00:5609  81                  	add	c
    2713.  00:560A  CD 66 56            	call	_writeFM
    2714.  00:560D  7E                  	ld	a,(hl)	
    2715.  00:560E                      99:
    2716.  00:560E  E6 2F               	and	00101111b		; reset keyon bit
    2717.  00:5610  57                  	ld	d,a
    2718.  00:5611  3E 10               	ld	a,$10
    2719.  00:5613  81                  	add	c
    2720.  00:5614  CD 66 56            	call	_writeFM
    2721.  00:5617  2B                  	dec	hl
    2722.  00:5618  2B                  	dec	hl
    2723.  00:5619                      .noKeyOnSwitch:
    2724.  00:5619  2B                  	dec	hl
    2725.  00:561A                      	;--- Write reg $1x
    2726.  00:561A  7E                  	ld	a,(hl)
    2727.  00:561B  23                  	inc	hl
    2728.  00:561C  23                  	inc	hl
    2729.  00:561D  BE                  	cp	(hl)
    2730.  00:561E  CA 26 56            	jp	z,99f			; No change in value
    2731.  00:5621  57                  	ld	d,a			; Store value in D
    2732.  00:5622  79                  	ld	a,c			; Store reg# in C
    2733.  00:5623  CD 66 56            	call	_writeFM
    2734.  00:5626                      99:
    2735.  00:5626  2B                  	dec	hl
    2736.  00:5627                      	;--- Write reg $2x
    2737.  00:5627  7E                  	ld	a,(hl)
    2738.  00:5628  23                  	inc	hl
    2739.  00:5629  23                  	inc	hl
    2740.  00:562A  BE                  	cp	(hl)
    2741.  00:562B  CA 35 56            	jp	z,99f			; No change in value
    2742.  00:562E  57                  	ld	d,a			; Store value in D
    2743.  00:562F  3E 10               	ld	a,$10
    2744.  00:5631  81                  	add	a,c			; Store reg# in C+10
    2745.  00:5632  CD 66 56            	call	_writeFM
    2746.  00:5635                      99:
    2747.  00:5635  23                  	inc	hl	
    2748.  00:5636                      	;--- Write reg $3x
    2749.  00:5636  7E                  	ld	a,(hl)
    2750.  00:5637  23                  	inc	hl
    2751.  00:5638  BE                  	cp	(hl)
    2752.  00:5639  CA 43 56            	jp	z,99f			; No change in value
    2753.  00:563C  57                  	ld	d,a			; Store value in D
    2754.  00:563D  3E 20               	ld	a,$20
    2755.  00:563F  81                  	add	c			; Store reg# in C
    2756.  00:5640  CD 66 56            	call	_writeFM
    2757.  00:5643                      99:
    2758.  00:5643  23                  	inc	hl
    2759.  00:5644  23                  	inc	hl
    2760.  00:5645                      .continue:	
    2761.  00:5645  0C                  	inc	c			; increase base register with 1
    2762.  00:5646  10 AE               	djnz	.channel_loop
    2763.  00:5648                      
    2764.  00:5648                      	;--- write rythm register
    2765.  00:5648                      .rythm:	
    2766.  00:5648  46                  	ld	b,(hl)
    2767.  00:5649  2B                  	dec	hl
    2768.  00:564A  7E                  	ld	a,(hl)
    2769.  00:564B  A7                  	and	a			; no drums
    2770.  00:564C  C8                  	ret	z
    2771.  00:564D                      
    2772.  00:564D  23                  	inc	hl
    2773.  00:564E  4F                  	ld	c,a			; save new
    2774.  00:564F  EE 1F               	xor	$1f			; create key off mask
    2775.  00:5651  A0                  	and	b			; reset bits to trigger
    2776.  00:5652  57                  	ld	d,a			
    2777.  00:5653  3E 0E               	ld	a,$0e			
    2778.  00:5655  CD 66 56            	call	_writeFM
    2779.  00:5658                      
    2780.  00:5658  79                  	ld	a,c			; restore new
    2781.  00:5659  B0                  	or	b			; add old key-on bits
    2782.  00:565A  57                  	ld	d,a
    2783.  00:565B  CD 72 56            	call	_writeFM_data
    2784.  00:565E  C9                  	ret
    2785.  00:565F                      
    2786.  00:565F                      .notActive:
    2787.  00:565F  11 06 00            	ld	de,6
    2788.  00:5662  19                  	add	hl,de
    2789.  00:5663  C3 45 56            	jp	.continue
    2790.  00:5666                      	;--- Points to start address of next chan
    2791.  00:5666                      
    2792.  00:5666                      
    2793.  00:5666                      
    2794.  00:5666                      ; [A] reg#
    2795.  00:5666                      ; [D] value
    2796.  00:5666                      ; [E] R800	(0=Z80, 1 = R800)
    2797.  00:5666                      ; [HL] points to previous value
    2798.  00:5666                      _writeFM:
    2799.  00:5666  CB 43               	bit	0,e				;  8 cycles
    2800.  00:5668  C2 7C 56            	jp	nz,_writeFM_R800		; 10 cycles
    2801.  00:566B  D3 7C               	out	(FM_WRITE),a		; 11 cycles
    2802.  00:566D  7A                  	ld	a,d				;  4 cycles
    2803.  00:566E                      _writeFM_cont:
    2804.  00:566E  77                  	ld	(hl),a			;  7 cycles	
    2805.  00:566F  D3 7D               	out	(FM_DATA),a			; 11 cycles
    2806.  00:5671  C9                  	ret					; 10 cycles
    2807.  00:5672                      
    2808.  00:5672                      ; [D] value
    2809.  00:5672                      ; [E] R800	(0=Z80, 1 = R800)
    2810.  00:5672                      ; [HL] points to previous value
    2811.  00:5672                      _writeFM_data:
    2812.  00:5672  CB 43               	bit	0,e				;  8 cycles
    2813.  00:5674  C2 A5 56            	jp	nz,_writeFM_data_R800	; 10 cycles
    2814.  00:5677  C5                  	push	bc				; 11 cycles	Dummy for write delay
    2815.  00:5678  C1                  	pop	bc				; 11 cycles	Dummy for write delay
    2816.  00:5679  C3 6E 56            	jp	_writeFM_cont		; 10 cycles
    2817.  00:567C                      
    2818.  00:567C                      ; [A] reg#
    2819.  00:567C                      ; [D] value
    2820.  00:567C                      ; [HL] points to previous value
    2821.  00:567C                      _writeFM_R800:		
    2822.  00:567C                      	;--- wait to write
    2823.  00:567C  D5                  	push	de
    2824.  00:567D  08                  	ex	af,af'
    2825.  00:567E  3A 30 C0            	ld	a,(count_low)
    2826.  00:5681  57                  	ld	d,a
    2827.  00:5682                      .loop_long:
    2828.  00:5682  DB E6               	in	a,($e6)
    2829.  00:5684  92                  	sub	d
    2830.  00:5685  FE 06               	cp	6
    2831.  00:5687  DA 82 56            	jp	c,.loop_long
    2832.  00:568A                      
    2833.  00:568A  D1                  	pop	de
    2834.  00:568B  08                  	ex	af,af'
    2835.  00:568C                      	;-- write address
    2836.  00:568C  D3 7C               	out	(FM_WRITE),a		; 11 cycles
    2837.  00:568E                      
    2838.  00:568E  DB E6               	in	a,($e6)
    2839.  00:5690                      	;--- wait to write
    2840.  00:5690  D5                  	push	de
    2841.  00:5691  57                  	ld	d,a
    2842.  00:5692                      .loop_short
    2843.  00:5692  DB E6               	in	a,($e6)
    2844.  00:5694  92                  	sub	d
    2845.  00:5695  FE 01               	cp	1
    2846.  00:5697  DA 92 56            	jp	c,.loop_short
    2847.  00:569A  D1                  	pop	de
    2848.  00:569B                      _writeFM_R800_cont:
    2849.  00:569B                      	;--- write data
    2850.  00:569B  7A                  	ld	a,d				;  4 cycles
    2851.  00:569C  72                  	ld	(hl),d			;  7 cycles	
    2852.  00:569D  D3 7D               	out	(FM_DATA),a			; 11 cycles
    2853.  00:569F  DB E6               	in	a,($e6)
    2854.  00:56A1  32 30 C0            	ld	(count_low),a
    2855.  00:56A4  C9                  	ret					; 10 cycles
    2856.  00:56A5                      
    2857.  00:56A5                      ; [D] value
    2858.  00:56A5                      ; [HL] points to previous value
    2859.  00:56A5                      _writeFM_data_R800:
    2860.  00:56A5                      	;--- wait to write
    2861.  00:56A5  D5                  	push	de
    2862.  00:56A6  3A 30 C0            	ld	a,(count_low)
    2863.  00:56A9  57                  	ld	d,a
    2864.  00:56AA                      .loop_long:
    2865.  00:56AA  DB E6               	in	a,($e6)
    2866.  00:56AC  92                  	sub	d
    2867.  00:56AD  FE 06               	cp	6
    2868.  00:56AF  DA AA 56            	jp	c,.loop_long
    2869.  00:56B2  D1                  	pop	de
    2870.  00:56B3  C3 9B 56            	jp	_writeFM_R800_cont
    2871.  00:56B6                      	;--- end
    2872.  00:56B6                      
    2873.  00:56B6                      
    2874.  00:56B6                      
    2875.  00:56B6                      
    2876.  00:56B6                      /////
    2877.  00:56B6                      ;	; Check if we need to load a software voice
    2878.  00:56B6                      ;	ld	hl,FM_softvoice_req
    2879.  00:56B6                      ;	ld	a,(hl)
    2880.  00:56B6                      ;	inc	hl
    2881.  00:56B6                      ;	cp	(hl)
    2882.  00:56B6                      ;	jp	z,.noVoice
    2883.  00:56B6                      ;	
    2884.  00:56B6                      ;	ld	(hl),a
    2885.  00:56B6                      ;
    2886.  00:56B6                      ;	call	load_softwarevoice
    2887.  00:56B6                      ;	
    2888.  00:56B6                      ;.noVoice:
    2889.  00:56B6                      ;	;------------------------------------------
    2890.  00:56B6                      ;	;---- Update the tone and drum registers
    2891.  00:56B6                      ;	;------------------------------------------
    2892.  00:56B6                      ;	ld 	hl,FM_Registers
    2893.  00:56B6                      ;	ld	de,TRACK_Chan3+17+TRACK_Flags
    2894.  00:56B6                      ;	ld	a,$10		; Register $10
    2895.  00:56B6                      ;	ld	b,9		; 6(tone)+3(drum) channels to update
    2896.  00:56B6                      ;
    2897.  00:56B6                      ;.channel_loop:	
    2898.  00:56B6                      ;	; Tone low
    2899.  00:56B6                      ;	call	_route_FM_reg16_update
    2900.  00:56B6                      ;	dec	hl
    2901.  00:56B6                      ;	add	a,$10	; Register# $20
    2902.  00:56B6                      ;
    2903.  00:56B6                      ;	ex	af,af'
    2904.  00:56B6                      ;
    2905.  00:56B6                      ;	ld	a,b	;-- Only do this check for first 6 chans. Other are drum
    2906.  00:56B6                      ;	cp	4
    2907.  00:56B6                      ;	jp	c,0f
    2908.  00:56B6                      ;
    2909.  00:56B6                      ;	;-- Check if we need to toggle key to start a new note
    2910.  00:56B6                      ;	ld	a,(de)
    2911.  00:56B6                      ;	bit	0,a
    2912.  00:56B6                      ;	jp	z,99f	; no notetrigger
    2913.  00:56B6                      ;	
    2914.  00:56B6                      ;	res	0,a		; reset trigger
    2915.  00:56B6                      ;	ld	(de),a
    2916.  00:56B6                      ;	bit	4,a
    2917.  00:56B6                      ;	call	nz,_route_FM_keyOff_update
    2918.  00:56B6                      ;99:
    2919.  00:56B6                      ;	ld	a,TRACK_REC_SIZE
    2920.  00:56B6                      ;	add	a,e
    2921.  00:56B6                      ;	ld	e,a
    2922.  00:56B6                      ;	jp	nc,99f
    2923.  00:56B6                      ;	inc	d
    2924.  00:56B6                      ;99:	
    2925.  00:56B6                      ;0:
    2926.  00:56B6                      ;	ex	af,af'
    2927.  00:56B6                      ;	
    2928.  00:56B6                      ;	; Tone High + key & sustain
    2929.  00:56B6                      ;	call	_route_FM_reg16_update
    2930.  00:56B6                      ;	inc	hl
    2931.  00:56B6                      ;	add	a,$10	; Register# $30
    2932.  00:56B6                      ;	
    2933.  00:56B6                      ;	; Volume + voice
    2934.  00:56B6                      ;	call	_route_FM_reg8_update
    2935.  00:56B6                      ;	inc	hl
    2936.  00:56B6                      ;	add	a,-$1F	; Register# = channel + $10
    2937.  00:56B6                      ;	djnz	.channel_loop
    2938.  00:56B6                      ;
    2939.  00:56B6                      ;	;------------------------------------------
    2940.  00:56B6                      ;	;---- Process Drum macro
    2941.  00:56B6                      ;	;------------------------------------------
    2942.  00:56B6                      ;_route_FM_drum_update:
    2943.  00:56B6                      ;	ld	a,(FM_DRUM)
    2944.  00:56B6                      ;	and	00011111b		; erase bit 5
    2945.  00:56B6                      ;	ret	z			; no drums to play
    2946.  00:56B6                      ;	
    2947.  00:56B6                      ;	ld	b,a
    2948.  00:56B6                      ;	ld	a,0x0e
    2949.  00:56B6                      ;	;-- load the new values
    2950.  00:56B6                      ;	out	(FM_WRITE),a	; Select rythm register
    2951.  00:56B6                      ;	
    2952.  00:56B6                      ;	ld	a,b			; 5 cycles
    2953.  00:56B6                      ;	ld	a,b			; 5 cycles	; dummy code for delay
    2954.  00:56B6                      ;	out	(FM_DATA),a		
    2955.  00:56B6                      ;
    2956.  00:56B6                      ;	push	ix			; 17 cycles	dummy code to implement delay
    2957.  00:56B6                      ;	pop	ix			; 17 cycles
    2958.  00:56B6                      ;	ld	b,a
    2959.  00:56B6                      ;	xor	a
    2960.  00:56B6                      ;	ld	(FM_DRUM),a
    2961.  00:56B6                      ;	ld	a,b
    2962.  00:56B6                      ;
    2963.  00:56B6                      ;	or	100000b		; set the percussion bit
    2964.  00:56B6                      ;	out	(FM_DATA),a
    2965.  00:56B6                      ;	ret
    2966.  00:56B6                      ;	
    2967.  00:56B6                      ;
    2968.  00:56B6                      ;;------- Writes safe to the FM chip
    2969.  00:56B6                      ;; in :
    2970.  00:56B6                      ;;	[a]	Register# to write
    2971.  00:56B6                      ;;	[HL]	point to register (previous value is next in RAM)
    2972.  00:56B6                      ;;
    2973.  00:56B6                      ;; out:
    2974.  00:56B6                      ;;	[HL] points to previous value
    2975.  00:56B6                      ;;	[A]	contains register# written
    2976.  00:56B6                      ;;-----------
    2977.  00:56B6                      ;_route_FM_reg8_update:
    2978.  00:56B6                      ;	ex	af,af'
    2979.  00:56B6                      ;	ld	a,(hl)
    2980.  00:56B6                      ;	jp	_rfr_cont
    2981.  00:56B6                      ;	
    2982.  00:56B6                      ;	
    2983.  00:56B6                      ;;------- Writes safe to the FM chip
    2984.  00:56B6                      ;; in :
    2985.  00:56B6                      ;;	[a]	Register# to write
    2986.  00:56B6                      ;;	[HL]	point to register (previous value is next in RAM)
    2987.  00:56B6                      ;;
    2988.  00:56B6                      ;; out:
    2989.  00:56B6                      ;;	[HL] points to previous value
    2990.  00:56B6                      ;;	[A]	contains register# written
    2991.  00:56B6                      ;;-----------
    2992.  00:56B6                      ;_route_FM_reg16_update:
    2993.  00:56B6                      ;	ex	af,af'
    2994.  00:56B6                      ;	ld	a,(hl)
    2995.  00:56B6                      ;	inc	hl
    2996.  00:56B6                      ;_rfr_cont:
    2997.  00:56B6                      ;	inc	hl
    2998.  00:56B6                      ;	cp	(hl)	
    2999.  00:56B6                      ;	jp	z,99f		; no change in tone low value
    3000.  00:56B6                      ;	ex	af,af'	
    3001.  00:56B6                      ;	out	(FM_WRITE),a
    3002.  00:56B6                      ;	ex	af,af'
    3003.  00:56B6                      ;	ld	(hl),a
    3004.  00:56B6                      ;	out	(FM_DATA),a	
    3005.  00:56B6                      ;99:	ex	af,af'
    3006.  00:56B6                      ;;	dec	hl	
    3007.  00:56B6                      ;	ret
    3008.  00:56B6                      ;	
    3009.  00:56B6                      ;;------- Writes a keyoff to the existing tone high register 
    3010.  00:56B6                      ;; in :
    3011.  00:56B6                      ;;	[A']	register# to write
    3012.  00:56B6                      ;;	[HL]	point to register (previous value is next in RAM)
    3013.  00:56B6                      ;;
    3014.  00:56B6                      ;; out:
    3015.  00:56B6                      ;;	[HL] points to same location
    3016.  00:56B6                      ;;	[A']	contains register# written
    3017.  00:56B6                      ;;-----------
    3018.  00:56B6                      ;_route_FM_keyOff_update:
    3019.  00:56B6                      ;	ex	af,af'
    3020.  00:56B6                      ;	out	(FM_WRITE),a
    3021.  00:56B6                      ;	ex	af,af'		; 4 cycles	 '
    3022.  00:56B6                      ;	ld	a,(hl)
    3023.  00:56B6                      ;	and	11101111b	; erase keyON bit.
    3024.  00:56B6                      ;	out	(FM_DATA),a	
    3025.  00:56B6                      ;	inc	hl
    3026.  00:56B6                      ;	inc	hl
    3027.  00:56B6                      ;	ld	(hl),a		; make sure to change old value to trigger update
    3028.  00:56B6                      ;	dec	hl
    3029.  00:56B6                      ;	dec	hl
    3030.  00:56B6                      ;	ret
    3031.  00:56B6                      ;
    3032.  00:56B6                      ;
    3033.  00:56B6                      ;.voiceupd_loop:
    3034.  00:56B6                      ;
    3035.  00:56B6                      ;	out	(FM_WRITE),a
    3036.  00:56B6                      ;	ex	af,af'		; 4 cycles	 '
    3037.  00:56B6                      ;	ld	a,(hl)		; 4 cycles 	
    3038.  00:56B6                      ;	inc	hl			; 6 cycles
    3039.  00:56B6                      ;	out	(FM_DATA),a	
    3040.  00:56B6                      ;
    3041.  00:56B6                      ;	ex	af,af' 		; 4 cycles	'
    3042.  00:56B6                      ;	inc	a			; 4 cycles
    3043.  00:56B6                      ;	
    3044.  00:56B6                      ;	cp	8 			; 7 cycles
    3045.  00:56B6                      ;	;--- delay
    3046.  00:56B6                      ;	push 	ix			; 15 cycles
    3047.  00:56B6                      ;	pop	ix			; 14 cycles
    3048.  00:56B6                      ;	push 	ix			; 15 cycles
    3049.  00:56B6                      ;	pop	ix			; 14 cycles
    3050.  00:56B6                      ;		
    3051.  00:56B6                      ;	jp	c,.voiceupd_loop 	; 10 cycles
    3052.  00:56B6                      ;	ret
    3053.  00:56B6                      
    3054.  00:56B6                      	
    3055.  00:56B6                      
    3056.  00:56B6                      	
    3057.  00:56B6                      
    3058.  00:56B6                      
     581   00:56B6                      	include	"..\code\ttreplayFMDAT.asm"
       1.  00:56B6                      
       2.  00:56B6                      
       3.  00:56B6                      IFDEF TAIL_ON
       4.  00:56B6                    ~ 	; Balance setting space volume max - 4
       5.  00:56B6                    ~ 	db	 $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
       6.  00:56B6                    ~ 	db	 $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
       7.  00:56B6                    ~ 	db	 $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
       8.  00:56B6                    ~ 	db	 $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
       9.  00:56B6                    ~ _VOLUME_TABLE_PSG
      10.  00:56B6                    ~ 	; No tail mode
      11.  00:56B6                    ~ 	db	 $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
      12.  00:56B6                    ~ 	db	 $0, $0, $0, $0, $0, $0, $0, $1, $1, $1, $1, $1, $1, $1, $1, $1
      13.  00:56B6                    ~ 	db	 $0, $0, $0, $0, $1, $1, $1, $1, $1, $1, $1, $1, $2, $2, $2, $2
      14.  00:56B6                    ~ 	db	 $0, $0, $0, $1, $1, $1, $1, $1, $2, $2, $2, $2, $2, $3, $3, $3
      15.  00:56B6                    ~ 	db	 $0, $0, $1, $1, $1, $1, $2, $2, $2, $2, $3, $3, $3, $3, $4, $4
      16.  00:56B6                    ~ 	db	 $0, $0, $1, $1, $1, $2, $2, $2, $3, $3, $3, $4, $4, $4, $5, $5
      17.  00:56B6                    ~ 	db	 $0, $0, $1, $1, $2, $2, $2, $3, $3, $4, $4, $4, $5, $5, $6, $6
      18.  00:56B6                    ~ 	db	 $0, $0, $1, $1, $2, $2, $3, $3, $4, $4, $5, $5, $6, $6, $7, $7
      19.  00:56B6                    ~ 	db	 $0, $1, $1, $2, $2, $3, $3, $4, $4, $5, $5, $6, $6, $7, $7, $8
      20.  00:56B6                    ~ 	db	 $0, $1, $1, $2, $2, $3, $4, $4, $5, $5, $6, $7, $7, $8, $8, $9
      21.  00:56B6                    ~ 	db	 $0, $1, $1, $2, $3, $3, $4, $5, $5, $6, $7, $7, $8, $9, $9, $A
      22.  00:56B6                    ~ 	db	 $0, $1, $1, $2, $3, $4, $4, $5, $6, $7, $7, $8, $9, $A, $A, $B
      23.  00:56B6                    ~ 	db	 $0, $1, $2, $2, $3, $4, $5, $6, $6, $7, $8, $9, $A, $A, $B, $C
      24.  00:56B6                    ~ 	db	 $0, $1, $2, $3, $3, $4, $5, $6, $7, $8, $9, $A, $A, $B, $C, $D
      25.  00:56B6                    ~ 	db	 $0, $1, $2, $3, $4, $5, $6, $7, $7, $8, $9, $A, $B, $C, $D, $E
      26.  00:56B6                    ~ 	db	 $0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $A, $B, $C, $D, $E, $F
      27.  00:56B6                    ~ 
      28.  00:56B6                    ~ 
      29.  00:56B6                    ~ 	; Balance setting space volume max - 4
      30.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F
      31.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F
      32.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F
      33.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F
      34.  00:56B6                    ~ _VOLUME_TABLE_FM
      35.  00:56B6                    ~ 	; No tail mode
      36.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F
      37.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $E
      38.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $E, $D
      39.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $E, $D, $C
      40.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $E, $D, $C, $B
      41.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $E, $D, $C, $B, $A
      42.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $F, $F, $E, $D, $C, $B, $A, $9
      43.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $F, $E, $D, $C, $B, $A, $9, $8
      44.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $F, $E, $D, $C, $B, $A, $9, $8, $7
      45.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $F, $E, $D, $C, $B, $A, $9, $8, $7, $6
      46.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $F, $E, $D, $C, $B, $A, $9, $8, $7, $6, $5
      47.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $F, $E, $D, $C, $B, $A, $9, $8, $7, $6, $5, $4
      48.  00:56B6                    ~ 	db	 $F, $F, $F, $F, $E, $D, $C, $B, $A, $9, $8, $7, $6, $5, $4, $3
      49.  00:56B6                    ~ 	db	 $F, $F, $F, $E, $D, $C, $B, $A, $9, $8, $7, $6, $5, $4, $3, $2
      50.  00:56B6                    ~ 	db	 $F, $F, $E, $D, $C, $B, $A, $9, $8, $7, $6, $5, $4, $3, $2, $1
      51.  00:56B6                    ~ 	db	 $F, $E, $D, $C, $B, $A, $9, $8, $7, $6, $5, $4, $3, $2, $1, $0
      52.  00:56B6                    ~ 
      53.  00:56B6                    ~ 
      54.  00:56B6                    ~ ELSE
      55.  00:56B6                      	; Balance setting space volume max - 4
      56.  00:56B6                      	db	 $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1
      56.  00:56B6  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
      57.  00:56C6                      	db	 $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1
      57.  00:56C6  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
      58.  00:56D6                      	db	 $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1
      58.  00:56D6  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
      59.  00:56E6                      	db	 $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1
      59.  00:56E6  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
      60.  00:56F6                      _VOLUME_TABLE_PSG
      61.  00:56F6                      	; Tail mode on (psg 1/ FM E)	
      62.  00:56F6                      	db	 $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1
      62.  00:56F6  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
      63.  00:5706                      	db	 $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1
      63.  00:5706  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
      64.  00:5716                      	db	 $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $1, $2, $2, $2, $2
      64.  00:5716  01 01 01 01 01 01 01 01 01 01 01 01 02 02 02 02 
      65.  00:5726                      	db	 $1, $1, $1, $1, $1, $1, $1, $1, $2, $2, $2, $2, $2, $3, $3, $3
      65.  00:5726  01 01 01 01 01 01 01 01 02 02 02 02 02 03 03 03 
      66.  00:5736                      	db	 $1, $1, $1, $1, $1, $1, $2, $2, $2, $2, $3, $3, $3, $3, $4, $4
      66.  00:5736  01 01 01 01 01 01 02 02 02 02 03 03 03 03 04 04 
      67.  00:5746                      	db	 $1, $1, $1, $1, $1, $2, $2, $2, $3, $3, $3, $4, $4, $4, $5, $5
      67.  00:5746  01 01 01 01 01 02 02 02 03 03 03 04 04 04 05 05 
      68.  00:5756                      	db	 $1, $1, $1, $1, $2, $2, $2, $3, $3, $4, $4, $4, $5, $5, $6, $6
      68.  00:5756  01 01 01 01 02 02 02 03 03 04 04 04 05 05 06 06 
      69.  00:5766                      	db	 $1, $1, $1, $1, $2, $2, $3, $3, $4, $4, $5, $5, $6, $6, $7, $7
      69.  00:5766  01 01 01 01 02 02 03 03 04 04 05 05 06 06 07 07 
      70.  00:5776                      	db	 $1, $1, $1, $2, $2, $3, $3, $4, $4, $5, $5, $6, $6, $7, $7, $8
      70.  00:5776  01 01 01 02 02 03 03 04 04 05 05 06 06 07 07 08 
      71.  00:5786                      	db	 $1, $1, $1, $2, $2, $3, $4, $4, $5, $5, $6, $7, $7, $8, $8, $9
      71.  00:5786  01 01 01 02 02 03 04 04 05 05 06 07 07 08 08 09 
      72.  00:5796                      	db	 $1, $1, $1, $2, $3, $3, $4, $5, $5, $6, $7, $7, $8, $9, $9, $A
      72.  00:5796  01 01 01 02 03 03 04 05 05 06 07 07 08 09 09 0A 
      73.  00:57A6                      	db	 $1, $1, $1, $2, $3, $4, $4, $5, $6, $7, $7, $8, $9, $A, $A, $B
      73.  00:57A6  01 01 01 02 03 04 04 05 06 07 07 08 09 0A 0A 0B 
      74.  00:57B6                      	db	 $1, $1, $2, $2, $3, $4, $5, $6, $6, $7, $8, $9, $A, $A, $B, $C
      74.  00:57B6  01 01 02 02 03 04 05 06 06 07 08 09 0A 0A 0B 0C 
      75.  00:57C6                      	db	 $1, $1, $2, $3, $3, $4, $5, $6, $7, $8, $9, $A, $A, $B, $C, $D
      75.  00:57C6  01 01 02 03 03 04 05 06 07 08 09 0A 0A 0B 0C 0D 
      76.  00:57D6                      	db	 $1, $1, $2, $3, $4, $5, $6, $7, $7, $8, $9, $A, $B, $C, $D, $E
      76.  00:57D6  01 01 02 03 04 05 06 07 07 08 09 0A 0B 0C 0D 0E 
      77.  00:57E6                      	db	 $1, $1, $2, $3, $4, $5, $6, $7, $8, $9, $A, $B, $C, $D, $E, $F
      77.  00:57E6  01 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 
      78.  00:57F6                      
      79.  00:57F6                      
      80.  00:57F6                      	; Balance setting space volume max - 4
      81.  00:57F6                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E
      81.  00:57F6  0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 
      82.  00:5806                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E
      82.  00:5806  0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 
      83.  00:5816                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E
      83.  00:5816  0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 
      84.  00:5826                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E
      84.  00:5826  0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 
      85.  00:5836                      _VOLUME_TABLE_FM
      86.  00:5836                      	; Tail mode on (psg 1/ FM E)	
      87.  00:5836                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E
      87.  00:5836  0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 
      88.  00:5846                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E
      88.  00:5846  0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 
      89.  00:5856                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $D
      89.  00:5856  0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0D 
      90.  00:5866                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $D, $C
      90.  00:5866  0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0D 0C 
      91.  00:5876                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $D, $C, $B
      91.  00:5876  0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0D 0C 0B 
      92.  00:5886                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $D, $C, $B, $A
      92.  00:5886  0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0D 0C 0B 0A 
      93.  00:5896                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $D, $C, $B, $A, $9
      93.  00:5896  0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0D 0C 0B 0A 09 
      94.  00:58A6                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $E, $D, $C, $B, $A, $9, $8
      94.  00:58A6  0E 0E 0E 0E 0E 0E 0E 0E 0E 0E 0D 0C 0B 0A 09 08 
      95.  00:58B6                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $E, $D, $C, $B, $A, $9, $8, $7
      95.  00:58B6  0E 0E 0E 0E 0E 0E 0E 0E 0E 0D 0C 0B 0A 09 08 07 
      96.  00:58C6                      	db	 $E, $E, $E, $E, $E, $E, $E, $E, $D, $C, $B, $A, $9, $8, $7, $6
      96.  00:58C6  0E 0E 0E 0E 0E 0E 0E 0E 0D 0C 0B 0A 09 08 07 06 
      97.  00:58D6                      	db	 $E, $E, $E, $E, $E, $E, $E, $D, $C, $B, $A, $9, $8, $7, $6, $5
      97.  00:58D6  0E 0E 0E 0E 0E 0E 0E 0D 0C 0B 0A 09 08 07 06 05 
      98.  00:58E6                      	db	 $E, $E, $E, $E, $E, $E, $D, $C, $B, $A, $9, $8, $7, $6, $5, $4
      98.  00:58E6  0E 0E 0E 0E 0E 0E 0D 0C 0B 0A 09 08 07 06 05 04 
      99.  00:58F6                      	db	 $E, $E, $E, $E, $E, $D, $C, $B, $A, $9, $8, $7, $6, $5, $4, $3
      99.  00:58F6  0E 0E 0E 0E 0E 0D 0C 0B 0A 09 08 07 06 05 04 03 
     100.  00:5906                      	db	 $E, $E, $E, $E, $D, $C, $B, $A, $9, $8, $7, $6, $5, $4, $3, $2
     100.  00:5906  0E 0E 0E 0E 0D 0C 0B 0A 09 08 07 06 05 04 03 02 
     101.  00:5916                      	db	 $E, $E, $E, $D, $C, $B, $A, $9, $8, $7, $6, $5, $4, $3, $2, $1
     101.  00:5916  0E 0E 0E 0D 0C 0B 0A 09 08 07 06 05 04 03 02 01 
     102.  00:5926                      	db	 $E, $E, $D, $C, $B, $A, $9, $8, $7, $6, $5, $4, $3, $2, $1, $0
     102.  00:5926  0E 0E 0D 0C 0B 0A 09 08 07 06 05 04 03 02 01 00 
     103.  00:5936                      
     104.  00:5936                      ENDIF
     105.  00:5936                      
     106.  00:5936                      TRACK_ToneTable_PSG:
     107.  00:5936                      IFDEF PERIOD_A432
     108.  00:5936                    ~       dw      $0D9C, $0CD8, $0C20, $0B72, $0ACD, $0A32, $099F, $0915, $0893, $0817, $07A3, $0735
     109.  00:5936                    ~       dw      $06CE, $066C, $0610, $05B9, $0567, $0519, $04D0, $048B, $0449, $040C, $03D2, $039B
     110.  00:5936                    ~       dw      $0367, $0336, $0308, $02DC, $02B3, $028C, $0268, $0245, $0225, $0206, $01E9, $01CD
     111.  00:5936                    ~       dw      $01B3, $019B, $0184, $016E, $015A, $0146, $0134, $0123, $0112, $0103, $00F4, $00E7
     112.  00:5936                    ~       dw      $00DA, $00CE, $00C2, $00B7, $00AD, $00A3, $009A, $0091, $0089, $0081, $007A, $0073
     113.  00:5936                    ~       dw      $006D, $0067, $0061, $005C, $0056, $0052, $004D, $0049, $0045, $0041, $003D, $003A
     114.  00:5936                    ~       dw      $0036, $0033, $0030, $002E, $002B, $0029, $0026, $0024, $0022, $0020, $001F, $001D
     115.  00:5936                    ~       dw      $001B, $001A, $0018, $0017, $0016, $0014, $0013, $0012, $0011, $0010, $000F, $000E
     116.  00:5936                    ~  ;     dw      $000E, $000D, $000C, $000B, $000B, $000A, $000A, $0009, $0009, $0008, $0008, $0007
     117.  00:5936                    ~   ;    dw      $0007, $0006, $0006, $0006, $0005, $0005, $0005, $0005, $0004, $0004, $0004, $0004
     118.  00:5936                    ~ ELSEIFDEF PERIOD_A440  
     119.  00:5936                            dw      $0D5C, $0C9D, $0BE7, $0B3C, $0A9B, $0A02, $0973, $08EB, $086B, $07F2, $0780, $0714
     119.  00:5936  5C 0D 9D 0C E7 0B 3C 0B 9B 0A 02 0A 73 09 EB 08 
     119.  00:5946  6B 08 F2 07 80 07 14 07 
     120.  00:594E                            dw      $06AE, $064E, $05F4, $059E, $054D, $0501, $04B9, $0475, $0435, $03F9, $03C0, $038A
     120.  00:594E  AE 06 4E 06 F4 05 9E 05 4D 05 01 05 B9 04 75 04 
     120.  00:595E  35 04 F9 03 C0 03 8A 03 
     121.  00:5966                            dw      $0357, $0327, $02FA, $02CF, $02A7, $0281, $025D, $023B, $021B, $01FC, $01E0, $01C5
     121.  00:5966  57 03 27 03 FA 02 CF 02 A7 02 81 02 5D 02 3B 02 
     121.  00:5976  1B 02 FC 01 E0 01 C5 01 
     122.  00:597E                            dw      $01AC, $0194, $017D, $0168, $0153, $0140, $012E, $011D, $010D, $00FE, $00F0, $00E2
     122.  00:597E  AC 01 94 01 7D 01 68 01 53 01 40 01 2E 01 1D 01 
     122.  00:598E  0D 01 FE 00 F0 00 E2 00 
     123.  00:5996                            dw      $00D6, $00CA, $00BE, $00B4, $00AA, $00A0, $0097, $008F, $0087, $007F, $0078, $0071
     123.  00:5996  D6 00 CA 00 BE 00 B4 00 AA 00 A0 00 97 00 8F 00 
     123.  00:59A6  87 00 7F 00 78 00 71 00 
     124.  00:59AE                            dw      $006B, $0065, $005F, $005A, $0055, $0050, $004C, $0047, $0043, $0040, $003C, $0039
     124.  00:59AE  6B 00 65 00 5F 00 5A 00 55 00 50 00 4C 00 47 00 
     124.  00:59BE  43 00 40 00 3C 00 39 00 
     125.  00:59C6                            dw      $0035, $0032, $0030, $002D, $002A, $0028, $0026, $0024, $0022, $0020, $001E, $001C
     125.  00:59C6  35 00 32 00 30 00 2D 00 2A 00 28 00 26 00 24 00 
     125.  00:59D6  22 00 20 00 1E 00 1C 00 
     126.  00:59DE                            dw      $001B, $0019, $0018, $0016, $0015, $0014, $0013, $0012, $0011, $0010, $000F, $000E
     126.  00:59DE  1B 00 19 00 18 00 16 00 15 00 14 00 13 00 12 00 
     126.  00:59EE  11 00 10 00 0F 00 0E 00 
     127.  00:59F6                      ;      dw      $000D, $000D, $000C, $000B, $000B, $000A, $0009, $0009, $0008, $0008, $0007, $0007
     128.  00:59F6                      ;      dw      $0007, $0006, $0006, $0006, $0005, $0005, $0005, $0004, $0004, $0004, $0004, $0004
     129.  00:59F6                      ELSEIFDEF PERIOD_A448
     130.  00:59F6                    ~       dw      $0D1F, $0C63, $0BB1, $0B09, $0A6A, $09D5, $0947, $08C2, $0844, $07CE, $075D, $06F4
     131.  00:59F6                    ~       dw      $0690, $0631, $05D8, $0584, $0535, $04EA, $04A4, $0461, $0422, $03E7, $03AF, $037A
     132.  00:59F6                    ~       dw      $0348, $0319, $02EC, $02C2, $029B, $0275, $0252, $0231, $0211, $01F3, $01D7, $01BD
     133.  00:59F6                    ~       dw      $01A4, $018C, $0176, $0161, $014D, $013B, $0129, $0118, $0109, $00FA, $00EC, $00DE
     134.  00:59F6                    ~       dw      $00D2, $00C6, $00BB, $00B1, $00A7, $009D, $0094, $008C, $0084, $007D, $0076, $006F
     135.  00:59F6                    ~       dw      $0069, $0063, $005E, $0058, $0053, $004F, $004A, $0046, $0042, $003E, $003B, $0038
     136.  00:59F6                    ~       dw      $0034, $0032, $002F, $002C, $002A, $0027, $0025, $0023, $0021, $001F, $001D, $001C
     137.  00:59F6                    ~       dw      $001A, $0019, $0017, $0016, $0015, $0014, $0013, $0012, $0011, $0010, $000F, $000E
     138.  00:59F6                    ~ ELSE
     139.  00:59F6                    ~       dw      $0D36, $0C78, $0BC5, $0B1C, $0A7C, $09E6, $0957, $08D1, $0853, $07DB, $076A, $0700
     140.  00:59F6                    ~       dw      $069B, $063C, $05E3, $058E, $053E, $04F3, $04AC, $0469, $0429, $03ED, $03B5, $0380
     141.  00:59F6                    ~       dw      $034E, $031E, $02F1, $02C7, $029F, $0279, $0256, $0234, $0215, $01F7, $01DB, $01C0
     142.  00:59F6                    ~       dw      $01A7, $018F, $0179, $0163, $0150, $013D, $012B, $011A, $010A, $00FB, $00ED, $00E0
     143.  00:59F6                    ~       dw      $00D3, $00C8, $00BC, $00B2, $00A8, $009E, $0095, $008D, $0085, $007E, $0077, $0070
     144.  00:59F6                    ~       dw      $006A, $0064, $005E, $0059, $0054, $004F, $004B, $0047, $0043, $003F, $003B, $0038
     145.  00:59F6                    ~       dw      $0035, $0032, $002F, $002C, $002A, $0028, $0025, $0023, $0021, $001F, $001E, $001C
     146.  00:59F6                    ~       dw      $001A, $0019, $0018, $0016, $0015, $0014, $0013, $0012, $0011, $0010, $000F, $000E
     147.  00:59F6                    ~ ;      dw      $000D, $000C, $000C, $000B, $000A, $000A, $0009, $0009, $0008, $0008, $0007, $0007
     148.  00:59F6                    ~ ;      dw      $0007, $0006, $0006, $0006, $0005, $0005, $0005, $0004, $0004, $0004, $0004, $0003
     149.  00:59F6                    ~ ENDIF
     150.  00:59F6                      
     151.  00:59F6                      TRACK_ToneTable_FM:
     152.  00:59F6                      IFDEF PERIOD_A432
     153.  00:59F6                    ~       dw      $00A8, $00B2, $00BC, $00C8, $00D4, $00E0, $00EE, $00FC, $010B, $011B, $012B, $013D
     154.  00:59F6                    ~       dw      $02A8, $02B2, $02BC, $02C8, $02D4, $02E0, $02EE, $02FC, $030B, $031B, $032B, $033D
     155.  00:59F6                    ~       dw      $04A8, $04B2, $04BC, $04C8, $04D4, $04E0, $04EE, $04FC, $050B, $051B, $052B, $053D
     156.  00:59F6                    ~       dw      $06A8, $06B2, $06BC, $06C8, $06D4, $06E0, $06EE, $06FC, $070B, $071B, $072B, $073D
     157.  00:59F6                    ~       dw      $08A8, $08B2, $08BC, $08C8, $08D4, $08E0, $08EE, $08FC, $090B, $091B, $092B, $093D
     158.  00:59F6                    ~       dw      $0AA8, $0AB2, $0ABC, $0AC8, $0AD4, $0AE0, $0AEE, $0AFC, $0B0B, $0B1B, $0B2B, $0B3D
     159.  00:59F6                    ~       dw      $0CA8, $0CB2, $0CBC, $0CC8, $0CD4, $0CE0, $0CEE, $0CFC, $0D0B, $0D1B, $0D2B, $0D3D
     160.  00:59F6                    ~       dw      $0EA8, $0EB2, $0EBC, $0EC8, $0ED4, $0EE0, $0EEE, $0EFC, $0F0B, $0F1B, $0F2B, $0F3D
     161.  00:59F6                    ~ 
     162.  00:59F6                    ~ ELSEIFDEF PERIOD_A440
     163.  00:59F6                            dw      $00AB, $00B5, $00C0, $00CB, $00D8, $00E4, $00F2, $0100, $0110, $0120, $0131, $0143
     163.  00:59F6  AB 00 B5 00 C0 00 CB 00 D8 00 E4 00 F2 00 00 01 
     163.  00:5A06  10 01 20 01 31 01 43 01 
     164.  00:5A0E                            dw      $02AB, $02B5, $02C0, $02CB, $02D8, $02E4, $02F2, $0300, $0310, $0320, $0331, $0343
     164.  00:5A0E  AB 02 B5 02 C0 02 CB 02 D8 02 E4 02 F2 02 00 03 
     164.  00:5A1E  10 03 20 03 31 03 43 03 
     165.  00:5A26                            dw      $04AB, $04B5, $04C0, $04CB, $04D8, $04E4, $04F2, $0500, $0510, $0520, $0531, $0543
     165.  00:5A26  AB 04 B5 04 C0 04 CB 04 D8 04 E4 04 F2 04 00 05 
     165.  00:5A36  10 05 20 05 31 05 43 05 
     166.  00:5A3E                            dw      $06AB, $06B5, $06C0, $06CB, $06D8, $06E4, $06F2, $0700, $0710, $0720, $0731, $0743
     166.  00:5A3E  AB 06 B5 06 C0 06 CB 06 D8 06 E4 06 F2 06 00 07 
     166.  00:5A4E  10 07 20 07 31 07 43 07 
     167.  00:5A56                            dw      $08AB, $08B5, $08C0, $08CB, $08D8, $08E4, $08F2, $0900, $0910, $0920, $0931, $0943
     167.  00:5A56  AB 08 B5 08 C0 08 CB 08 D8 08 E4 08 F2 08 00 09 
     167.  00:5A66  10 09 20 09 31 09 43 09 
     168.  00:5A6E                            dw      $0AAB, $0AB5, $0AC0, $0ACB, $0AD8, $0AE4, $0AF2, $0B00, $0B10, $0B20, $0B31, $0B43
     168.  00:5A6E  AB 0A B5 0A C0 0A CB 0A D8 0A E4 0A F2 0A 00 0B 
     168.  00:5A7E  10 0B 20 0B 31 0B 43 0B 
     169.  00:5A86                            dw      $0CAB, $0CB5, $0CC0, $0CCB, $0CD8, $0CE4, $0CF2, $0D00, $0D10, $0D20, $0D31, $0D43
     169.  00:5A86  AB 0C B5 0C C0 0C CB 0C D8 0C E4 0C F2 0C 00 0D 
     169.  00:5A96  10 0D 20 0D 31 0D 43 0D 
     170.  00:5A9E                            dw      $0EAB, $0EB5, $0EC0, $0ECB, $0ED8, $0EE4, $0EF2, $0F00, $0F10, $0F20, $0F31, $0F43
     170.  00:5A9E  AB 0E B5 0E C0 0E CB 0E D8 0E E4 0E F2 0E 00 0F 
     170.  00:5AAE  10 0F 20 0F 31 0F 43 0F 
     171.  00:5AB6                      
     172.  00:5AB6                      ELSEIFDEF PERIOD_A448
     173.  00:5AB6                    ~       dw      $00AE, $00B8, $00C3, $00CF, $00DB, $00E9, $00F6, $0105, $0115, $0125, $0137, $0149
     174.  00:5AB6                    ~       dw      $02AE, $02B8, $02C3, $02CF, $02DB, $02E9, $02F6, $0305, $0315, $0325, $0337, $0349
     175.  00:5AB6                    ~       dw      $04AE, $04B8, $04C3, $04CF, $04DB, $04E9, $04F6, $0505, $0515, $0525, $0537, $0549
     176.  00:5AB6                    ~       dw      $06AE, $06B8, $06C3, $06CF, $06DB, $06E9, $06F6, $0705, $0715, $0725, $0737, $0749
     177.  00:5AB6                    ~       dw      $08AE, $08B8, $08C3, $08CF, $08DB, $08E9, $08F6, $0905, $0915, $0925, $0937, $0949
     178.  00:5AB6                    ~       dw      $0AAE, $0AB8, $0AC3, $0ACF, $0ADB, $0AE9, $0AF6, $0B05, $0B15, $0B25, $0B37, $0B49
     179.  00:5AB6                    ~       dw      $0CAE, $0CB8, $0CC3, $0CCF, $0CDB, $0CE9, $0CF6, $0D05, $0D15, $0D25, $0D37, $0D49
     180.  00:5AB6                    ~       dw      $0EAE, $0EB8, $0EC3, $0ECF, $0EDB, $0EE9, $0EF6, $0F05, $0F15, $0F25, $0F37, $0F49
     181.  00:5AB6                    ~ 
     182.  00:5AB6                    ~ ELSE
     183.  00:5AB6                    ~       dw      $00AD, $00B7, $00C2, $00CE, $00DA, $00E7, $00F5, $0103, $0113, $0123, $0134, $0147
     184.  00:5AB6                    ~       dw      $02AD, $02B7, $02C2, $02CE, $02DA, $02E7, $02F5, $0303, $0313, $0323, $0334, $0347
     185.  00:5AB6                    ~       dw      $04AD, $04B7, $04C2, $04CE, $04DA, $04E7, $04F5, $0503, $0513, $0523, $0534, $0547
     186.  00:5AB6                    ~       dw      $06AD, $06B7, $06C2, $06CE, $06DA, $06E7, $06F5, $0703, $0713, $0723, $0734, $0747
     187.  00:5AB6                    ~       dw      $08AD, $08B7, $08C2, $08CE, $08DA, $08E7, $08F5, $0903, $0913, $0923, $0934, $0947
     188.  00:5AB6                    ~       dw      $0AAD, $0AB7, $0AC2, $0ACE, $0ADA, $0AE7, $0AF5, $0B03, $0B13, $0B23, $0B34, $0B47
     189.  00:5AB6                    ~       dw      $0CAD, $0CB7, $0CC2, $0CCE, $0CDA, $0CE7, $0CF5, $0D03, $0D13, $0D23, $0D34, $0D47
     190.  00:5AB6                    ~       dw      $0EAD, $0EB7, $0EC2, $0ECE, $0EDA, $0EE7, $0EF5, $0F03, $0F13, $0F23, $0F34, $0F47
     191.  00:5AB6                    ~ ENDIF
     192.  00:5AB6                      
     193.  00:5AB6                      
     194.  00:5AB6                      
     582   00:5AB6                      	include	"..\ttsfxplayPSG\ttsfxplayPSG.asm"
       1.  00:5AB6                      ; --- TT sfx player v0.14 ---
       2.  00:5AB6                      ; --- Build uppon ayFX replayer, the work of Shiru, Z80st, ARTRAG
       3.  00:5AB6                      
       4.  00:5AB6                      
       5.  00:5AB6                      ; --- plays SFX over PSG(chan3)
       6.  00:5AB6                      ; --- Works with an afb file.
       7.  00:5AB6                      
       8.  00:5AB6                      ;===========================================================
       9.  00:5AB6                      ; ---	ttsfx_init
      10.  00:5AB6                      ; Initialise the sfx player. Sets initial priorities, volume
      11.  00:5AB6                      ; balancce and initial SCC waveform.
      12.  00:5AB6                      ;
      13.  00:5AB6                      ;===========================================================	
      14.  00:5AB6                      ttsfx_init:
      15.  00:5AB6  3E 0F               	ld	a,15
      16.  00:5AB8  CD C4 5A            	call	ttsfx_psg_balance	
      17.  00:5ABB  AF                  	xor	a
      18.  00:5ABC  32 74 C4            	ld	(sfx_STATUS),a
      19.  00:5ABF  3D                  	dec	a
      20.  00:5AC0  32 73 C4            	ld	(sfx_PRIORITY),a
      21.  00:5AC3  C9                  	ret
      22.  00:5AC4                      
      23.  00:5AC4                      ;===========================================================
      24.  00:5AC4                      ; ---	ttsfx_psg_balance
      25.  00:5AC4                      ; Set the main SFXvolume for the PSG chip.
      26.  00:5AC4                      ;
      27.  00:5AC4                      ; in: [A] master volume (0-15) 0=silenced, 15=full volume. 
      28.  00:5AC4                      ;===========================================================	
      29.  00:5AC4                      ttsfx_psg_balance:
      30.  00:5AC4  CD CB 5A            	call	_getsfxbalancebase
      31.  00:5AC7  22 7A C4            	ld	(sfx_PSG_BALANCE),hl	
      32.  00:5ACA  C9                  	ret				
      33.  00:5ACB                      				
      34.  00:5ACB                      
      35.  00:5ACB                      _getsfxbalancebase:
      36.  00:5ACB  07                  	rlca
      37.  00:5ACC  07                  	rlca
      38.  00:5ACD  07                  	rlca
      39.  00:5ACE  07                  	rlca
      40.  00:5ACF  21 F6 56            	ld	hl,_VOLUME_TABLE_PSG			; Volume table from TT replayer
      41.  00:5AD2  E6 F0               	and	$f0
      42.  00:5AD4  85                  	add	a,l
      43.  00:5AD5  6F                  	ld	l,a
      44.  00:5AD6  D0                  	ret 	nc
      45.  00:5AD7  24                  	inc	h
      46.  00:5AD8  C9                  	ret			
      47.  00:5AD9                      
      48.  00:5AD9                      				
      49.  00:5AD9                      
      50.  00:5AD9                      
      51.  00:5AD9                      
      52.  00:5AD9                      ttsfx_start:
      53.  00:5AD9                      	;--- Start a new SFX
      54.  00:5AD9                      	;--- Input B -> sfx number
      55.  00:5AD9                      	;--- Input C -> priority  0 = lowest, 255 is highest
      56.  00:5AD9                      
      57.  00:5AD9                      	;--- Test priority
      58.  00:5AD9  3A 73 C4            	ld	a,(sfx_PRIORITY)		; a:=Current sfx_SCC stream priority
      59.  00:5ADC  B9                  	cp	c						; If new sfx_SCC stream priority is higher than currently one...
      60.  00:5ADD  D8                  	ret	c						; ...we don't start the new sfx_SCC stream	
      61.  00:5ADE                      
      62.  00:5ADE                      	;--- Set priority
      63.  00:5ADE  79                  	ld	a,c						; a:=New priority
      64.  00:5ADF  32 73 C4            	ld	(sfx_PRIORITY),a		; new priority saved in RAM
      65.  00:5AE2  3E 01               	ld	a,1		
      66.  00:5AE4  32 74 C4            	ld	(sfx_STATUS),a			; playing SFX
      67.  00:5AE7                      
      68.  00:5AE7                      
      69.  00:5AE7  11 07 65            	ld	de, sfxbank+1			; Start of SFX offset list
      70.  00:5AEA  68                  	ld	l, b
      71.  00:5AEB  26 00               	ld	h, 0
      72.  00:5AED  29                  	add	hl, hl					; *2 to get item offset in bank
      73.  00:5AEE  19                  	add	hl, de
      74.  00:5AEF                      ;	ld	a,b
      75.  00:5AEF                      ;	add	a
      76.  00:5AEF                      ;	add	a,l
      77.  00:5AEF                      ;	ld	l,a
      78.  00:5AEF                      ;	jp	nc,.skip
      79.  00:5AEF                      ;	inc	h
      80.  00:5AEF                      .skip:	
      81.  00:5AEF  4E                  	ld	c,(hl)
      82.  00:5AF0  23                  	inc	hl
      83.  00:5AF1  46                  	ld	b,(hl)
      84.  00:5AF2  09                  	add	hl,bc						; Pointer to the first sfx
      85.  00:5AF3  22 75 C4            	ld	(sfx_PSG_POINTER),hl
      86.  00:5AF6  C9                  	ret
      87.  00:5AF7                      
      88.  00:5AF7                      
      89.  00:5AF7                      ttsfx_play:
      90.  00:5AF7                      	;---- SPEED EQUALIZATION 
      91.  00:5AF7  3A 31 C0            	ld	a,(equalization_freq)		; 0 = 50Hz, otherwise 60Hz
      92.  00:5AFA  A7                  	and	a
      93.  00:5AFB  CA 04 5B            	jp	z,.PAL               		; if PAL process at any interrupt;
      94.  00:5AFE                      
      95.  00:5AFE                      .NTSC:
      96.  00:5AFE  3A 32 C0            	ld	a,(equalization_cnt)		; Test if the music routine has just skipped an isr
      97.  00:5B01  FE 06               	cp	6
      98.  00:5B03  C8                  	ret	z
      99.  00:5B04                      .PAL:                             
     100.  00:5B04                      	;---- END SPEED EQUALIZATION	
     101.  00:5B04                      
     102.  00:5B04                      
     103.  00:5B04                      
     104.  00:5B04                      	;--------------------------------
     105.  00:5B04                      	; Play sfx stream
     106.  00:5B04                      	;--------------------------------
     107.  00:5B04  3A 74 C4            	ld	a,(sfx_STATUS)				; a:=Current sfx_PSG stream priority
     108.  00:5B07  A7                  	and	a							; PSG active?
     109.  00:5B08  C2 12 5B            	jp	nz,.psg_play
     110.  00:5B0B                      	
     111.  00:5B0B                      	;--- If not active just use re-player noise and mixer
     112.  00:5B0B  3A 79 C1            	ld	a,(replay_noise)
     113.  00:5B0E  32 71 C1            	ld	(PSG_regNOISE),a
     114.  00:5B11  C9                  	ret
     115.  00:5B12                      
     116.  00:5B12                      .psg_play:
     117.  00:5B12                      	; --- PLAY A FRAME OF AN sfx_PSG STREAM ---
     118.  00:5B12                      	; --- Extract control byte from stream ---
     119.  00:5B12  2A 75 C4            	ld	hl,(sfx_PSG_POINTER)	; Pointer to the current sfx_PSG stream
     120.  00:5B15  4E                  	ld	c,(hl)			; c:=Control byteb
     121.  00:5B16  3A 72 C1            	ld	a,(PSG_regMIXER)
     122.  00:5B19  47                  	ld	b,a				; b = mixer 
     123.  00:5B1A  23                  	inc	hl				; Increment pointer
     124.  00:5B1B                      
     125.  00:5B1B                      _ayCHECK_NT:
     126.  00:5B1B                      	; --- Check if there's new tone on stream ---
     127.  00:5B1B  CB 69               	bit	5,c				; If bit 5 c is off...
     128.  00:5B1D  CA 28 5B            	jp	z,_ayCHECK_NN		; ...jump to _ayCHECK_NN (no new tone)
     129.  00:5B20                      	; --- Extract new tone from stream ---
     130.  00:5B20  5E                  	ld	e,(hl)			; e:=lower byte of new tone
     131.  00:5B21  23                  	inc	hl				; Increment pointer
     132.  00:5B22  56                  	ld	d,(hl)			; d:=higher byte of new tone
     133.  00:5B23  23                  	inc	hl				; Increment pointer
     134.  00:5B24  ED 53 77 C4         	ld	(sfx_PSG_TONE),de		; sfx_PSG tone updated
     135.  00:5B28                      
     136.  00:5B28                      _ayCHECK_NN:	
     137.  00:5B28                      	; --- Check if there's new noise on stream ---
     138.  00:5B28  CB 71               	bit	6,c				; if bit 6 c is off...
     139.  00:5B2A  CA 37 5B            	jp	z,_aySETPOINTER		; ...jump to _aySETPOINTER (no new noise)
     140.  00:5B2D                      	; --- Extract new noise from stream ---
     141.  00:5B2D  7E                  	ld	a,(hl)			; a:=New noise
     142.  00:5B2E  23                  	inc	hl				; Increment pointer
     143.  00:5B2F  FE 20               	cp	$20				; If it's an illegal value of noise (used to mark end of stream)...
     144.  00:5B31  CA 7D 5B            	jp	z,_ayEND
     145.  00:5B34                      _ayNOISE:
     146.  00:5B34  32 79 C4            	ld	(sfx_PSG_NOISE),a		; sfx_PSG noise updated
     147.  00:5B37                      _aySETPOINTER:
     148.  00:5B37                      	; --- Update sfx_PSG pointer ---
     149.  00:5B37  22 75 C4            	ld	(sfx_PSG_POINTER),hl	; Update sfx_PSG stream pointer
     150.  00:5B3A                      
     151.  00:5B3A                      	; --- Set noise register if enabled ---
     152.  00:5B3A  CB 79               	bit	7,c						; If noise is off...
     153.  00:5B3C  C2 4B 5B            	jp	nz,_ayMUSNOISE			; ...jump to _aySETMASKS
     154.  00:5B3F  78                  	ld	a,b				; mixer mask for no music noise
     155.  00:5B40  F6 18               	or	00011000b
     156.  00:5B42  E6 1F               	and	00011111b
     157.  00:5B44  47                  	ld	b,a
     158.  00:5B45  3A 79 C4            	ld	a,(sfx_PSG_NOISE)		; sfx_PSG noise value
     159.  00:5B48  C3 4E 5B            	jp	_ayNOISESET
     160.  00:5B4B                      _ayMUSNOISE:
     161.  00:5B4B                      	;-- If no sfx noise then use music noise value
     162.  00:5B4B  3A 79 C1            	ld	a,(replay_noise)		; replaer PSG noise value
     163.  00:5B4E                      _ayNOISESET:
     164.  00:5B4E  32 71 C1            	ld	(PSG_regNOISE),a		; copied in to AYREGS (noise channel)
     165.  00:5B51                      
     166.  00:5B51                      	; --- Extract and set volume if tone or noise is enabled ---
     167.  00:5B51  CB 61               	bit	4,c						; If tone is off...
     168.  00:5B53  C2 5E 5B            	jp	nz,_ayVOLUME			; ...jump to _ayMIXER
     169.  00:5B56  2A 77 C4            	ld	hl,(sfx_PSG_TONE)
     170.  00:5B59  22 6F C1            	ld	(PSG_regToneC),hl
     171.  00:5B5C  CB 90               	res	 2,b				; enable tone on chan 3
     172.  00:5B5E                      
     173.  00:5B5E                      _ayVOLUME:	
     174.  00:5B5E                      	;--- Only update volume if tone or noise is active
     175.  00:5B5E  3E 24               	ld	a,00100100b
     176.  00:5B60  A0                  	and	b
     177.  00:5B61  FE 24               	cp	00100100b
     178.  00:5B63  CA 78 5B            	jp	z,_ayMIXER
     179.  00:5B66                      
     180.  00:5B66  79                  	ld	a,c					; a:=Control byte
     181.  00:5B67  E6 0F               	and	$0F					; lower nibble
     182.  00:5B69                      	; --- Fix the volume using TT Volume Table ---
     183.  00:5B69  2A 7A C4            	ld	hl,(sfx_PSG_BALANCE)	; hl:=Pointer to relative volume table
     184.  00:5B6C  85                  	add	a,l
     185.  00:5B6D  6F                  	ld	l,a
     186.  00:5B6E  D2 72 5B            	jp	nc,.skip
     187.  00:5B71  24                  	inc	h
     188.  00:5B72                      .skip:	
     189.  00:5B72  7E                  	ld	a,(hl)				; a:=sfx_PSG relative volume
     190.  00:5B73  E6 0F               	and	$0f					; mask only ay volume
     191.  00:5B75  32 75 C1            	ld	(PSG_regVOLC),a		; Diretly update the TT register value
     192.  00:5B78                      
     193.  00:5B78                      
     194.  00:5B78                      
     195.  00:5B78                      _ayMIXER:
     196.  00:5B78                      	;--- Set Mixer
     197.  00:5B78  78                  	ld	a,b
     198.  00:5B79  32 72 C1            	ld	(PSG_regMIXER),a		; Directly write the TT register value
     199.  00:5B7C  C9                  	ret
     200.  00:5B7D                      
     201.  00:5B7D                      
     202.  00:5B7D                      
     203.  00:5B7D                      _ayEND:		
     204.  00:5B7D  AF                  	xor a		; remove bit 0
     205.  00:5B7E  32 74 C4            	ld	(sfx_STATUS),a
     206.  00:5B81  3D                  	dec	a					; reset prio (255)
     207.  00:5B82  32 73 C4            	ld	(sfx_PRIORITY),a	
     208.  00:5B85  C9                  	ret					
     209.  00:5B86                      
     583   00:5B86                      
     584   00:5B86                      	
     585   00:5B86                      demo_song:
     586   00:5B86                      	include	".\test1.asm"
       1.  00:5B86                      ; Song: v0.11.9                         
       2.  00:5B86                      ; By:                                   
       3.  00:5B86                      ; Period table: A440 Modern
       4.  00:5B86                      
       5.  00:5B86                      ; [ Song start data ]
       6.  00:5B86  07                  	db $07					; Initial song speed.
       7.  00:5B87  80                  	db $80					; Channel setup.
       8.  00:5B88  BA 5B               	dw .customvoice_start-8			; Start of the custom voices data.
       9.  00:5B8A  CA 5B               	dw .drummacro_start			; Start of the drum macro data.
      10.  00:5B8C  CA 5B               	dw .instrument_start			; Start of the instrument data.
      11.  00:5B8E                      
      12.  00:5B8E                      ; [ Song order pointer list ]
      13.  00:5B8E                      	dw .track_000, .track_001, .track_002, .track_003, .track_004, .track_005, .track_006, .track_007	; Step:000 Pattern:000
      13.  00:5B8E  D4 5B D9 5B 02 5C 2B 5C 30 5C 36 5C 3C 5C 42 5C 
      14.  00:5B9E                      .restart:
      15.  00:5B9E                      	dw .track_008, .track_009, .track_009, .track_003, .track_004, .track_005, .track_014, .track_007	; Step:001 Pattern:001
      15.  00:5B9E  48 5C 4D 5C 4D 5C 2B 5C 30 5C 36 5C 4F 5C 42 5C 
      16.  00:5BAE                      	dw .track_000, .track_001, .track_002, .track_003, .track_004, .track_005, .track_006, .track_007	; Step:002 Pattern:000
      16.  00:5BAE  D4 5B D9 5B 02 5C 2B 5C 30 5C 36 5C 3C 5C 42 5C 
      17.  00:5BBE  00 00 00 00         	dw 0x0000, 0x0000			; End of sequence delimiter + restart address.
      18.  00:5BC2                      
      19.  00:5BC2                      ; [ Custom FM voices ]
      20.  00:5BC2                      .customvoice_start:
      21.  00:5BC2                      	db $20,$71,$0d,$06,$c1,$d5,$56,$06 		; Custom voice:60
      21.  00:5BC2  20 71 0D 06 C1 D5 56 06 
      22.  00:5BCA                      
      23.  00:5BCA                      ; [ FM Drum macros]
      24.  00:5BCA                      .drummacro_start:
      25.  00:5BCA                      
      26.  00:5BCA                      ; [ Instruments]
      27.  00:5BCA                      .instrument_start:
      28.  00:5BCA  CC 5B               	dw .instrument_00				;                 
      29.  00:5BCC                      
      30.  00:5BCC                      .instrument_00:					;                 
      31.  00:5BCC  00 04               	db $00,$04					; FM Software Voice 0
      32.  00:5BCE                      								; --- Macro loop
      33.  00:5BCE  02 10               	db $02,$10						; Mixer (T)
      34.  00:5BD0  08 0F               	db $08,$0f						; Volume _
      35.  00:5BD2  18 FB               	db $18,$fb						; Loop (-6)
      36.  00:5BD4                      
      37.  00:5BD4                      
      38.  00:5BD4                      ; [ Song track data ]
      39.  00:5BD4                      .track_000:
      40.  00:5BD4  24                  	db $24			;Note C-4
      41.  00:5BD5  71                  	db $71			;Volume 15
      42.  00:5BD6  72                  	db $72			;Instrument 0
      43.  00:5BD7  FF                  	db $ff			;Wait 64
      44.  00:5BD8  BF                  	db $bf			;[End-Of-Track]
      45.  00:5BD9                      .track_001:
      46.  00:5BD9  4C                  	db $4c			;Note E-7
      47.  00:5BDA  6C                  	db $6c			;Volume 10
      48.  00:5BDB  72                  	db $72			;Instrument 0
      49.  00:5BDC  C1                  	db $c1			;Wait 2
      50.  00:5BDD  4D                  	db $4d			;Note F-7
      51.  00:5BDE                      					;Wait Repeat 2
      52.  00:5BDE  4F                  	db $4f			;Note G-7
      53.  00:5BDF                      					;Wait Repeat 2
      54.  00:5BDF  4C                  	db $4c			;Note E-7
      55.  00:5BE0                      					;Wait Repeat 2
      56.  00:5BE0  4D                  	db $4d			;Note F-7
      57.  00:5BE1                      					;Wait Repeat 2
      58.  00:5BE1  4F                  	db $4f			;Note G-7
      59.  00:5BE2                      					;Wait Repeat 2
      60.  00:5BE2  4C                  	db $4c			;Note E-7
      61.  00:5BE3                      					;Wait Repeat 2
      62.  00:5BE3  4D                  	db $4d			;Note F-7
      63.  00:5BE4                      					;Wait Repeat 2
      64.  00:5BE4  4F                  	db $4f			;Note G-7
      65.  00:5BE5                      					;Wait Repeat 2
      66.  00:5BE5  4C                  	db $4c			;Note E-7
      67.  00:5BE6                      					;Wait Repeat 2
      68.  00:5BE6  4D                  	db $4d			;Note F-7
      69.  00:5BE7                      					;Wait Repeat 2
      70.  00:5BE7  4F                  	db $4f			;Note G-7
      71.  00:5BE8  C1                  	db $c1			;Wait 2
      72.  00:5BE9  4C                  	db $4c			;Note E-7
      73.  00:5BEA  6C                  	db $6c			;Volume 10
      74.  00:5BEB                      					;Wait Repeat 2
      75.  00:5BEB  4D                  	db $4d			;Note F-7
      76.  00:5BEC                      					;Wait Repeat 2
      77.  00:5BEC  4F                  	db $4f			;Note G-7
      78.  00:5BED                      					;Wait Repeat 2
      79.  00:5BED  4C                  	db $4c			;Note E-7
      80.  00:5BEE                      					;Wait Repeat 2
      81.  00:5BEE  4D                  	db $4d			;Note F-7
      82.  00:5BEF                      					;Wait Repeat 2
      83.  00:5BEF  4F                  	db $4f			;Note G-7
      84.  00:5BF0                      					;Wait Repeat 2
      85.  00:5BF0  4C                  	db $4c			;Note E-7
      86.  00:5BF1                      					;Wait Repeat 2
      87.  00:5BF1  4D                  	db $4d			;Note F-7
      88.  00:5BF2                      					;Wait Repeat 2
      89.  00:5BF2  4F                  	db $4f			;Note G-7
      90.  00:5BF3                      					;Wait Repeat 2
      91.  00:5BF3  4C                  	db $4c			;Note E-7
      92.  00:5BF4                      					;Wait Repeat 2
      93.  00:5BF4  4D                  	db $4d			;Note F-7
      94.  00:5BF5                      					;Wait Repeat 2
      95.  00:5BF5  4F                  	db $4f			;Note G-7
      96.  00:5BF6  C1                  	db $c1			;Wait 2
      97.  00:5BF7  4C                  	db $4c			;Note E-7
      98.  00:5BF8  6C                  	db $6c			;Volume 10
      99.  00:5BF9                      					;Wait Repeat 2
     100.  00:5BF9  4D                  	db $4d			;Note F-7
     101.  00:5BFA                      					;Wait Repeat 2
     102.  00:5BFA  4F                  	db $4f			;Note G-7
     103.  00:5BFB                      					;Wait Repeat 2
     104.  00:5BFB  4C                  	db $4c			;Note E-7
     105.  00:5BFC                      					;Wait Repeat 2
     106.  00:5BFC  4D                  	db $4d			;Note F-7
     107.  00:5BFD                      					;Wait Repeat 2
     108.  00:5BFD  4F                  	db $4f			;Note G-7
     109.  00:5BFE                      					;Wait Repeat 2
     110.  00:5BFE  4C                  	db $4c			;Note E-7
     111.  00:5BFF                      					;Wait Repeat 2
     112.  00:5BFF  4D                  	db $4d			;Note F-7
     113.  00:5C00  C1                  	db $c1			;Wait 2
     114.  00:5C01  BF                  	db $bf			;[End-Of-Track]
     115.  00:5C02                      .track_002:
     116.  00:5C02  51                  	db $51			;Note A-7
     117.  00:5C03  6E                  	db $6e			;Volume 12
     118.  00:5C04  72                  	db $72			;Instrument 0
     119.  00:5C05  C1                  	db $c1			;Wait 2
     120.  00:5C06  54                  	db $54			;Note C-8
     121.  00:5C07                      					;Wait Repeat 2
     122.  00:5C07  51                  	db $51			;Note A-7
     123.  00:5C08                      					;Wait Repeat 2
     124.  00:5C08  54                  	db $54			;Note C-8
     125.  00:5C09                      					;Wait Repeat 2
     126.  00:5C09  51                  	db $51			;Note A-7
     127.  00:5C0A                      					;Wait Repeat 2
     128.  00:5C0A  54                  	db $54			;Note C-8
     129.  00:5C0B                      					;Wait Repeat 2
     130.  00:5C0B  51                  	db $51			;Note A-7
     131.  00:5C0C                      					;Wait Repeat 2
     132.  00:5C0C  54                  	db $54			;Note C-8
     133.  00:5C0D                      					;Wait Repeat 2
     134.  00:5C0D  51                  	db $51			;Note A-7
     135.  00:5C0E                      					;Wait Repeat 2
     136.  00:5C0E  54                  	db $54			;Note C-8
     137.  00:5C0F                      					;Wait Repeat 2
     138.  00:5C0F  51                  	db $51			;Note A-7
     139.  00:5C10                      					;Wait Repeat 2
     140.  00:5C10  54                  	db $54			;Note C-8
     141.  00:5C11  C1                  	db $c1			;Wait 2
     142.  00:5C12  51                  	db $51			;Note A-7
     143.  00:5C13  6E                  	db $6e			;Volume 12
     144.  00:5C14                      					;Wait Repeat 2
     145.  00:5C14  54                  	db $54			;Note C-8
     146.  00:5C15                      					;Wait Repeat 2
     147.  00:5C15  51                  	db $51			;Note A-7
     148.  00:5C16                      					;Wait Repeat 2
     149.  00:5C16  54                  	db $54			;Note C-8
     150.  00:5C17                      					;Wait Repeat 2
     151.  00:5C17  51                  	db $51			;Note A-7
     152.  00:5C18                      					;Wait Repeat 2
     153.  00:5C18  54                  	db $54			;Note C-8
     154.  00:5C19                      					;Wait Repeat 2
     155.  00:5C19  51                  	db $51			;Note A-7
     156.  00:5C1A                      					;Wait Repeat 2
     157.  00:5C1A  54                  	db $54			;Note C-8
     158.  00:5C1B                      					;Wait Repeat 2
     159.  00:5C1B  51                  	db $51			;Note A-7
     160.  00:5C1C                      					;Wait Repeat 2
     161.  00:5C1C  54                  	db $54			;Note C-8
     162.  00:5C1D                      					;Wait Repeat 2
     163.  00:5C1D  51                  	db $51			;Note A-7
     164.  00:5C1E                      					;Wait Repeat 2
     165.  00:5C1E  54                  	db $54			;Note C-8
     166.  00:5C1F  C1                  	db $c1			;Wait 2
     167.  00:5C20  51                  	db $51			;Note A-7
     168.  00:5C21  6E                  	db $6e			;Volume 12
     169.  00:5C22                      					;Wait Repeat 2
     170.  00:5C22  54                  	db $54			;Note C-8
     171.  00:5C23                      					;Wait Repeat 2
     172.  00:5C23  51                  	db $51			;Note A-7
     173.  00:5C24                      					;Wait Repeat 2
     174.  00:5C24  54                  	db $54			;Note C-8
     175.  00:5C25                      					;Wait Repeat 2
     176.  00:5C25  51                  	db $51			;Note A-7
     177.  00:5C26                      					;Wait Repeat 2
     178.  00:5C26  54                  	db $54			;Note C-8
     179.  00:5C27                      					;Wait Repeat 2
     180.  00:5C27  51                  	db $51			;Note A-7
     181.  00:5C28                      					;Wait Repeat 2
     182.  00:5C28  54                  	db $54			;Note C-8
     183.  00:5C29  C1                  	db $c1			;Wait 2
     184.  00:5C2A  BF                  	db $bf			;[End-Of-Track]
     185.  00:5C2B                      .track_003:
     186.  00:5C2B  30                  	db $30			;Note C-5
     187.  00:5C2C  71                  	db $71			;Volume 15
     188.  00:5C2D  72                  	db $72			;Instrument 0
     189.  00:5C2E  FF                  	db $ff			;Wait 64
     190.  00:5C2F  BF                  	db $bf			;[End-Of-Track]
     191.  00:5C30                      .track_004:
     192.  00:5C30  C3                  	db $c3			;Wait 4
     193.  00:5C31  33                  	db $33			;Note D#5
     194.  00:5C32  71                  	db $71			;Volume 15
     195.  00:5C33  72                  	db $72			;Instrument 0
     196.  00:5C34  FB                  	db $fb			;Wait 60
     197.  00:5C35  BF                  	db $bf			;[End-Of-Track]
     198.  00:5C36                      .track_005:
     199.  00:5C36  C7                  	db $c7			;Wait 8
     200.  00:5C37  37                  	db $37			;Note G-5
     201.  00:5C38  71                  	db $71			;Volume 15
     202.  00:5C39  72                  	db $72			;Instrument 0
     203.  00:5C3A  F7                  	db $f7			;Wait 56
     204.  00:5C3B  BF                  	db $bf			;[End-Of-Track]
     205.  00:5C3C                      .track_006:
     206.  00:5C3C  CA                  	db $ca			;Wait 11
     207.  00:5C3D  3A                  	db $3a			;Note A#5
     208.  00:5C3E  71                  	db $71			;Volume 15
     209.  00:5C3F  72                  	db $72			;Instrument 0
     210.  00:5C40  F4                  	db $f4			;Wait 53
     211.  00:5C41  BF                  	db $bf			;[End-Of-Track]
     212.  00:5C42                      .track_007:
     213.  00:5C42  CD                  	db $cd			;Wait 14
     214.  00:5C43  3E                  	db $3e			;Note D-6
     215.  00:5C44  71                  	db $71			;Volume 15
     216.  00:5C45  72                  	db $72			;Instrument 0
     217.  00:5C46  F1                  	db $f1			;Wait 50
     218.  00:5C47  BF                  	db $bf			;[End-Of-Track]
     219.  00:5C48                      .track_008:
     220.  00:5C48  26                  	db $26			;Note D-4
     221.  00:5C49  71                  	db $71			;Volume 15
     222.  00:5C4A  72                  	db $72			;Instrument 0
     223.  00:5C4B  FF                  	db $ff			;Wait 64
     224.  00:5C4C  BF                  	db $bf			;[End-Of-Track]
     225.  00:5C4D                      .track_009:
     226.  00:5C4D  FF                  	db $ff			;Wait 64
     227.  00:5C4E  BF                  	db $bf			;[End-Of-Track]
     228.  00:5C4F                      .track_014:
     229.  00:5C4F  CA                  	db $ca			;Wait 11
     230.  00:5C50  3A                  	db $3a			;Note A#5
     231.  00:5C51  71                  	db $71			;Volume 15
     232.  00:5C52  72                  	db $72			;Instrument 0
     233.  00:5C53  F3                  	db $f3			;Wait 52
     234.  00:5C54  BF                  	db $bf			;[End-Of-Track]
     235.  00:5C55                      
     587   00:5C55                      	
     588   00:5C55                      TEXT_Title:
     589   00:5C55                      	db	"TriloTracker FM Re-player Debug info",0	
     589   00:5C55  54 72 69 6C 6F 54 72 61 63 6B 65 72 20 46 4D 20 
     589   00:5C65  52 65 2D 70 6C 61 79 65 72 20 44 65 62 75 67 20 
     589   00:5C75  69 6E 66 6F 00 
     590   00:5C7A                      TEXT_Step:
     591   00:5C7A  53 74 65 70 3A 00   	db	"Step:",0	
     592   00:5C80                      TEXT_Header_Data:
     593   00:5C80                      	db	"C# Nt In FM Vl Cm Flags",0
     593   00:5C80  43 23 20 4E 74 20 49 6E 20 46 4D 20 56 6C 20 43 
     593   00:5C90  6D 20 46 6C 61 67 73 00 
     594   00:5C98                      TEXT_Register_Header:
     595   00:5C98                      	db 	"Tone Vl  Tone Vl  Nois Mx  Env  Sh",0
     595   00:5C98  54 6F 6E 65 20 56 6C 20 20 54 6F 6E 65 20 56 6C 
     595   00:5CA8  20 20 4E 6F 69 73 20 4D 78 20 20 45 6E 76 20 20 
     595   00:5CB8  53 68 00 
     596   00:5CBB                      TEXT_Register_Drum:
     597   00:5CBB                      	db 	"Macr Drm Tone Vl",0	
     597   00:5CBB  4D 61 63 72 20 44 72 6D 20 54 6F 6E 65 20 56 6C 
     597   00:5CCB  00 
     598   00:5CCC                      TEXT_Legend_Data:
     599   00:5CCC                      	db	"Legend: Psg, Fm, Voice, Env, Keyon, Command, Active(note)",0
     599   00:5CCC  4C 65 67 65 6E 64 3A 20 50 73 67 2C 20 46 6D 2C 
     599   00:5CDC  20 56 6F 69 63 65 2C 20 45 6E 76 2C 20 4B 65 79 
     599   00:5CEC  6F 6E 2C 20 43 6F 6D 6D 61 6E 64 2C 20 41 63 74 
     599   00:5CFC  69 76 65 28 6E 6F 74 65 29 00 
     600   00:5D06                      
     601   00:5D06                      	
     602   00:5D06                      	
     603   00:5D06                      font_data:
     604   00:5D06  (0800)              	incbin	".\fontpat.bin"
     605   00:6506                      
     606   00:6506                      
     607   00:6506                      sfxbank:
     608   00:6506  (0232)              	incbin ".\GALIOUS_SFX_TEST.afb"
     609   00:6738                      
     610   00:6738                      ;sfx_PSG_STREAMS:
     611   00:6738                      ;sfx_SCC_STREAMS:
     612   00:6738                      ;	dw	sfx1
     613   00:6738                      ;	dw	sfx2
     614   00:6738                      ;	dw	sfx3
     615   00:6738                      ;	dw	sfx4
     616   00:6738                      ;	dw	sfx5
     617   00:6738                      ;
     618   00:6738                      ;
     619   00:6738                      ;
     620   00:6738                      ;sfx1:
     621   00:6738                      ;	db	1,4*8
     622   00:6738                      ;	incbin	"..\ttsfxplay\sfx\menu1.afx"
     623   00:6738                      ;sfx2:
     624   00:6738                      ;	db	1,2*8
     625   00:6738                      ;	incbin	"..\ttsfxplay\sfx\menu2.afx"	
     626   00:6738                      ;sfx3:
     627   00:6738                      ;	db	1,3*8
     628   00:6738                      ;	incbin	"..\ttsfxplay\sfx\menu3.afx"
     629   00:6738                      ;sfx4:
     630   00:6738                      ;	db	1,5*8
     631   00:6738                      ;	incbin	"..\ttsfxplay\sfx\menu4.afx"
     632   00:6738                      ;sfx5:
     633   00:6738                      ;	db	1,6*8
     634   00:6738                      ;	incbin	"..\ttsfxplay\sfx\menu5.afx"
     635   00:6738                      ;
     636   00:6738                      	
     637   00:6738                      	
     638   00:6738  (C000)              	map	0xc000
     639   00:6738                      	include	"..\code\ttreplayFMRAM.asm"
       1.  00:6738                      ;================================
       2.  00:6738                      ; The new replayer.
       3.  00:6738                      ;
       4.  00:6738                      ; Persistent RAM unswappable
       5.  00:6738                      ;
       6.  00:6738                      ;================================
       7.  00:6738                      
       8.  00:6738  (00:FFFFFFEF)       TRACK_Instrument		      equ 0-17
       9.  00:6738  (00:FFFFFFF0)       TRACK_Command			equ 1-17
      10.  00:6738  (00:FFFFFFF1)       TRACK_MacroPointer		equ 2-17
      11.  00:6738  (00:FFFFFFF3)       TRACK_MacroStart		      equ 4-17
      12.  00:6738  (00:FFFFFFF5)       TRACK_MacroRestart 		equ 6-17		; no longer needed
      13.  00:6738  (00:FFFFFFF6)       TRACK_Note				equ 7-17
      14.  00:6738  (00:FFFFFFF7)       TRACK_Volume			equ 8-17
      15.  00:6738  (00:FFFFFFF8)       TRACK_Voice				equ 9-17
      16.  00:6738  (00:FFFFFFF9)       TRACK_Flags				equ 10-17
      17.  00:6738                      	; 0 = note trigger
      18.  00:6738                      	; 1 = note active
      19.  00:6738                      	; 2 = envelope trigger
      20.  00:6738                      	; 3 = command trigger      
      21.  00:6738                      	; 4 = Key on 		;-< for FM
      22.  00:6738                      	; 5 = Sustain           ;-< for FM
      23.  00:6738                      	; 6 = FM voice trigger
      24.  00:6738                      	; 7 = PSG/FM
      25.  00:6738  (00:FFFFFFFA)       TRACK_empty				equ 11-17		; needed for pushing 0 at note start
      26.  00:6738  (00:FFFFFFFB)       TRACK_ToneAdd			equ 12-17		; reset after note set
      27.  00:6738  (00:FFFFFFFD)       TRACK_VolumeAdd			equ 14-17		; reset after note set
      28.  00:6738  (00:FFFFFFFE)       TRACK_Noise				equ 15-17	;[OBSOLETE]	; reset after note set
      29.  00:6738  (00:FFFFFFFF)       TRACK_cmd_VolumeAdd		equ 16-17		; reset after note set
      30.  00:6738  (00:0000)           TRACK_cmd_ToneSlideAdd		equ 17-17		; reset after note set
      31.  00:6738  (00:0002)           TRACK_cmd_ToneAdd			equ 19-17		; reset after note set
      32.  00:6738                      
      33.  00:6738  (00:0004)           TRACK_cmd_detune			equ 21-17
      34.  00:6738  (00:0006)           TRACK_cmd_0				equ 23-17
      35.  00:6738  (00:0007)           TRACK_cmd_1				equ 24-17
      36.  00:6738  (00:0008)           TRACK_cmd_2				equ 25-17
      37.  00:6738  (00:0009)           TRACK_cmd_3				equ 26-17
      38.  00:6738  (00:000A)           TRACK_cmd_4_depth			equ 27-17
      39.  00:6738  (00:000C)           TRACK_cmd_4_step			equ 29-17
      40.  00:6738  (00:000D)           TRACK_cmd_NoteAdd			equ 30-17		;x reset after note set
      41.  00:6738  (00:000E)           TRACK_cmd_A				equ 31-17		
      42.  00:6738  (00:000F)           TRACK_cmd_B				equ 32-17		
      43.  00:6738  (00:0010)           TRACK_cmd_E				equ 33-17
      44.  00:6738  (00:0011)           TRACK_Timer				equ 34-17		; used for timing by all cmd's
      45.  00:6738  (00:0012)           TRACK_Step				equ 35-17		; only for VIBRATO???
      46.  00:6738  (00:0013)           TRACK_Delay				equ 36-17		; rows to wait till next data
      47.  00:6738                      ;TRACK_Retrig			equ 35-17		; rows to retrigger command
      48.  00:6738  (00:0014)           TRACK_prevDelay			equ 37-17
      49.  00:6738  (00:0015)           TRACK_cmd_A_add			equ 38-17		;<< Still in use???
      50.  00:6738                      
      51.  00:6738  (00:0027)           TRACK_REC_SIZE			equ 39
      52.  00:6738                      
      53.  00:6738                      
      54.  00:6738  (00:0000)           B_TRGNOT				equ 0			; note trigger
      55.  00:6738  (00:0001)           B_ACTNOT				equ 1			; note active
      56.  00:6738  (00:0002)           B_TRGENV				equ 2			; envelope trigger
      57.  00:6738  (00:0003)           B_TRGCMD				equ 3			; command active
      58.  00:6738  (00:0004)           B_KEYON				equ 4			; for fm note trigger
      59.  00:6738  (00:0005)           B_SUST				equ 5			; for fm note sustain
      60.  00:6738  (00:0006)           B_TRGVOI				equ 6			; custom voice trigger	
      61.  00:6738  (00:0007)           B_PSGFM				equ 7			; chip type (PSG or FM)	
      62.  00:6738                      
      63.  00:6738                      
      64.  00:6738  (00:C000)           _SP_Storage				#2			; to store the SP
      65.  00:6738                      
      66.  00:6738  (00:C002)           replay_trigger			#1			; trigger byte.
      67.  00:6738  (00:C003)           replay_mainPSGvol		      #2			; volume mixer for PSG FM balance
      68.  00:6738  (00:C005)           replay_mainFMvol		      #2			; volume mixer for PSG FM balance
      69.  00:6738                      ;replay_songbase:		      #2			; pointer to song data
      70.  00:6738                      
      71.  00:6738                      ; Do not move these
      72.  00:6738  (00:C007)           replay_voicebase:		      #2			; pointer to custom voice data
      73.  00:6738  (00:C009)           replay_drumbase:		      #2			; pointer to drum macro data
      74.  00:6738  (00:C00B)           replay_insbase:			#2			; pointer to instrument data
      75.  00:6738  (00:C00D)           TRACK_pointer1			#2
      76.  00:6738  (00:C00F)           TRACK_pointer2			#2
      77.  00:6738  (00:C011)           TRACK_pointer3			#2
      78.  00:6738  (00:C013)           TRACK_pointer4			#2
      79.  00:6738  (00:C015)           TRACK_pointer5			#2
      80.  00:6738  (00:C017)           TRACK_pointer6			#2
      81.  00:6738  (00:C019)           TRACK_pointer7			#2
      82.  00:6738  (00:C01B)           TRACK_pointer8			#2
      83.  00:6738                      ; / Do not move above
      84.  00:6738                      
      85.  00:6738                      
      86.  00:6738                      
      87.  00:6738  (00:C01D)           replay_orderpointer:	      #2			; pointer to the order track list pointers
      88.  00:6738                      
      89.  00:6738  (00:C01F)           replay_speed 			#1			; speed to replay (get from song)
      90.  00:6738  (00:C020)           replay_speed_subtimer 	      #1			; counter for finer speed
      91.  00:6738  (00:C021)           replay_speed_timer 		#1 			; counter for speed
      92.  00:6738  (00:C022)           replay_mode 			#1			; Replayer status
      93.  00:6738                      ; mode 0  = no sound output
      94.  00:6738                      ; mode 1  = replay song 
      95.  00:6738  (00:C023)           replay_chan_setup		      #1			; 0 = 2 psg+ 6 fm, 1 = 3psg + 5 fm
      96.  00:6738  (00:C024)           replay_arp_speed		      #1			; arpeggio speed ( 0 = fast, $f = slowest)
      97.  00:6738  (00:C025)           replay_fade				#1			; Fade active (value = fade speed)
      98.  00:6738  (00:C026)           replay_fade_timer		      #1			; Timer for fade
      99.  00:6738  (00:C027)           replay_fade_vol			#1			; fade volume to lower the channel volume.
     100.  00:6738                      
     101.  00:6738  (00:C028)           replay_previous_note	      #1			; previous note played
     102.  00:6738  (00:C029)           replay_mainvol			#2			; the volume correction.
     103.  00:6738                      
     104.  00:6738  (00:C02B)           replay_softvoice			#1	; Software voice active
     105.  00:6738  (00:C02C)           FM_softvoice_req			#1	; Software voice requested
     106.  00:6738                      ;replay_vib_table		      #2			; pointer to the vibrato table
     107.  00:6738                      ;replay_tonetable_PSG	      #2			; ToneTable (affected by transpose);
     108.  00:6738                      ;replay_tonetable_FM	      #2			; ToneTable (affected by transpose);
     109.  00:6738  (00:C02D)           replay_tonetable		      #2			; Current tonetable to read from
     110.  00:6738                      
     111.  00:6738  (00:C02F)           r800:					#1	; CPU mode
     112.  00:6738  (00:C030)           count_low:				#1	; R800 timer
     113.  00:6738                      
     114.  00:6738  (00:C031)           equalization_freq:		#1	; vdp type for correct playback on 60hz 0=50Hx, >0=60Hz
     115.  00:6738  (00:C032)           equalization_cnt:		      #1	; counter for correct playback on 60hz
     116.  00:6738                      
     117.  00:6738                      
     118.  00:6738  (00:C033)           TRACK_Chan1				#TRACK_REC_SIZE
     119.  00:6738  (00:C05A)           TRACK_Chan2				#TRACK_REC_SIZE
     120.  00:6738  (00:C081)           TRACK_Chan3				#TRACK_REC_SIZE
     121.  00:6738  (00:C0A8)           TRACK_Chan4				#TRACK_REC_SIZE
     122.  00:6738  (00:C0CF)           TRACK_Chan5				#TRACK_REC_SIZE
     123.  00:6738  (00:C0F6)           TRACK_Chan6				#TRACK_REC_SIZE
     124.  00:6738  (00:C11D)           TRACK_Chan7				#TRACK_REC_SIZE
     125.  00:6738  (00:C144)           TRACK_Chan8				#TRACK_REC_SIZE
     126.  00:6738                      
     127.  00:6738                      
     128.  00:6738  (00:C16B)           REGISTERS_START		#0
     129.  00:6738                      IFDEF SFXPLAY_ENABLED
     130.  00:6738                      
     131.  00:6738                      ;--- AY SPECIFIC
     132.  00:6738  (00:C16B)           PSG_registers		#0 
     133.  00:6738  (00:C16B)           PSG_regToneA 		#2	; Tone A freq low (8bit)
     134.  00:6738                      					; Tone A freq high (4bit)
     135.  00:6738  (00:C16D)           PSG_regToneB 		#2	; Tone B freq low
     136.  00:6738                      					; Tone B freq high
     137.  00:6738  (00:C16F)           PSG_regToneC 		#2	; Tone C freq low
     138.  00:6738                      					; Tone C freq high
     139.  00:6738  (00:C171)           PSG_regNOISE 		#1	; Noise freq (5bit)
     140.  00:6738  (00:C172)           PSG_regMIXER 		#1	;0x38	;x3f	; Mixer control (1 = off, 0 = on)
     141.  00:6738  (00:C173)           PSG_regVOLA 		#1	; Chan A volume
     142.  00:6738  (00:C174)           PSG_regVOLB 		#1	; Chan B volume
     143.  00:6738  (00:C175)           PSG_regVOLC  		#1	; Chan C volume
     144.  00:6738  (00:C176)           PSG_regEnvL 		#1	; Volume Env Freq low (8bit)	
     145.  00:6738  (00:C177)           PSG_regEnvH 		#1	; Volume Env Freq high (4bit)
     146.  00:6738  (00:C178)           PSG_regEnvShape 		#1	; Volume Env Shape (4bit)
     147.  00:6738  (00:C179)           replay_noise		#1 ; replayer_noise
     148.  00:6738                      
     149.  00:6738                      ELSE
     150.  00:6738                    ~ 
     151.  00:6738                    ~ ;--- AY SPECIFIC
     152.  00:6738                    ~ PSG_registers		#0 
     153.  00:6738                    ~ PSG_regToneA 		#2	; Tone A freq low (8bit)
     154.  00:6738                    ~ 					; Tone A freq high (4bit)
     155.  00:6738                    ~ PSG_regToneB 		#2	; Tone B freq low
     156.  00:6738                    ~ 					; Tone B freq high
     157.  00:6738                    ~ PSG_regToneC 		#2	; Tone C freq low
     158.  00:6738                    ~ 					; Tone C freq high
     159.  00:6738                    ~ replay_noise		#0
     160.  00:6738                    ~ PSG_regNOISE 		#1	; Noise freq (5bit)
     161.  00:6738                    ~ PSG_regMIXER 		#1	;0x38	;x3f	; Mixer control (1 = off, 0 = on)
     162.  00:6738                    ~ PSG_regVOLA 		#1	; Chan A volume
     163.  00:6738                    ~ PSG_regVOLB 		#1	; Chan B volume
     164.  00:6738                    ~ PSG_regVOLC  		#1	; Chan C volume
     165.  00:6738                    ~ PSG_regEnvL 		#1	; Volume Env Freq low (8bit)	
     166.  00:6738                    ~ PSG_regEnvH 		#1	; Volume Env Freq high (4bit)
     167.  00:6738                    ~ PSG_regEnvShape 		#1	; Volume Env Shape (4bit)
     168.  00:6738                    ~ 
     169.  00:6738                    ~ ENDIF
     170.  00:6738                      
     171.  00:6738                      ;--- FM SPECIFIC
     172.  00:6738  (00:C17A)           FM_Voicereg:	#16	; software voice + old values
     173.  00:6738                      
     174.  00:6738  (00:C18A)           FM_Registers: 	#0	; contains the registers values to write and value previously written
     175.  00:6738  (00:C18A)           FM_regToneA 	#2	; Tone A freq low (8bit)			; Tone A freq high (1bit)
     176.  00:6738  (00:C18C)           FM_regToneAb 	#2	; Tone A freq low (8bit)			; Tone A freq high (1bit)
     177.  00:6738  (00:C18E)           FM_regVOLA		#1	; Chan A volume
     178.  00:6738  (00:C18F)           FM_regVOLAb		#1	; Chan A volume
     179.  00:6738  (00:C190)           FM_regToneB 	#2	; Tone B freq low					; Tone B freq high
     180.  00:6738  (00:C192)           FM_regToneBb 	#2	; Tone B freq low					; Tone B freq high
     181.  00:6738  (00:C194)           FM_regVOLB		#1	; Chan B volume
     182.  00:6738  (00:C195)           FM_regVOLBb		#1	; Chan B volume
     183.  00:6738  (00:C196)           FM_regToneC 	#2	; Tone C freq low					; Tone C freq high
     184.  00:6738  (00:C198)           FM_regToneCb 	#2	; Tone C freq low					; Tone C freq high
     185.  00:6738  (00:C19A)           FM_regVOLC	 	#1	; Chan C volume
     186.  00:6738  (00:C19B)           FM_regVOLCb	 	#1	; Chan C volume
     187.  00:6738  (00:C19C)           FM_regToneD 	#2	; Tone D freq low					; Tone D freq high
     188.  00:6738  (00:C19E)           FM_regToneDb 	#2	; Tone D freq low					; Tone D freq high
     189.  00:6738  (00:C1A0)           FM_regVOLD		#1	; Chan D volume
     190.  00:6738  (00:C1A1)           FM_regVOLDb		#1	; Chan D volume
     191.  00:6738  (00:C1A2)           FM_regToneE 	#2	; Tone E freq low					; Tone E freq high
     192.  00:6738  (00:C1A4)           FM_regToneEb 	#2	; Tone E freq low					; Tone E freq high
     193.  00:6738  (00:C1A6)           FM_regVOLE	  	#1	; Chan E volume
     194.  00:6738  (00:C1A7)           FM_regVOLEb	  	#1	; Chan E volume
     195.  00:6738  (00:C1A8)           FM_regToneF 	#2	; Tone F freq low					; Tone F freq high
     196.  00:6738  (00:C1AA)           FM_regToneFb 	#2	; Tone F freq low					; Tone F freq high
     197.  00:6738  (00:C1AC)           FM_regVOLF	  	#1	; Chan F volume
     198.  00:6738  (00:C1AD)           FM_regVOLFb	  	#1	; Chan F volume
     199.  00:6738                      
     200.  00:6738  (00:C1AE)           DRUM_regToneBD	#2
     201.  00:6738  (00:C1B0)           DRUM_regToneBDb	#2
     202.  00:6738  (00:C1B2)           DRUM_regVolBD	#1
     203.  00:6738  (00:C1B3)           DRUM_regVolBDb	#1
     204.  00:6738  (00:C1B4)           DRUM_regToneSH	#2
     205.  00:6738  (00:C1B6)           DRUM_regToneSHb	#2
     206.  00:6738  (00:C1B8)           DRUM_regVolSH	#1
     207.  00:6738  (00:C1B9)           DRUM_regVolSHb	#1
     208.  00:6738  (00:C1BA)           DRUM_regToneCT	#2
     209.  00:6738  (00:C1BC)           DRUM_regToneCTb	#2
     210.  00:6738  (00:C1BE)           DRUM_regVolCT	#1
     211.  00:6738  (00:C1BF)           DRUM_regVolCTb	#1
     212.  00:6738  (00:C1C0)           FM_DRUM		#1	; Percussion bits
     213.  00:6738  (00:C1C1)           FM_DRUMb		#1
     214.  00:6738                      
     215.  00:6738                      
     216.  00:6738                      ;FM_DRUM_Flags		#1	; 7, percusion, 6,4,2 = tone update, 5,3,1 = vol update
     217.  00:6738                      ;FM_freqreg1			#2	; Base drum
     218.  00:6738                      ;FM_volreg1			#1	; Drum (low)
     219.  00:6738                      ;FM_freqreg2			#2	; Snare + HiHat
     220.  00:6738                      ;FM_volreg2			#1	; Snare(low) Hihat(High)
     221.  00:6738                      ;FM_freqreg3			#2	; Cymbal + TomTom
     222.  00:6738                      ;FM_volreg3			#1	; Cymbal(low) TomTom (High)
     223.  00:6738                      
     224.  00:6738                      ;FM_DRUM_LEN			#1	; Length of drum macro
     225.  00:6738  (00:C1C2)           FM_DRUM_ACTIVE		#1	; Is a drum active?
     226.  00:6738  (00:C1C3)           FM_DRUM_MACRO		#2	; Pointer to drum macro data
     227.  00:6738                      
     228.  00:6738                      ; DEze lijkt niet meer nodig
     229.  00:6738  (00:C1C5)           FM_regMIXER 		#1	; x3f	; Mixer control (1 = off, 0 = on)
     230.  00:6738                      
     231.  00:6738  (00:C1C6)           REGISTERS_END		#0
     232.  00:6738                      
     640   00:6738                      	
     641   00:6738                      
     642   00:6738  (00:C1C6)           debug_pointer1:	#2
     643   00:6738  (00:C1C8)           debug_pointer2:	#2	
     644   00:6738  (00:C1CA)           debug_pnt:		#8*80
     645   00:6738  (00:C44A)           TEXT_Chan		#40
     646   00:6738                      
     647   00:6738  (00:C472)           sfx:			#1		; sfx to play
     648   00:6738                      
     649   00:6738                      	include	"..\ttsfxplayPSG\ttsfxplayPSG_RAM.asm"
       1.  00:6738                      		; --- TT sfx player v0.1 ---
       2.  00:6738                      
       3.  00:6738                      		; --- THIS FILE MUST BE COMPILED IN RAM ---
       4.  00:6738                      
       5.  00:6738  (00:C473)           sfx_PRIORITY:		#1			; Current sfx_PSG stream priority
       6.  00:6738  (00:C474)           sfx_STATUS:			#1			; 0 = inactive, 1 = sfx beeing played.
       7.  00:6738  (00:C475)           sfx_PSG_POINTER:		#2			; Pointer to the current sfx_PSG stream
       8.  00:6738  (00:C477)           sfx_PSG_TONE:	    	#2			; Current tone of the sfx_PSG stream
       9.  00:6738  (00:C479)           sfx_PSG_NOISE:	    	#1			; Current noise of the sfx_PSG stream
      10.  00:6738                      ;sfx_PSG_VOLUME:		#1			; Current volume of the sfx_PSG stream
      11.  00:6738  (00:C47A)           sfx_PSG_BALANCE:		#2			; Pointer to the volume table
      12.  00:6738                      
      13.  00:6738                      
      14.  00:6738                      
     650   00:6738  (00:C47C)           pattern	#1
     651   00:6738                      

    LABELS
-------------------------------------------------
00:00004010   initmain
00:00004099   infinite
00:000040B0   infinite.noleft
00:000040B5   infinite.noright
00:000040B5   infinite.waitcursor
00:000040BD   infinite.space
00:000040D6   infinite.skip
00:000040EA   isr
00:00004111   write_debug
00:0000411E   _wd_loop
00:00004127   clear_debug
00:00004135   debuginfo
00:0000413E   debuginfo.loop
00:00004180   step_debug
00:000041AB   register_debug
00:000041E5   register_debug_loop
00:0000420C   REG_list
00:00004248   clear_TEXT
00:00004254   debug_flags
00:000042BF   init_vdp
00:00000082   _UPLEFT
00:00000081   _HORIZONTAL
00:00000083   _UPRIGHT
00:00000080   _VERTICAL
00:00000087 X _VERTICAL_SMALL
00:00000086 X _VERTICAL_DOUBLE
00:0000008B X _VERTICAL_STEP
00:000000B0 X _ARROWLEFT
00:000000B1 X _ARROWRIGHT
00:000000AE X _LOOPSIGN
00:000000F1 X _TONE_OFF_SIGN
00:000000F2 X _TONE_ON_SIGN
00:000000F3 X _NOISE_OFF_SIGN
00:000000F4 X _NOISE_ON_SIGN
00:000000F5 X _ENV_OFF_SIGN
00:000000F6 X _ENV_ON_SIGN
00:000000BF X _CMD_SIGN
00:000000FE X _CURSOR
00:000000FC X MOUSE_CHR
00:00002000   _PNT
00:00002A00   _CNT
00:0000430B   clear_screen
00:00004320 X clear_cnt
00:00004337 X clear_files
00:00004352   draw_label
00:0000435A   draw_label_loop
00:00004364   draw_label_end
00:00004366   draw_label_fast
00:00004377 X draw_fake_hex_sp
00:0000438D X draw_fake_hex_sp_small
00:00004398 X draw_hex_sp_small
00:000043A0   draw_hex
00:000043A2 X draw_fakehex
00:000043AB   draw_hex_small
00:000043B0   draw_hex2
00:000043BF X conv_decimal
00:000043C0   draw_decimal
00:000043CD   _dd_Num1
00:000043CF   _dd_Num2
00:000043D7   draw_decimal3
00:000043DF X draw_box
00:000043E9   draw_box_loop1
00:000043EA   draw_box_loop0
00:00004423   draw_box_end
00:00004425 X draw_colorbox
00:00004432   _dc_maskleft_loop
00:0000444D   _dc_maskright_loop
00:00004470   _dc_start_loop
00:0000448F   _cb_copyloop_main
00:000044B4   _cb_copyloop
00:000044D5   _cp_clip_copy
00:000044F7 X erase_colorbox
00:00004504   _ecb_maskleft_loop
00:00004521   _ecb_maskright_loop
00:00004546   _ecb_start_loop
00:00004565   _ecb_copyloop_main
00:0000458A   _ecb_copyloop
00:000045AB   _ecb_clip_copy
00:000045CD   set_vdpwrite
00:000045EA   set_vdpread
00:00000000   cb_maskleft
00:00000001   cb_maskright
00:00000002   cb_fullbytes
00:00000003 X cb_status
00:00004605   init_font
00:00004614   _fontloop
00:0000007C   FM_WRITE
00:0000007D   FM_DATA
00:00000060   _REL
00:00000061   _SUS
00:00000062   _VOL
00:00000072   _INS
00:00000091   _CMD
00:000000B8 X _SPC
00:000000BF   _EOT
00:000000C0   _WAIT
00:00004700   MACROACTIONLIST
00:0000473B   PROCESS_CMDLIST
00:0000476A   DECODE_CMDLIST
00:000047C5   DRUM_MACRO_LIST
00:00004800   TRACK_Vibrato_sine
00:00004900   TRACK_Vibrato_sine_extended
00:00004980   _Default_Registers
00:000049B4 X _DRUM_Default
00:000049C8   replay_init
00:000049F2   replay_init.z80
00:000049FE   _replay_init_loop
00:00004A07   replay_pause
00:00004A34   _r_pause_loop
00:00004A39 X replay_resume
00:00004A3F X replay_fade_out
00:00004A4A   replay_set_FM_balance
00:00004A57   replay_set_PSG_balance
00:00004A64   _getnewbalancebase
00:00004A6D X replay_equalization_on
00:00004A7F   replay_equalization_off
00:00004A89   replay_loadsong
00:00004B3B   replay_play_no
00:00004B45   replay_play
00:00004B52 X replay_play.NTSC
00:00004B5C   replay_play.PAL
00:00004B6F   replay_play.skip_EOT
00:00004B86 X decode_data
00:00004B8C X decode_data.decode1
00:00004BAD   decode_data.decode2
00:00004BCE   decode_data.setupcheck
00:00004BD5 X decode_data.decode3_26chan
00:00004BF6   decode_data.decode3_end
00:00004BFF   decode_data.decode3_35chan
00:00004C26   decode_data.decode4
00:00004C47   decode_data.decode5
00:00004C68   decode_data.decode6
00:00004C89   decode_data.decode7
00:00004CAA   decode_data.decode8
00:00004CCB   decode_data.decode_end
00:00004CDD   decode_data.skip
00:00004CE3   decode_data.loop
00:00004CE8   process_data
00:00004D12   process_data.skipa
00:00004D29   process_data.skipb
00:00004D36 X _rdd_3psg_5fm
00:00004D47   _rdd_3psg_5fm.skipc
00:00004D6C   _rdd_2psg_6fm
00:00004D97   _rdd_2psg_6fm.skipc
00:00004DA4   _rdd_cont
00:00004DB5   _rdd_cont.skipd
00:00004DD3   _rdd_cont.skipe
00:00004DF1   _rdd_cont.skipf
00:00004E0F   _rdd_cont.skipg
00:00004E2D   _rdd_cont.skiph
00:00004E3D X process_fade
00:00004E59   process_fade.cont_fadeing
00:00004E5F   process_fade.no_new_step
00:00004E73   process_fade.calc_vol_FM
00:00004E7E   process_fade.no_limit_FM
00:00004E8F   process_fade.calc_vol
00:00004E95   process_fade.no_carry
00:00004E9A   _replay_check_patternend
00:00004EBB   _replay_check_patternend.restart
00:00004EBB   _replay_check_patternend.no_restart
00:00004EC7   decode_data_chan
00:00004ED8   _rdn2
00:00004EDD   _rdv2
00:00004EE2   _rdi2
00:00004EEA   _rdn
00:00004EF2   _rdi
00:00004EFA   _rdv
00:00004F02   _rdc
00:00004F03   _rdc_noinc
00:00004F0C   _rd_delay
00:00004F15   _rd_eot
00:00004F1C   _replay_decode_delay
00:00004F28   _replay_decode_trigger_porttone_check
00:00004F40   _replay_decode_note
00:00004F4C   _replay_decode_release
00:00004F57   _replay_decode_sustain
00:00004F60   _replay_decode_ins
00:00004F75   _replay_decode_ins.skip
00:00004F90   _replay_decode_ins.skip_soft
00:00004F9F   _replay_decode_ins.skip_ins
00:00004FA4   _replay_decode_vol
00:00004FB9   _replaydecode_cmd
00:00004FC6   decode_cmd0_arpeggio
00:00004FD9   decode_cmd1_port_up
00:00004FE4   decode_cmd2_port_down
00:00004FEF   decode_cmd3_port_tone
00:0000500C   decode_cmd3_port_tone_new_note
00:0000501D   decode_cmd3_port_tone_new_note.skip
00:00005035   decode_cmd3_port_tone_new_note.skip2
00:0000504A   decode_cmd3_port_tone_new_note.skip3
00:0000504F   decode_cmd8_tremolo
00:0000504F   decode_cmd4_vibrato
00:00005060   decode_cmd4_vibrato.depth
00:00005072   decode_cmd4_vibrato.skip_extended
00:00005078   decode_cmd4_vibrato.end
00:0000507D   decode_cmd5_vibrato_port_tone
00:00005094   decode_cmd6_vibrato_vol
00:00005094   decode_cmd7_vol_slide
00:000050A4   decode_cmd9_note_cut
00:000050AF   decode_cmd10_note_delay
00:000050CD   decode_cmd11_command_end
00:000050D2   decode_cmd12_drum
00:000050E9   decode_cmd13_arp_speed
00:000050EF   decode_cmd14_fine_up
00:000050F9   decode_cmd15_fine_down
00:00005103   decode_cmd16_notelink
00:0000510A   decode_cmd17_track_detune
00:0000511F   decode_cmd17_track_detune.pos
00:00005129   decode_cmd18_trigger
00:0000512F   decode_cmd19_speed
00:0000513F   decode_cmd20_tone_panning
00:0000513F   decode_cmd21_noise_panning
00:00005142   decode_cmd22_brightness
00:0000515A   process_data_chan
00:00005173   process_commandEND
00:00005173   process_note
00:00005178 X process_triggerNote
00:000051A2   process_noNoteTrigger
00:000051A5   process_instrument
00:000051B5   process_macro
00:000051BA   macro_mixer
00:000051C7   macro_tone_add
00:000051DA   macro_noise_base
00:000051E5 X macro_noise_sub
00:000051E5   macro_noise_add
00:000051F3   macro_noise_vol
00:000051F7   macro_voice
00:000051FF   macro_envelope_shape
00:00005204   macro_envelope
00:0000520C   macro_loop
00:00005215   macro_stop
00:0000521C   macro_volume_same
00:00005222   macro_vol_base
00:0000522A   macro_vol_add
00:00005236   macro_vol_add.nolimit
00:0000523C   macro_vol_sub
00:00005247   macro_vol_sub.nolimit
00:0000524A   _macro_set_volume
00:00005257   _macro_set_volume.skip2
00:00005261   _macro_set_volume.skip
00:00005265   _macro_end
00:0000527B   _macro_end.skip
00:00005296 X _wrap
00:000052A2 X _wrap_highcheck
00:000052C9   _wrap_lowcheck
00:000052EC   _wrap_skip
00:000052F9   _wrap_PSG
00:000052FB   process_noNoteActive
00:00005300 X process_noNoteActive.fm
00:00005306   process_noNoteActive.psg
00:0000530B   process_cmd0_arpeggio
00:00005328   process_cmd0_arpeggio.skip
00:0000532F   process_cmd0_arpeggio.nextNote
00:00005351   process_cmd0_arpeggio.skip1
00:0000536B   process_cmd0_arpeggio.zero
00:00005371   process_cmd0_arpeggio.skip2
00:0000537C   process_cmd1_port_up
00:0000538E   process_cmd2_port_down
00:000053A0   process_cmd3_port_tone
00:000053AE X process_cmd3_add
00:000053B6   process_cmd3_add.skip
00:000053C1   process_cmd3_sub
00:000053D6   process_cmd3_stop
00:000053E1   process_cmd8_tremolo
00:000053FF   process_cmd4_vibrato_extended
00:00005404   process_cmd4_vibrato
00:00005406   process_cmd4_vibrato.ext
00:00005416 X process_cmd4_vibrato.neg
00:0000542C   process_cmd4_vibrato.pos
00:00005431   process_cmd4_vibrato.zero
00:0000543B   process_cmd5_vibrato_port_tone
00:00005441   process_cmd6_vibrato_vol
00:00005447   process_cmd7_vol_slide
00:0000544D   process_cmdasub
00:00005462 X process_cmda_dec
00:0000546A   process_cmda_inc
00:00005473   process_cmd9_note_cut
00:00005480   process_cmd10_note_delay
00:00005493   process_drum
00:0000549E   process_drum.yes
00:000054A2   _process_drum_loop
00:000054AB   _drum_stop
00:000054B3   _drum_vol_bd
00:000054BB   _drum_vol_sn
00:000054CA   _drum_vol_hh
00:000054D9   _drum_vol_snhh
00:000054E1   _drum_vol_cy
00:000054F0   _drum_vol_tt
00:000054FF   _drum_vol_cytt
00:00005507   _drum_note_bd
00:00005514   _drum_tone_bd
00:00005521   _drum_note_snhh
00:0000552E   _drum_tone_snhh
00:0000553E   _drum_note_cytt
00:0000554B   _drum_tone_cytt
00:0000555B   _drum_percussion
00:00005560 X _drum_percussion.end
00:00005565   replay_route
00:00005587   _ptAY_noEnv
00:000055AF   _ptAY_loop
00:000055C2 X route_FM
00:000055CF   route_FM.skipcount
00:000055E1   route_FM.voiceloop
00:000055EC   route_FM.skipvoicereg
00:000055F0   route_FM.channels
00:000055F6   route_FM.channel_loop
00:000055FC X route_FM.keyOnSwitch
00:00005619   route_FM.noKeyOnSwitch
00:00005645   route_FM.continue
00:00005648 X route_FM.rythm
00:0000565F X route_FM.notActive
00:00005666   _writeFM
00:0000566E   _writeFM_cont
00:00005672   _writeFM_data
00:0000567C   _writeFM_R800
00:00005682   _writeFM_R800.loop_long
00:00005692   _writeFM_R800.loop_short
00:0000569B   _writeFM_R800_cont
00:000056A5   _writeFM_data_R800
00:000056AA   _writeFM_data_R800.loop_long
00:000056F6   _VOLUME_TABLE_PSG
00:00005836   _VOLUME_TABLE_FM
00:00005936   TRACK_ToneTable_PSG
00:000059F6   TRACK_ToneTable_FM
00:00005AB6 X ttsfx_init
00:00005AC4   ttsfx_psg_balance
00:00005ACB   _getsfxbalancebase
00:00005AD9   ttsfx_start
00:00005AEF X ttsfx_start.skip
00:00005AF7   ttsfx_play
00:00005AFE X ttsfx_play.NTSC
00:00005B04   ttsfx_play.PAL
00:00005B12   ttsfx_play.psg_play
00:00005B1B X _ayCHECK_NT
00:00005B28   _ayCHECK_NN
00:00005B34 X _ayNOISE
00:00005B37   _aySETPOINTER
00:00005B4B   _ayMUSNOISE
00:00005B4E   _ayNOISESET
00:00005B5E   _ayVOLUME
00:00005B72   _ayVOLUME.skip
00:00005B78   _ayMIXER
00:00005B7D   _ayEND
00:00005B86   demo_song
00:00005B9E X demo_song.restart
00:00005BC2   demo_song.customvoice_start
00:00005BCA   demo_song.drummacro_start
00:00005BCA   demo_song.instrument_start
00:00005BCC   demo_song.instrument_00
00:00005BD4   demo_song.track_000
00:00005BD9   demo_song.track_001
00:00005C02   demo_song.track_002
00:00005C2B   demo_song.track_003
00:00005C30   demo_song.track_004
00:00005C36   demo_song.track_005
00:00005C3C   demo_song.track_006
00:00005C42   demo_song.track_007
00:00005C48   demo_song.track_008
00:00005C4D   demo_song.track_009
00:00005C4F   demo_song.track_014
00:00005C55   TEXT_Title
00:00005C7A   TEXT_Step
00:00005C80   TEXT_Header_Data
00:00005C98   TEXT_Register_Header
00:00005CBB   TEXT_Register_Drum
00:00005CCC   TEXT_Legend_Data
00:00005D06   font_data
00:00006506   sfxbank
00:FFFFFFEF   TRACK_Instrument
00:FFFFFFF0   TRACK_Command
00:FFFFFFF1   TRACK_MacroPointer
00:FFFFFFF3   TRACK_MacroStart
00:FFFFFFF5 X TRACK_MacroRestart
00:FFFFFFF6   TRACK_Note
00:FFFFFFF7   TRACK_Volume
00:FFFFFFF8   TRACK_Voice
00:FFFFFFF9   TRACK_Flags
00:FFFFFFFA X TRACK_empty
00:FFFFFFFB   TRACK_ToneAdd
00:FFFFFFFD   TRACK_VolumeAdd
00:FFFFFFFE   TRACK_Noise
00:FFFFFFFF   TRACK_cmd_VolumeAdd
00:00000000   TRACK_cmd_ToneSlideAdd
00:00000002   TRACK_cmd_ToneAdd
00:00000004   TRACK_cmd_detune
00:00000006   TRACK_cmd_0
00:00000007   TRACK_cmd_1
00:00000008   TRACK_cmd_2
00:00000009   TRACK_cmd_3
00:0000000A   TRACK_cmd_4_depth
00:0000000C   TRACK_cmd_4_step
00:0000000D   TRACK_cmd_NoteAdd
00:0000000E   TRACK_cmd_A
00:0000000F X TRACK_cmd_B
00:00000010   TRACK_cmd_E
00:00000011   TRACK_Timer
00:00000012   TRACK_Step
00:00000013   TRACK_Delay
00:00000014   TRACK_prevDelay
00:00000015 X TRACK_cmd_A_add
00:00000027   TRACK_REC_SIZE
00:00000000   B_TRGNOT
00:00000001   B_ACTNOT
00:00000002 X B_TRGENV
00:00000003   B_TRGCMD
00:00000004   B_KEYON
00:00000005   B_SUST
00:00000006 X B_TRGVOI
00:00000007   B_PSGFM
00:0000C000   _SP_Storage
00:0000C002   replay_trigger
00:0000C003   replay_mainPSGvol
00:0000C005   replay_mainFMvol
00:0000C007   replay_voicebase
00:0000C009   replay_drumbase
00:0000C00B   replay_insbase
00:0000C00D   TRACK_pointer1
00:0000C00F   TRACK_pointer2
00:0000C011   TRACK_pointer3
00:0000C013   TRACK_pointer4
00:0000C015   TRACK_pointer5
00:0000C017   TRACK_pointer6
00:0000C019   TRACK_pointer7
00:0000C01B   TRACK_pointer8
00:0000C01D   replay_orderpointer
00:0000C01F   replay_speed
00:0000C020   replay_speed_subtimer
00:0000C021   replay_speed_timer
00:0000C022   replay_mode
00:0000C023   replay_chan_setup
00:0000C024   replay_arp_speed
00:0000C025   replay_fade
00:0000C026   replay_fade_timer
00:0000C027   replay_fade_vol
00:0000C028   replay_previous_note
00:0000C029   replay_mainvol
00:0000C02B   replay_softvoice
00:0000C02C   FM_softvoice_req
00:0000C02D   replay_tonetable
00:0000C02F   r800
00:0000C030   count_low
00:0000C031   equalization_freq
00:0000C032   equalization_cnt
00:0000C033   TRACK_Chan1
00:0000C05A   TRACK_Chan2
00:0000C081   TRACK_Chan3
00:0000C0A8   TRACK_Chan4
00:0000C0CF   TRACK_Chan5
00:0000C0F6   TRACK_Chan6
00:0000C11D   TRACK_Chan7
00:0000C144   TRACK_Chan8
00:0000C16B X REGISTERS_START
00:0000C16B   PSG_registers
00:0000C16B   PSG_regToneA
00:0000C16D   PSG_regToneB
00:0000C16F   PSG_regToneC
00:0000C171   PSG_regNOISE
00:0000C172   PSG_regMIXER
00:0000C173   PSG_regVOLA
00:0000C174   PSG_regVOLB
00:0000C175   PSG_regVOLC
00:0000C176 X PSG_regEnvL
00:0000C177 X PSG_regEnvH
00:0000C178   PSG_regEnvShape
00:0000C179   replay_noise
00:0000C17A   FM_Voicereg
00:0000C18A   FM_Registers
00:0000C18A   FM_regToneA
00:0000C18C X FM_regToneAb
00:0000C18E   FM_regVOLA
00:0000C18F X FM_regVOLAb
00:0000C190   FM_regToneB
00:0000C192 X FM_regToneBb
00:0000C194   FM_regVOLB
00:0000C195 X FM_regVOLBb
00:0000C196   FM_regToneC
00:0000C198 X FM_regToneCb
00:0000C19A   FM_regVOLC
00:0000C19B X FM_regVOLCb
00:0000C19C   FM_regToneD
00:0000C19E X FM_regToneDb
00:0000C1A0   FM_regVOLD
00:0000C1A1 X FM_regVOLDb
00:0000C1A2   FM_regToneE
00:0000C1A4 X FM_regToneEb
00:0000C1A6   FM_regVOLE
00:0000C1A7 X FM_regVOLEb
00:0000C1A8   FM_regToneF
00:0000C1AA X FM_regToneFb
00:0000C1AC   FM_regVOLF
00:0000C1AD X FM_regVOLFb
00:0000C1AE   DRUM_regToneBD
00:0000C1B0 X DRUM_regToneBDb
00:0000C1B2   DRUM_regVolBD
00:0000C1B3 X DRUM_regVolBDb
00:0000C1B4   DRUM_regToneSH
00:0000C1B6 X DRUM_regToneSHb
00:0000C1B8   DRUM_regVolSH
00:0000C1B9 X DRUM_regVolSHb
00:0000C1BA   DRUM_regToneCT
00:0000C1BC X DRUM_regToneCTb
00:0000C1BE   DRUM_regVolCT
00:0000C1BF X DRUM_regVolCTb
00:0000C1C0   FM_DRUM
00:0000C1C1 X FM_DRUMb
00:0000C1C2   FM_DRUM_ACTIVE
00:0000C1C3   FM_DRUM_MACRO
00:0000C1C5   FM_regMIXER
00:0000C1C6 X REGISTERS_END
00:0000C1C6   debug_pointer1
00:0000C1C8 X debug_pointer2
00:0000C1CA   debug_pnt
00:0000C44A   TEXT_Chan
00:0000C472   sfx
00:0000C473   sfx_PRIORITY
00:0000C474   sfx_STATUS
00:0000C475   sfx_PSG_POINTER
00:0000C477   sfx_PSG_TONE
00:0000C479   sfx_PSG_NOISE
00:0000C47A   sfx_PSG_BALANCE
00:0000C47C   pattern


 Output: main.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00008000  Used: 00002738

   Address   Length Align   Label
   00004000   10040         initmain
   00006738   22728       <empty>
