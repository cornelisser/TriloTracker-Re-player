Sjasm Z80 Assembler v0.42b8 - www.xl2s.tk             [2020.09.01 - 17:21:59]

main.asm
Errors: 0

       1   00:0000                      	defpage	0,0x4000, 0x8000		; page 0 contains main code + far call routines
       2   00:0000                      
       3   00:0000                      ; -----------------------------
       4   00:0000                      ; TT-replayer example
       5   00:0000                      ; 
       6   00:0000                      ; This example plays compiled PSG+SCC songs
       7   00:0000                      ; ------------------------------
       8   00:0000                      
       9   00:0000                      ;	include	".\code\variables.asm"
      10   00:0000                      
      11   00:0000  (00)                	page 0
      12   00:4000                      	code page 0
      13   00:4000                      	
      14   00:4000                      	org	04000h
      15   00:4000  41 42               	db	041h,042h
      16   00:4002  10 40               	dw	initmain
      17   00:4004                      	dz 	'TTDEMO'
      17   00:4004  54 54 44 45 4D 4F 00 
      18   00:400B  00 (5)              	ds	5
      19   00:4010                      		
      20   00:4010                      initmain:
      21   00:4010                      
      22   00:4010                      ;	ei
      23   00:4010                      ;	halt
      24   00:4010  F3                  	di
      25   00:4011                      		
      26   00:4011                      ;; set pages and subslot
      27   00:4011                      ;;
      28   00:4011  CD 38 01            	call    0x138
      29   00:4014  0F                  	rrca
      30   00:4015  0F                  	rrca
      31   00:4016  E6 03               	and     0x03
      32   00:4018  4F                  	ld      c,a
      33   00:4019  06 00               	ld      b,0
      34   00:401B  21 C1 FC            	ld      hl,0xfcc1
      35   00:401E  09                  	add     hl,bc
      36   00:401F  B6                  	or      (hl)
      37   00:4020  47                  	ld      b,a
      38   00:4021  23                  	inc     hl
      39   00:4022  23                  	inc     hl
      40   00:4023  23                  	inc     hl
      41   00:4024  23                  	inc     hl
      42   00:4025  7E                  	ld      a,(hl)
      43   00:4026  E6 0C               	and     0x0c
      44   00:4028  B0                  	or      b
      45   00:4029                          
      46   00:4029  26 80               	ld      h,0x80
      47   00:402B  CD 24 00            	call    0x24        
      48   00:402E                      	
      49   00:402E                      	;clear RAM (first kb only)
      50   00:402E  01 00 04            	ld	bc,1024
      51   00:4031  21 00 C0            	ld	hl,0xc000
      52   00:4034  11 01 C0            	ld	de,0xc001
      53   00:4037                      
      54   00:4037  36 00               	ld	(hl),0
      55   00:4039  ED B0               	ldir	
      56   00:403B                      
      57   00:403B                      	;--- place replayer on hook
      58   00:403B  3E C3               	ld	a,0xc3
      59   00:403D  21 D2 40            	ld	hl,isr
      60   00:4040  32 9A FD            	ld	(0xFD9A),a
      61   00:4043  22 9B FD            	ld	(0xFD9B),hl	
      62   00:4046                      	
      63   00:4046                      	
      64   00:4046                      	;--- Set speed equalization
      65   00:4046  3A E8 FF            	ld	a,($FFE8)	; get mirror of VDP reg# 9
      66   00:4049  E6 02               	and	2
      67   00:404B  CA 50 40            	jp	z,99f
      68   00:404E  3E FF               	ld	a,-1
      69   00:4050                      99:
      70   00:4050  3C                  	inc	a			; 1 = 60hz
      71   00:4051  32 2F C0            	ld	(equalization_freq),a
      72   00:4054  32 30 C0            	ld	(equalization_cnt),a
      73   00:4057                      	
      74   00:4057                      	;--- Init screen
      75   00:4057  CD A4 42            	call 	init_vdp
      76   00:405A  FB                  	ei
      77   00:405B  76                  	halt
      78   00:405C  F3                  	di
      79   00:405D  CD EA 45            	call	init_font		; set the new font
      80   00:4060                      	
      81   00:4060                      	;--- initialise replayer
      82   00:4060  CD 02 46            	call	replay_init
      83   00:4063                      ;	call	ttsfx_init
      84   00:4063  3E 01               	ld	a,1
      85   00:4065  32 2F C0            	ld	(equalization_freq),a
      86   00:4068  32 30 C0            	ld	(equalization_cnt),a	
      87   00:406B                      	;--- initialise demo song
      88   00:406B  21 B3 54            	ld	hl,demo_song
      89   00:406E  CD 73 46            	call	replay_loadsong
      90   00:4071                      	
      91   00:4071                      	;--- initialise sfx pointers
      92   00:4071                      	
      93   00:4071                      	
      94   00:4071  CD 0C 41            	call	clear_debug
      95   00:4074                      	
      96   00:4074  FB                  	ei
      97   00:4075                      	
      98   00:4075  CD F0 42            	call	clear_screen
      99   00:4078  21 56 01            	ld	hl,80*4+22
     100   00:407B  11 18 55            	ld	de,TEXT_Title
     101   00:407E  CD 37 43            	call	draw_label
     102   00:4081  21 04 02            	ld	hl,80*6+36
     103   00:4084  11 3D 55            	ld	de,TEXT_Step
     104   00:4087  CD 37 43            	call	draw_label
     105   00:408A  21 84 02            	ld	hl,80*8+4
     106   00:408D  11 43 55            	ld	de,TEXT_Header_Data
     107   00:4090  CD 37 43            	call	draw_label	
     108   00:4093                      	
     109   00:4093  21 A6 02            	ld	hl,80*8+38
     110   00:4096  11 5B 55            	ld	de,TEXT_Register_Header
     111   00:4099  CD 37 43            	call	draw_label		
     112   00:409C                      
     113   00:409C  21 48 04            	ld 	hl,80*13+56
     114   00:409F  11 7E 55            	ld	de,TEXT_Register_Drum
     115   00:40A2  CD 37 43            	call	draw_label	
     116   00:40A5                      
     117   00:40A5  21 A4 05            	ld 	hl,80*18+4
     118   00:40A8  11 8F 55            	ld	de,TEXT_Legend_Data
     119   00:40AB  CD 37 43            	call	draw_label	
     120   00:40AE                      
     121   00:40AE                      
     122   00:40AE                      	
     123   00:40AE  AF                  	xor	a
     124   00:40AF  32 CF C4            	ld	(pattern),a
     125   00:40B2                      
     126   00:40B2                      ;	call	replay_pause
     127   00:40B2                      ;	ld	bc,$0001
     128   00:40B2                      ;	call	ttsfx_start
     129   00:40B2                      	
     130   00:40B2                      infinite:
     131   00:40B2  76                  	halt	
     132   00:40B3                      ;	call	register_debug
     133   00:40B3                      
     134   00:40B3                      	
     135   00:40B3                      ;	ld	a,$f0 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     136   00:40B3                      ;	out	(0x99),a
     137   00:40B3                      ;	ld	a,7+128
     138   00:40B3                      ;	out	(0x99),a	
     139   00:40B3                      
     140   00:40B3                      
     141   00:40B3                      	
     142   00:40B3                      ;	ld	a,$f3 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     143   00:40B3                      ;	out	(0x99),a
     144   00:40B3                      ;	ld	a,7+128
     145   00:40B3                      ;	out	(0x99),a
     146   00:40B3                      	
     147   00:40B3                      ;	ld	a,$f0
     148   00:40B3                      ;	out	(0x99),a
     149   00:40B3                      ;	ld	a,7+128
     150   00:40B3                      ;	out	(0x99),a	
     151   00:40B3                      	;--- display debug info
     152   00:40B3  CD 1A 41            	call	debuginfo	
     153   00:40B6  CD 90 41            	call	register_debug
     154   00:40B9  CD 65 41            	call	step_debug
     155   00:40BC                      	
     156   00:40BC                      	
     157   00:40BC                      	
     158   00:40BC                      	
     159   00:40BC                      	;---- Test for space
     160   00:40BC  AF                  	xor	a
     161   00:40BD  CD D8 00            	call	$00D8
     162   00:40C0  A7                  	and	a
     163   00:40C1  CA B2 40            	jp	z,infinite
     164   00:40C4                      
     165   00:40C4                      ;	call	replay_pause
     166   00:40C4  01 01 00            	ld	bc,$0001
     167   00:40C7                      ;	call	ttsfx_start
     168   00:40C7                      ;	ld	a,0
     169   00:40C7                      ;	call	replay_set_SCC_balance
     170   00:40C7                      ;	ld	de,-2
     171   00:40C7                      ;	call	replay_transpose	
     172   00:40C7                      ;	ld	a,32
     173   00:40C7                      ;	call	replay_fade_out
     174   00:40C7                      ;	call	replay_pause
     175   00:40C7                      	; wait_key_release
     176   00:40C7                      99:	
     177   00:40C7  AF                  	xor	a
     178   00:40C8  CD D8 00            	call	$00D8
     179   00:40CB  A7                  	and	a
     180   00:40CC  C2 C7 40            	jp	nz,99b
     181   00:40CF                      	
     182   00:40CF  C3 B2 40            	jp	infinite
     183   00:40D2                      
     184   00:40D2                      	
     185   00:40D2                      	
     186   00:40D2                      isr:
     187   00:40D2  DB 99               	in	a,(0x99)
     188   00:40D4  CD F6 40            	call	write_debug
     189   00:40D7  3E FC               	ld	a,$fc ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     190   00:40D9  D3 99               	out	(0x99),a
     191   00:40DB  3E 87               	ld	a,7+128
     192   00:40DD  D3 99               	out	(0x99),a	
     193   00:40DF  CD 66 4F            	call	replay_route		; first outout data
     194   00:40E2  3E F4               	ld	a,$f4 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     195   00:40E4  D3 99               	out	(0x99),a
     196   00:40E6  3E 87               	ld	a,7+128
     197   00:40E8  D3 99               	out	(0x99),a		
     198   00:40EA  CD 21 47            	call	replay_play			; calculate next output
     199   00:40ED  3E F0               	ld	a,$f0 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     200   00:40EF  D3 99               	out	(0x99),a
     201   00:40F1  3E 87               	ld	a,7+128
     202   00:40F3  D3 99               	out	(0x99),a	
     203   00:40F5                      ;	call	ttsfx_play
     204   00:40F5                      
     205   00:40F5                      
     206   00:40F5                      
     207   00:40F5  C9                  	ret
     208   00:40F6                      	
     209   00:40F6                      write_debug:
     210   00:40F6  21 D0 22            	ld 	hl,_PNT+(80*9)
     211   00:40F9  CD B2 45            	call	set_vdpwrite	
     212   00:40FC                      
     213   00:40FC  21 27 C2            	ld 	hl,debug_pnt
     214   00:40FF  3E 08               	ld	a,8
     215   00:4101  0E 98               	ld	c,$98
     216   00:4103                      _wd_loop:
     217   00:4103  06 50               	ld	b,80
     218   00:4105  ED B3               	otir
     219   00:4107                      	
     220   00:4107  3D                  	dec	a
     221   00:4108  C2 03 41            	jp	nz,_wd_loop
     222   00:410B                      
     223   00:410B  C9                  	ret
     224   00:410C                      	
     225   00:410C                      clear_debug:
     226   00:410C  21 27 C2            	ld	hl,debug_pnt
     227   00:410F  11 28 C2            	ld	de,debug_pnt+1
     228   00:4112  36 20               	ld	(hl),32
     229   00:4114  01 7F 02            	ld	bc,(8*80)-1
     230   00:4117  ED B0               	ldir
     231   00:4119  C9                  	ret
     232   00:411A                      
     233   00:411A                      debuginfo:
     234   00:411A                      ;	ld	bc,40
     235   00:411A                      ;	call	clear_TEXT
     236   00:411A                      	
     237   00:411A  06 08               	ld	b,8
     238   00:411C  DD 21 43 C0         	ld	ix,TRACK_Chan1+17
     239   00:4120  11 2B C2            	ld	de,debug_pnt+4
     240   00:4123                      .loop	
     241   00:4123  C5                  	push	bc
     242   00:4124  D5                  	push	de
     243   00:4125                      	
     244   00:4125  3E 09               	ld	a,9
     245   00:4127  90                  	sub	b
     246   00:4128  CD A5 43            	call	draw_decimal
     247   00:412B  13                  	inc	de
     248   00:412C  DD 7E F6            	ld	a,(ix+TRACK_Note)
     249   00:412F  CD 95 43            	call	draw_hex2
     250   00:4132  13                  	inc 	de
     251   00:4133  DD 7E EF            	ld	a,(ix+TRACK_Instrument)
     252   00:4136  CD 95 43            	call	draw_hex2
     253   00:4139  13                  	inc 	de
     254   00:413A  DD 7E F8            	ld	a,(ix+TRACK_Voice)
     255   00:413D  CD 95 43            	call	draw_hex2
     256   00:4140  13                  	inc 	de	
     257   00:4141  DD 7E F7            	ld	a,(ix+TRACK_Volume)
     258   00:4144  CD 95 43            	call	draw_hex2
     259   00:4147  13                  	inc 	de
     260   00:4148  DD 7E F0            	ld	a,(ix+TRACK_Command)
     261   00:414B  CD 95 43            	call	draw_hex2	
     262   00:414E  13                  	inc 	de
     263   00:414F                      
     264   00:414F  EB                  	ex	de,hl
     265   00:4150  DD 46 F9            	ld	b,(ix+TRACK_Flags)
     266   00:4153  CD 39 42            	call 	debug_flags
     267   00:4156                      
     268   00:4156                      
     269   00:4156                      	; next line
     270   00:4156  E1                  	pop	hl
     271   00:4157  11 50 00            	ld	de,80
     272   00:415A  19                  	add	hl,de
     273   00:415B  EB                  	ex	de,hl
     274   00:415C                      	
     275   00:415C                      
     276   00:415C                      	;--- Next track
     277   00:415C  01 26 00            	ld	bc,TRACK_REC_SIZE
     278   00:415F  DD 09               	add	ix,bc
     279   00:4161                      	
     280   00:4161  C1                  	pop	bc
     281   00:4162  10 BF               	djnz	.loop
     282   00:4164  C9                  	ret
     283   00:4165                      
     284   00:4165                      step_debug:
     285   00:4165  01 07 00            	ld	bc,7
     286   00:4168  CD 2D 42            	call	clear_TEXT
     287   00:416B  2A 1D C0            	ld	hl,(replay_orderpointer)
     288   00:416E  11 BA 54            	ld	de,demo_song+7
     289   00:4171  AF                  	xor 	a
     290   00:4172  ED 52               	sbc	hl,de
     291   00:4174  29                  	add	hl,hl		;X2
     292   00:4175  29                  	add	hl,hl		;X4	
     293   00:4176  29                  	add	hl,hl		;X8
     294   00:4177  29                  	add	hl,hl		;X16
     295   00:4178  7C                  	ld	a,h
     296   00:4179  3D                  	dec	a
     297   00:417A  21 23 C2            	ld	hl,debug_pointer1
     298   00:417D  77                  	ld	(hl),a
     299   00:417E  11 A7 C4            	ld	de,TEXT_Chan
     300   00:4181  CD BC 43            	call	draw_decimal3
     301   00:4184                      	
     302   00:4184  21 09 02            	ld	hl,80*6+41
     303   00:4187  11 A7 C4            	ld	de,TEXT_Chan
     304   00:418A  06 03               	ld	b,3
     305   00:418C  CD 4B 43            	call	draw_label_fast
     306   00:418F  C9                  	ret
     307   00:4190                      	
     308   00:4190                      
     309   00:4190                      register_debug:
     310   00:4190                      ;	ld	bc,7
     311   00:4190                      ;	call	clear_TEXT
     312   00:4190  21 F1 41            	ld	hl,REG_list
     313   00:4193                      	
     314   00:4193                      	;	DRAW PSG Tone vol	
     315   00:4193  FD 2E 03            	ld	iyl,3
     316   00:4196  11 56 C2            	ld 	de,debug_pnt+47
     317   00:4199                      ;	ld	(debug_pointer1),bc
     318   00:4199  CD CA 41            	call	register_debug_loop
     319   00:419C                      
     320   00:419C                      	;	DRAW PSG Noise and mixer	
     321   00:419C  FD 2E 01            	ld	iyl,1
     322   00:419F  11 5F C2            	ld 	de,debug_pnt+56
     323   00:41A2                      ;	ld	(debug_pointer1),bc
     324   00:41A2  CD CA 41            	call	register_debug_loop	
     325   00:41A5                      	
     326   00:41A5                      	;	DRAW PSG Envelop + shape
     327   00:41A5  FD 2E 01            	ld	iyl,1
     328   00:41A8  11 68 C2            	ld 	de,debug_pnt+65
     329   00:41AB                      ;	ld	(debug_pointer1),bc
     330   00:41AB  CD CA 41            	call	register_debug_loop		
     331   00:41AE                      
     332   00:41AE                      	;	DRAW FM Tone Vol	
     333   00:41AE  FD 2E 06            	ld	iyl,6
     334   00:41B1  11 ED C2            	ld 	de,debug_pnt+(80*2)+38
     335   00:41B4                      ;	ld	(debug_pointer1),bc
     336   00:41B4  CD CA 41            	call	register_debug_loop
     337   00:41B7                      	
     338   00:41B7                      	
     339   00:41B7                      	;	DRAW FM Drum macro + percusion
     340   00:41B7  FD 2E 01            	ld	iyl,1
     341   00:41BA  11 EF C3            	ld 	de,debug_pnt+(80*5)+56
     342   00:41BD                      ;	ld	(debug_pointer1),bc
     343   00:41BD  CD CA 41            	call	register_debug_loop
     344   00:41C0                      
     345   00:41C0                      	;	DRAW FM Drum tone + vol
     346   00:41C0  FD 2E 03            	ld	iyl,3
     347   00:41C3  11 F8 C3            	ld 	de,debug_pnt+(80*5)+65
     348   00:41C6                      ;	ld	(debug_pointer1),bc
     349   00:41C6  CD CA 41            	call	register_debug_loop
     350   00:41C9                      	
     351   00:41C9  C9                  	ret
     352   00:41CA                      
     353   00:41CA                      register_debug_loop:
     354   00:41CA  D5                  	push 	de
     355   00:41CB                      ;	ld	de,TEXT_Chan
     356   00:41CB  4E                  	ld	c,(hl)
     357   00:41CC  23                  	inc	hl
     358   00:41CD  46                  	ld	b,(hl)
     359   00:41CE  23                  	inc	hl
     360   00:41CF                      	
     361   00:41CF  03                  	inc	bc
     362   00:41D0  0A                  	ld	a,(bc)
     363   00:41D1  0B                  	dec	bc
     364   00:41D2  CD 95 43            	call	draw_hex2		; tone
     365   00:41D5  0A                  	ld	a,(bc)
     366   00:41D6  CD 95 43            	call	draw_hex2
     367   00:41D9                      	
     368   00:41D9  13                  	inc 	de	
     369   00:41DA                      	
     370   00:41DA  4E                  	ld	c,(hl)
     371   00:41DB  23                  	inc	hl
     372   00:41DC  46                  	ld	b,(hl)
     373   00:41DD  23                  	inc	hl	
     374   00:41DE                      	
     375   00:41DE  0A                  	ld	a,(bc)
     376   00:41DF  CD 95 43            	call	draw_hex2		; vol
     377   00:41E2                      	
     378   00:41E2                      	;-- next line
     379   00:41E2  D1                  	pop 	de
     380   00:41E3  3E 50               	ld	a,80
     381   00:41E5  83                  	add	a,e
     382   00:41E6  5F                  	ld	e,a
     383   00:41E7  D2 EB 41            	jp	nc,99f
     384   00:41EA  14                  	inc	d
     385   00:41EB                      99:	
     386   00:41EB  FD 2D               	dec	iyl
     387   00:41ED  C2 CA 41            	jp	nz,register_debug_loop
     388   00:41F0  C9                  	ret
     389   00:41F1                      
     390   00:41F1                      REG_list:
     391   00:41F1  62 C1 6A C1         	dw	PSG_regToneA,PSG_regVOLA
     392   00:41F5  64 C1 6B C1         	dw	PSG_regToneB,PSG_regVOLB
     393   00:41F9  66 C1 6C C1         	dw	PSG_regToneC,PSG_regVOLC
     394   00:41FD  68 C1 69 C1         	dw	PSG_regNOISE,PSG_regMIXER
     395   00:4201  00 00 00 00         	dw	0,0;PSG_regEnvL,PSG_regEnvShape 	
     396   00:4205  70 C1 7C C1         	dw	FM_regToneA,FM_regVOLA 
     397   00:4209  72 C1 7D C1         	dw	FM_regToneB,FM_regVOLB 
     398   00:420D  74 C1 7E C1         	dw	FM_regToneC,FM_regVOLC 
     399   00:4211  76 C1 7F C1         	dw	FM_regToneD,FM_regVOLD 
     400   00:4215  78 C1 80 C1         	dw	FM_regToneE,FM_regVOLE 
     401   00:4219  7A C1 81 C1         	dw	FM_regToneF,FM_regVOLF 
     402   00:421D  8E C1 82 C1         	dw	FM_DRUM_MACRO,FM_DRUM
     403   00:4221  84 C1 86 C1         	dw	FM_freqreg1,FM_volreg1
     404   00:4225  87 C1 89 C1         	dw	FM_freqreg2,FM_volreg2	
     405   00:4229  8A C1 8C C1         	dw	FM_freqreg3,FM_volreg3	
     406   00:422D                      
     407   00:422D                      
     408   00:422D                      
     409   00:422D                      
     410   00:422D                      ; input BC length to clear
     411   00:422D                      clear_TEXT:
     412   00:422D  0B                  	dec	bc
     413   00:422E  21 A7 C4            	ld	hl,TEXT_Chan
     414   00:4231  11 A8 C4            	ld	de,TEXT_Chan+1
     415   00:4234  36 20               	ld	(hl),' '
     416   00:4236  ED B0               	ldir
     417   00:4238  C9                  	ret
     418   00:4239                      
     419   00:4239                      debug_flags:
     420   00:4239  CB 78               	bit	7,b
     421   00:423B  CA 43 42            	jp	z,1f
     422   00:423E  36 46               	ld	(hl),'F'
     423   00:4240  C3 45 42            	jp	2f
     424   00:4243                      1:
     425   00:4243  36 50               	ld	(hl),'P'
     426   00:4245                      	
     427   00:4245                      2:
     428   00:4245  23                  	inc	hl
     429   00:4246  CB 70               	bit	6,b
     430   00:4248  CA 50 42            	jp	z,1f
     431   00:424B  36 56               	ld	(hl),'V'
     432   00:424D  C3 52 42            	jp	2f
     433   00:4250                      1:
     434   00:4250  36 20               	ld	(hl),' '
     435   00:4252                      	
     436   00:4252                      2:	
     437   00:4252  23                  	inc	hl
     438   00:4253  CB 68               	bit	5,b
     439   00:4255  CA 5D 42            	jp	z,1f
     440   00:4258  36 53               	ld	(hl),'S'
     441   00:425A  C3 5F 42            	jp	2f
     442   00:425D                      1:
     443   00:425D  36 20               	ld	(hl),' '
     444   00:425F                      	
     445   00:425F                      2:	
     446   00:425F  23                  	inc	hl
     447   00:4260  CB 60               	bit	4,b
     448   00:4262  C2 6A 42            	jp	nz,1f
     449   00:4265  36 4B               	ld	(hl),'K'
     450   00:4267  C3 6C 42            	jp	2f
     451   00:426A                      1:
     452   00:426A  36 20               	ld	(hl),' '
     453   00:426C                      	
     454   00:426C                      2:	
     455   00:426C  23                  	inc	hl
     456   00:426D  CB 58               	bit	3,b
     457   00:426F  CA 77 42            	jp	z,1f
     458   00:4272  36 43               	ld	(hl),'C'
     459   00:4274  C3 79 42            	jp	2f
     460   00:4277                      1:
     461   00:4277  36 20               	ld	(hl),' '
     462   00:4279                      	
     463   00:4279                      2:	
     464   00:4279  23                  	inc	hl
     465   00:427A  CB 50               	bit	2,b
     466   00:427C  CA 84 42            	jp	z,1f
     467   00:427F  36 45               	ld	(hl),'E'
     468   00:4281  C3 86 42            	jp	2f
     469   00:4284                      1:
     470   00:4284  36 20               	ld	(hl),' '
     471   00:4286                      	
     472   00:4286                      2:	
     473   00:4286  23                  	inc	hl	
     474   00:4287  CB 48               	bit	1,b
     475   00:4289  CA 91 42            	jp	z,1f
     476   00:428C  36 41               	ld	(hl),'A'
     477   00:428E  C3 93 42            	jp	2f
     478   00:4291                      1:
     479   00:4291  36 20               	ld	(hl),' '
     480   00:4293                      	
     481   00:4293                      2:	
     482   00:4293  23                  	inc	hl	
     483   00:4294  CB 40               	bit	0,b
     484   00:4296  CA 9E 42            	jp	z,1f
     485   00:4299  36 4E               	ld	(hl),'N'
     486   00:429B  C3 A0 42            	jp	2f
     487   00:429E                      1:
     488   00:429E  36 20               	ld	(hl),' '
     489   00:42A0                      	
     490   00:42A0                      2:	
     491   00:42A0  23                  	inc	hl		
     492   00:42A1  EB                  	ex	de,hl
     493   00:42A2                      
     494   00:42A2  13                  	inc 	de
     495   00:42A3  C9                  	ret
     496   00:42A4                      
     497   00:42A4                      
     498   00:42A4                      
     499   00:42A4                      
     500   00:42A4                      	
     501   00:42A4                      	; --- init_vdp
     502   00:42A4                      	; 
     503   00:42A4                      	; Initial init of the vdp
     504   00:42A4                      init_vdp:
     505   00:42A4                      
     506   00:42A4  3E 04               	ld	a,00000100b ; Reg#0 [ 0 ][DG ][IE2][IE1][M5 ][M4 ][M3 ][ 0 ]
     507   00:42A6  D3 99               	out	(0x99),a
     508   00:42A8  3E 80               	ld	a,0+128
     509   00:42AA  D3 99               	out	(0x99),a
     510   00:42AC                      
     511   00:42AC  3E 70               	ld	a,01110000b ; Reg#1 [ 0 ][BL ][IE0][M1 ][M2 ][ 0 ][SIZ][MAG]
     512   00:42AE                      
     513   00:42AE  D3 99               	out	(0x99),a
     514   00:42B0  3E 81               	ld	a,1+128
     515   00:42B2  D3 99               	out	(0x99),a	
     516   00:42B4                      
     517   00:42B4  3E 0B               	ld	a,00001011b ; REG#2[ 0 ][A16][A15][A14][A13][A12][ 1 ][ 1 ]  - Pattern layout table
     518   00:42B6                      
     519   00:42B6  D3 99               	out	(0x99),a
     520   00:42B8  3E 82               	ld	a,2+128
     521   00:42BA  D3 99               	out	(0x99),a	
     522   00:42BC                      
     523   00:42BC  3E AF               	ld	a,10101111b ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     524   00:42BE                      
     525   00:42BE  D3 99               	out	(0x99),a
     526   00:42C0  3E 83               	ld	a,3+128
     527   00:42C2  D3 99               	out	(0x99),a	
     528   00:42C4                      	
     529   00:42C4  3E 12               	ld	a,00010010b ; Reg#4 [ 0 ][ 0 ][A16][A15][A14][A13][A12][A11]  - Pattern generator table
     530   00:42C6                      
     531   00:42C6  D3 99               	out	(0x99),a
     532   00:42C8  3E 84               	ld	a,4+128
     533   00:42CA  D3 99               	out	(0x99),a	
     534   00:42CC                      	
     535   00:42CC  3A E8 FF            	ld	a,($FFE8)
     536   00:42CF  F6 80               	or	10000000b ; Reg#9 [LN ][ 0 ][S1 ][S0 ][IL ][EO ][NT ][DC ]
     537   00:42D1  D3 99               	out	(0x99),a
     538   00:42D3  3E 89               	ld	a,9+128
     539   00:42D5  D3 99               	out	(0x99),a	
     540   00:42D7                      
     541   00:42D7                      
     542   00:42D7  3E F0               	ld	a,$f0
     543   00:42D9  D3 99               	out	(0x99),a
     544   00:42DB  3E 87               	ld	a,7+128
     545   00:42DD  D3 99               	out	(0x99),a
     546   00:42DF  3E E1               	ld	a,$e1
     547   00:42E1  D3 99               	out	(0x99),a
     548   00:42E3  3E 8C               	ld	a,12+128
     549   00:42E5  D3 99               	out	(0x99),a
     550   00:42E7  3E F0               	ld	a,0xF0	;reg#13
     551   00:42E9  D3 99               	out	(0x99),a
     552   00:42EB  3E 8D               	ld	a,13+128
     553   00:42ED  D3 99               	out	(0x99),a		
     554   00:42EF                      	
     555   00:42EF                      	
     556   00:42EF                      
     557   00:42EF  C9                  	ret		
     558   00:42F0                      	include	".\screen.asm"
       1.  00:42F0  (00:0082)           _UPLEFT			equ	130
       2.  00:42F0  (00:0081)           _HORIZONTAL			equ	129
       3.  00:42F0  (00:0083)           _UPRIGHT			equ	131
       4.  00:42F0  (00:0080)           _VERTICAL			equ	128
       5.  00:42F0  (00:0087)           _VERTICAL_SMALL		equ	135
       6.  00:42F0  (00:0086)           _VERTICAL_DOUBLE		equ	134
       7.  00:42F0  (00:008B)           _VERTICAL_STEP		equ	139
       8.  00:42F0  (00:00B0)           _ARROWLEFT			equ	176
       9.  00:42F0  (00:00B1)           _ARROWRIGHT			equ	177
      10.  00:42F0  (00:00AE)           _LOOPSIGN			equ	174
      11.  00:42F0  (00:00F1)           _TONE_OFF_SIGN		equ	241
      12.  00:42F0  (00:00F2)           _TONE_ON_SIGN		equ	242
      13.  00:42F0  (00:00F3)           _NOISE_OFF_SIGN		equ	243
      14.  00:42F0  (00:00F4)           _NOISE_ON_SIGN		equ	244
      15.  00:42F0  (00:00F5)           _ENV_OFF_SIGN		equ	245
      16.  00:42F0  (00:00F6)           _ENV_ON_SIGN		equ	246
      17.  00:42F0  (00:00BF)           _CMD_SIGN			equ	6*32-1
      18.  00:42F0  (00:00FE)           _CURSOR			equ	254
      19.  00:42F0                      
      20.  00:42F0  (00:00FC)           MOUSE_CHR			equ 	252
      21.  00:42F0                      
      22.  00:42F0  (00:2000)           _PNT		equ	0x2000		; pnt
      23.  00:42F0  (00:2A00)           _CNT		equ	0x2a00		; cnt
      24.  00:42F0                      
      25.  00:42F0                      
      26.  00:42F0                      
      27.  00:42F0                      ; ==========================================================	
      28.  00:42F0                      	; --- clear_window
      29.  00:42F0                      	; 
      30.  00:42F0                      	; Clears the current screen (pnt and cnt)
      31.  00:42F0                      	;
      32.  00:42F0                      ; ==========================================================	
      33.  00:42F0                      clear_screen:
      34.  00:42F0  21 00 20            	ld 	hl,_PNT
      35.  00:42F3  CD B2 45            	call	set_vdpwrite	
      36.  00:42F6                      
      37.  00:42F6  1E 1B               	ld	e,27
      38.  00:42F8  3E 20               	ld	a,32
      39.  00:42FA  F3                  	di
      40.  00:42FB                      0:	;-- main loop
      41.  00:42FB  01 98 50            	ld	bc,0x5098
      42.  00:42FE                      1:	;--- sub loop
      43.  00:42FE  ED 79               		out	(c),a
      44.  00:4300  10 FC               		djnz 	1b
      45.  00:4302                      	; -- end sub loop
      46.  00:4302  1D                  	dec	e
      47.  00:4303  20 F6               	jr	nz,0b
      48.  00:4305                      	; -- end main loop	
      49.  00:4305                      
      50.  00:4305                      clear_cnt:
      51.  00:4305  21 00 2A            	ld 	hl,_CNT
      52.  00:4308  CD B2 45            	call	set_vdpwrite	
      53.  00:430B                      	
      54.  00:430B  1E 1B               	ld	e,27
      55.  00:430D  3E 00               	ld	a,0
      56.  00:430F  F3                  	di
      57.  00:4310                      0:	;-- main loop
      58.  00:4310  01 98 0A            	ld	bc,0x0a98
      59.  00:4313                      1:	;--- sub loop
      60.  00:4313  ED 79               		out	(c),a
      61.  00:4315  10 FC               		djnz 	1b
      62.  00:4317                      	; -- end sub loop
      63.  00:4317  1D                  	dec	e
      64.  00:4318  20 F6               	jr	nz,0b
      65.  00:431A                      	; -- end main loop	
      66.  00:431A                      	
      67.  00:431A  FB                  	ei
      68.  00:431B  C9                  	ret
      69.  00:431C                      
      70.  00:431C                      ; ==========================================================	
      71.  00:431C                      	; --- clear_files
      72.  00:431C                      	; 
      73.  00:431C                      	; Clears the files area in the file dialog 
      74.  00:431C                      	;
      75.  00:431C                      ; ==========================================================	
      76.  00:431C                      clear_files:
      77.  00:431C                      
      78.  00:431C  06 14               	ld	b,20
      79.  00:431E  21 E0 21            	ld	hl,_PNT+(80*6)
      80.  00:4321                      
      81.  00:4321  C5                  0:	push	bc
      82.  00:4322  E5                  	push	hl
      83.  00:4323  CD B2 45            	call	set_vdpwrite	
      84.  00:4326                      
      85.  00:4326  06 38               	ld	b,56
      86.  00:4328  3E 20               	ld	a,32
      87.  00:432A                      
      88.  00:432A                      1:	;--- sub loop
      89.  00:432A  D3 98               		out	(0x98),a
      90.  00:432C  10 FC               		djnz 	1b
      91.  00:432E                      	; -- end sub loop
      92.  00:432E  E1                  	pop	hl
      93.  00:432F  01 50 00            	ld	bc,80
      94.  00:4332  09                  	add	hl,bc
      95.  00:4333                      	
      96.  00:4333  C1                  	pop	bc
      97.  00:4334  10 EB               	djnz	0b
      98.  00:4336                      
      99.  00:4336  C9                  	ret	
     100.  00:4337                      
     101.  00:4337                      
     102.  00:4337                      
     103.  00:4337                      
     104.  00:4337                      ; ==========================================================	
     105.  00:4337                      	; --- draw_label
     106.  00:4337                      	; 
     107.  00:4337                      	; Draw box 
     108.  00:4337                      	; HL = position in PNT (relative)
     109.  00:4337                      	; DE = pointer to the label text
     110.  00:4337                      ; ==========================================================
     111.  00:4337                      draw_label:
     112.  00:4337  F3                  	di
     113.  00:4338                      ;	ld	a,$f3 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     114.  00:4338                      ;	out	(0x99),a
     115.  00:4338                      ;	ld	a,7+128
     116.  00:4338                      ;	out	(0x99),a	
     117.  00:4338                      
     118.  00:4338                      	
     119.  00:4338  01 00 20            	ld 	bc,_PNT
     120.  00:433B  09                  	add	hl,bc
     121.  00:433C  CD B2 45            	call	set_vdpwrite			
     122.  00:433F                      	
     123.  00:433F                      draw_label_loop:
     124.  00:433F  1A                  	ld	a,(de)
     125.  00:4340  FE 00               	cp	0
     126.  00:4342  28 05               	jr.	z,draw_label_end	
     127.  00:4344  D3 98               	out	(0x98),a
     128.  00:4346                      	
     129.  00:4346  13                  	inc	de
     130.  00:4347  18 F6               	jr.	draw_label_loop
     131.  00:4349                      	
     132.  00:4349                      draw_label_end:
     133.  00:4349                      ;	ld	a,$f0 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     134.  00:4349                      ;	out	(0x99),a
     135.  00:4349                      ;	ld	a,7+128
     136.  00:4349                      ;	out	(0x99),a	
     137.  00:4349  FB                  	ei
     138.  00:434A  C9                  	ret
     139.  00:434B                      
     140.  00:434B                      ; ==========================================================	
     141.  00:434B                      	; --- draw_label_fast
     142.  00:434B                      	; 
     143.  00:434B                      	; Draw box 
     144.  00:434B                      	; HL = position in PNT (relative)
     145.  00:434B                      	; DE = pointer to the label text
     146.  00:434B                      	; BC = number of bytes to copy to vram
     147.  00:434B                      ; ==========================================================
     148.  00:434B                      draw_label_fast:
     149.  00:434B  F3                  	di
     150.  00:434C                      ;	ld	a,$f5 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     151.  00:434C                      ;	out	(0x99),a
     152.  00:434C                      ;	ld	a,7+128
     153.  00:434C                      ;	out	(0x99),a		
     154.  00:434C                      	
     155.  00:434C  C5                  	push	bc
     156.  00:434D  01 00 20            	ld 	bc,_PNT
     157.  00:4350  09                  	add	hl,bc	
     158.  00:4351  CD B2 45            	call	set_vdpwrite	
     159.  00:4354                      			
     160.  00:4354  EB                  	ex	de,hl
     161.  00:4355  C1                  	pop	bc
     162.  00:4356  0E 98               	ld	c,0x98
     163.  00:4358                      	
     164.  00:4358  ED B3               	otir
     165.  00:435A                      		
     166.  00:435A                      		
     167.  00:435A                      ;	ld	a,$f0 ; Reg#3 [A13][A12][A11][A10][A09][ 1 ][ 1 ][ 1 ]  - Color table  [HIGH]
     168.  00:435A                      ;	out	(0x99),a
     169.  00:435A                      ;	ld	a,7+128
     170.  00:435A                      ;	out	(0x99),a			
     171.  00:435A  FB                  	ei
     172.  00:435B                      	
     173.  00:435B  C9                  	ret
     174.  00:435C                      
     175.  00:435C                      ; ==========================================================	
     176.  00:435C                      	; --- draw_fake_hex_sp
     177.  00:435C                      	; 
     178.  00:435C                      	; Prints the value at an address as 1 digit decimal value 
     179.  00:435C                      	; But value 0 is printed as '.'
     180.  00:435C                      	; Values can be larger than F
     181.  00:435C                      	; A = the value
     182.  00:435C                      	; DE = position (relative) to put the value in PNT
     183.  00:435C                      	; 
     184.  00:435C                      ; ==========================================================
     185.  00:435C                      draw_fake_hex_sp:
     186.  00:435C  A7                  	and	a
     187.  00:435D  20 05               	jr.	nz,0f
     188.  00:435F  3E 2E               	ld	a,'.'
     189.  00:4361  12                  	ld	(de),a
     190.  00:4362  13                  	inc	de
     191.  00:4363  C9                  	ret
     192.  00:4364                      0:	
     193.  00:4364  FE 0A               	cp	10
     194.  00:4366  30 05               	jr.	nc,1f
     195.  00:4368  C6 30               	add	48
     196.  00:436A  12                  	ld	(de),a
     197.  00:436B  13                  	inc	de
     198.  00:436C  C9                  	ret
     199.  00:436D                      1:
     200.  00:436D  C6 37               	add 	55
     201.  00:436F  12                  	ld	(de),a
     202.  00:4370  13                  	inc	de	
     203.  00:4371  C9                  	ret
     204.  00:4372                      	
     205.  00:4372                      ; ==========================================================	
     206.  00:4372                      	; --- draw_fake_hex_sp_small
     207.  00:4372                      	; 
     208.  00:4372                      	; Prints the value at an address as 1 digit decimal value 
     209.  00:4372                      	; But value 0 is printed as '.'
     210.  00:4372                      	; Values can be larger than F
     211.  00:4372                      	; A = the value
     212.  00:4372                      	; DE = position (relative) to put the value in PNT
     213.  00:4372                      	; 
     214.  00:4372                      ; ==========================================================
     215.  00:4372                      draw_fake_hex_sp_small:
     216.  00:4372  A7                  	and	a
     217.  00:4373  20 05               	jr.	nz,0f
     218.  00:4375  3E 2E               	ld	a,'.'
     219.  00:4377  12                  	ld	(de),a
     220.  00:4378  13                  	inc	de
     221.  00:4379  C9                  	ret
     222.  00:437A                      0:	
     223.  00:437A  12                  	ld	(de),a
     224.  00:437B  13                  	inc	de	
     225.  00:437C  C9                  	ret
     226.  00:437D                      	
     227.  00:437D                      	
     228.  00:437D                      	
     229.  00:437D                      ; ==========================================================	
     230.  00:437D                      	; --- draw_hex_sp
     231.  00:437D                      	; 
     232.  00:437D                      	; Prints the value at an address as 1 digit decimal value 
     233.  00:437D                      	; But value 0 is printed as '.'
     234.  00:437D                      	; A = the value
     235.  00:437D                      	; DE = position (relative) to put the value in PNT
     236.  00:437D                      	; 
     237.  00:437D                      ; ==========================================================
     238.  00:437D                      ;draw_hex_sp:
     239.  00:437D                      ;	and	a
     240.  00:437D                      ;	jr.	nz,draw_hex
     241.  00:437D                      ;	ld	a,"."
     242.  00:437D                      ;	ld	(de),a
     243.  00:437D                      ;	inc	de
     244.  00:437D                      ;	ret
     245.  00:437D                      
     246.  00:437D                      ; ==========================================================	
     247.  00:437D                      	; --- draw_hex_sp_small
     248.  00:437D                      	; 
     249.  00:437D                      	; Prints the value at an address as 1 digit decimal value 
     250.  00:437D                      	; But value 0 is printed as '.'
     251.  00:437D                      	; A = the value
     252.  00:437D                      	; DE = position (relative) to put the value in PNT
     253.  00:437D                      	; 
     254.  00:437D                      ; ==========================================================
     255.  00:437D                      draw_hex_sp_small:
     256.  00:437D  A7                  	and	a
     257.  00:437E  20 10               	jr.	nz,draw_hex_small
     258.  00:4380  3E 2E               	ld	a,"."
     259.  00:4382  12                  	ld	(de),a
     260.  00:4383  13                  	inc	de
     261.  00:4384  C9                  	ret
     262.  00:4385                      
     263.  00:4385                      ; ==========================================================	
     264.  00:4385                      	; --- draw_hex2_cmd
     265.  00:4385                      	; 
     266.  00:4385                      	; Prints the value at an address as 2 digit decimal value 
     267.  00:4385                      	; A =  the value
     268.  00:4385                      	; DE = position (relative) to put the value in PNT
     269.  00:4385                      	; 
     270.  00:4385                      	; Changes: AF
     271.  00:4385                      ; ==========================================================
     272.  00:4385                      ;draw_hex2_cmd:
     273.  00:4385                      ;	push	af
     274.  00:4385                      ;	and	0xf0
     275.  00:4385                      ;	rrca
     276.  00:4385                      ;	rrca
     277.  00:4385                      ;	rrca
     278.  00:4385                      ;	rrca	
     279.  00:4385                      ;	call	draw_hex_small
     280.  00:4385                      ;	pop	af
     281.  00:4385                      ;	call	draw_hex_small
     282.  00:4385                      ;	ret
     283.  00:4385                      
     284.  00:4385                      
     285.  00:4385                      ; ==========================================================	
     286.  00:4385                      	; --- draw_hex
     287.  00:4385                      	; 
     288.  00:4385                      	; Prints the value at an address as 1 digit decimal value 
     289.  00:4385                      	; A = the value
     290.  00:4385                      	; DE = position (relative) to put the value in PNT
     291.  00:4385                      	; 
     292.  00:4385                      ; ==========================================================
     293.  00:4385                      draw_hex:
     294.  00:4385  E6 0F               	and	0x0f
     295.  00:4387                      draw_fakehex:	
     296.  00:4387  C6 90               	add	a,0x90
     297.  00:4389  27                  	daa
     298.  00:438A  CE 40               	adc	a,0x40
     299.  00:438C  27                  	daa
     300.  00:438D  12                  	ld	(de),a
     301.  00:438E  13                  	inc	de
     302.  00:438F  C9                  	ret
     303.  00:4390                      	
     304.  00:4390                      	
     305.  00:4390                      ; ==========================================================	
     306.  00:4390                      	; --- draw_hex_small
     307.  00:4390                      	; 
     308.  00:4390                      	; Prints the value at an address as 1 digit decimal value 
     309.  00:4390                      	; A = the value
     310.  00:4390                      	; DE = position (relative) to put the value in PNT
     311.  00:4390                      	; 
     312.  00:4390                      ; ==========================================================
     313.  00:4390                      draw_hex_small:
     314.  00:4390  E6 0F               	and	0x0f
     315.  00:4392  12                  	ld	(de),a
     316.  00:4393  13                  	inc	de
     317.  00:4394  C9                  	ret	
     318.  00:4395                      	
     319.  00:4395                      	
     320.  00:4395                      ; ==========================================================	
     321.  00:4395                      	; --- draw_hex2
     322.  00:4395                      	; 
     323.  00:4395                      	; Prints the value at an address as 2 digit decimal value 
     324.  00:4395                      	; A =  the value
     325.  00:4395                      	; DE = position (relative) to put the value in PNT
     326.  00:4395                      	; 
     327.  00:4395                      	; Changes: AF
     328.  00:4395                      ; ==========================================================
     329.  00:4395                      draw_hex2:
     330.  00:4395  F5                  	push	af
     331.  00:4396  E6 F0               	and	0xf0
     332.  00:4398  0F                  	rrca
     333.  00:4399  0F                  	rrca
     334.  00:439A  0F                  	rrca
     335.  00:439B  0F                  	rrca	
     336.  00:439C  CD 85 43            	call	draw_hex
     337.  00:439F  F1                  	pop	af
     338.  00:43A0  CD 85 43            	call	draw_hex
     339.  00:43A3  C9                  	ret
     340.  00:43A4                      	
     341.  00:43A4                      	
     342.  00:43A4                      	
     343.  00:43A4                      	
     344.  00:43A4                      
     345.  00:43A4                      ; ==========================================================	
     346.  00:43A4                      ; --- conv_decimal
     347.  00:43A4                      ; 
     348.  00:43A4                      ; converts the value at HL into a 2 digit decimal at DE 
     349.  00:43A4                      ; HL = position of the value
     350.  00:43A4                      ; DE = postion  to put the 2 digit value value 
     351.  00:43A4                      ; 
     352.  00:43A4                      ; ==========================================================	
     353.  00:43A4                      
     354.  00:43A4                      conv_decimal:
     355.  00:43A4                      
     356.  00:43A4  7E                  	ld	a,(hl)
     357.  00:43A5                      draw_decimal:
     358.  00:43A5  EB                  	ex	de,hl
     359.  00:43A6                      ;	ld	hl,_dd_tmpstring
     360.  00:43A6                      	
     361.  00:43A6  06 F6               1:	ld	b,-10
     362.  00:43A8  CD B2 43            	call	_dd_Num1
     363.  00:43AB  06 FF               	ld	b,-1
     364.  00:43AD  CD B2 43            	call	_dd_Num1
     365.  00:43B0                      
     366.  00:43B0  EB                  	ex	de,hl
     367.  00:43B1                      ;	ld	hl,_dd_tmpstring
     368.  00:43B1                      
     369.  00:43B1  C9                  	ret	
     370.  00:43B2                      _dd_Num1:	
     371.  00:43B2  0E 2F               	ld	c,"0"-1
     372.  00:43B4                      _dd_Num2:	
     373.  00:43B4  0C                  	inc	c
     374.  00:43B5  80                  	add	a,b
     375.  00:43B6  38 FC               	jr	c,_dd_Num2
     376.  00:43B8  98                  	sbc	a,b
     377.  00:43B9  71                  	ld	(hl),c
     378.  00:43BA  23                  	inc	hl
     379.  00:43BB  C9                  	ret 
     380.  00:43BC                      
     381.  00:43BC                      draw_decimal3:
     382.  00:43BC  EB                  	ex	de,hl
     383.  00:43BD  06 9C               	ld	b,-100
     384.  00:43BF  CD B2 43            	call	_dd_Num1
     385.  00:43C2  18 E2               	jr.	1b
     386.  00:43C4                      	
     387.  00:43C4                      	
     388.  00:43C4                      ;_dd_tmpstring:		
     389.  00:43C4                      ;	db	"XX",0		; temporary + delimiter
     390.  00:43C4                      
     391.  00:43C4                      ; ==========================================================	
     392.  00:43C4                      	; --- draw_box
     393.  00:43C4                      	; 
     394.  00:43C4                      	; Draw box 
     395.  00:43C4                      	; HL = position in PNT (relative)
     396.  00:43C4                      	; D = width
     397.  00:43C4                      	; E = height
     398.  00:43C4                      ; ==========================================================
     399.  00:43C4                      draw_box:
     400.  00:43C4  F3                  	di
     401.  00:43C5                      
     402.  00:43C5  01 00 20            	ld 	bc,_PNT
     403.  00:43C8  09                  	add	hl,bc
     404.  00:43C9  CD B2 45            	call	set_vdpwrite		
     405.  00:43CC                      	
     406.  00:43CC  3E 82               	ld	a,_UPLEFT		; upperleft corner
     407.  00:43CE                      
     408.  00:43CE                      draw_box_loop1:
     409.  00:43CE  42                  	ld	b,d	
     410.  00:43CF                      draw_box_loop0:
     411.  00:43CF                      
     412.  00:43CF                      	; change on last pos
     413.  00:43CF  05                  	dec	b
     414.  00:43D0  20 10               	jr.	nz,1f
     415.  00:43D2  FE 81               	cp	_HORIZONTAL
     416.  00:43D4  20 04               	jr.	nz,0f
     417.  00:43D6  3E 83               	ld	a,_UPRIGHT
     418.  00:43D8  18 08               	jr.	1f
     419.  00:43DA                      0:
     420.  00:43DA  FE 20               	cp	32
     421.  00:43DC  20 04               	jr.	nz,1f
     422.  00:43DE  3E 80               	ld	a,_VERTICAL
     423.  00:43E0  18 00               	jr.	1f
     424.  00:43E2                      	
     425.  00:43E2                      1:
     426.  00:43E2  04                  	inc	b	
     427.  00:43E3                      
     428.  00:43E3                      
     429.  00:43E3                      
     430.  00:43E3  D3 98               	out	(0x98),a
     431.  00:43E5                      	
     432.  00:43E5                      	; changed on pos > 1
     433.  00:43E5  FE 82               	cp	_UPLEFT		; if is upleftcorner thern	
     434.  00:43E7  20 04               	jr.	nz,0f
     435.  00:43E9  3E 81               	ld	a,_HORIZONTAL
     436.  00:43EB  18 08               	jr.	1f
     437.  00:43ED                      0:	
     438.  00:43ED  FE 80               	cp	_VERTICAL	; if is vertical line then space
     439.  00:43EF  20 04               	jr.	nz,0f
     440.  00:43F1  3E 20               	ld	a,32			; space	
     441.  00:43F3  18 00               	jr.	1f
     442.  00:43F5                      0:
     443.  00:43F5                      1:
     444.  00:43F5                      
     445.  00:43F5  10 D8               	djnz	draw_box_loop0
     446.  00:43F7                      
     447.  00:43F7                      
     448.  00:43F7                      	;loop lines
     449.  00:43F7  1D                  	dec	e
     450.  00:43F8  28 0E               	jr.	z,draw_box_end
     451.  00:43FA                      	
     452.  00:43FA  01 50 00            	ld	bc,80
     453.  00:43FD  09                  	add	hl,bc
     454.  00:43FE  01 00 20            	ld 	bc,_PNT
     455.  00:4401  CD B2 45            	call	set_vdpwrite
     456.  00:4404  3E 80               	ld	a,_VERTICAL			
     457.  00:4406  18 C6               	jr.	draw_box_loop1
     458.  00:4408                      
     459.  00:4408                      
     460.  00:4408                      draw_box_end:
     461.  00:4408  FB                  	ei
     462.  00:4409  C9                  	ret
     463.  00:440A                      
     464.  00:440A                      
     465.  00:440A                      
     466.  00:440A                      
     467.  00:440A                      ; ==========================================================	
     468.  00:440A                      	; --- draw_colorbox
     469.  00:440A                      	; 
     470.  00:440A                      	; Draw box 
     471.  00:440A                      	; H = x pos
     472.  00:440A                      	; L = y pos
     473.  00:440A                      	; D = width
     474.  00:440A                      	; E = height
     475.  00:440A                      ; ==========================================================
     476.  00:440A                      draw_colorbox:
     477.  00:440A                      	; --- get maskleft
     478.  00:440A  7C                  	ld	a,h
     479.  00:440B  E6 07               	and	0x07
     480.  00:440D  A7                  	and	a
     481.  00:440E  20 04               	jr.	nz,0f
     482.  00:4410  3E FF               	ld	a,255
     483.  00:4412  18 07               	jr.	1f
     484.  00:4414                      0:	
     485.  00:4414  47                  	ld	b,a
     486.  00:4415  3E FF               	ld	a,255
     487.  00:4417                      	
     488.  00:4417                      _dc_maskleft_loop:
     489.  00:4417  CB 3F               		srl	a
     490.  00:4419  10 FC               		djnz	_dc_maskleft_loop
     491.  00:441B  32 00 00            1:	ld	(cb_maskleft),a
     492.  00:441E                      
     493.  00:441E                      	; --- get maskright (7-(x+(w-1)) & 0x07)	
     494.  00:441E  7A                  	ld	a,d
     495.  00:441F  3D                  	dec	a
     496.  00:4420  84                  	add	h
     497.  00:4421  E6 07               	and	0x07
     498.  00:4423  FE 07               	cp	7
     499.  00:4425  20 04               	jr.	nz,0f
     500.  00:4427  3E 00               	ld	a,0
     501.  00:4429  18 0B               	jr.	1f
     502.  00:442B  47                  0:	ld	b,a
     503.  00:442C  3E 07               	ld	a,7
     504.  00:442E  90                  	sub	b
     505.  00:442F                      
     506.  00:442F                      
     507.  00:442F  47                  	ld	b,a
     508.  00:4430  3E FF               	ld	a,255	
     509.  00:4432                      	
     510.  00:4432                      _dc_maskright_loop:
     511.  00:4432  CB 27               		sla	a
     512.  00:4434  10 FC               		djnz	_dc_maskright_loop
     513.  00:4436  32 01 00            1:	ld	(cb_maskright),a
     514.  00:4439                      	
     515.  00:4439                      	; --- calculate the full cnt bytes to copy
     516.  00:4439  7C                  	ld	a,h
     517.  00:443A  E6 F8               	and	0xf8
     518.  00:443C  47                  	ld	b,a		; store in b the full bytes
     519.  00:443D  7C                  	ld	a,h
     520.  00:443E  82                  	add	d
     521.  00:443F  E6 F8               	and	0xf8
     522.  00:4441  90                  	sub	b
     523.  00:4442  CB 3F CB 3F CB 3F   [3]	srl	a		; divide by 8
     524.  00:4448  3D                  	dec	a		; 255 is begin and end in same byte
     525.  00:4449                      				; 0 is no full bytes to copy
     526.  00:4449                      				; >0 full bytes to copy inbetween masks
     527.  00:4449  32 02 00            	ld	(cb_fullbytes),a	
     528.  00:444C                      
     529.  00:444C                      	; --- Calculate start address
     530.  00:444C  4C                  	ld	c,h		; x in c
     531.  00:444D  45                  	ld	b,l		; y in b
     532.  00:444E  21 00 2A            	ld	hl,_CNT
     533.  00:4451  78                  	ld	a,b
     534.  00:4452  A7                  	and	a
     535.  00:4453  28 09               	jr.	z,0f
     536.  00:4455                      
     537.  00:4455                      _dc_start_loop:
     538.  00:4455  7D                  	ld	a,l
     539.  00:4456  C6 0A               	add	10		; every line adds 10 bytes to the addres
     540.  00:4458  6F                  	ld	l,a
     541.  00:4459  30 01               	jr.	nc,1f
     542.  00:445B  24                  	inc	h
     543.  00:445C                      1:
     544.  00:445C  10 F7               	djnz	_dc_start_loop	
     545.  00:445E                      0:
     546.  00:445E  79                  	ld	a,c		; add the x pos.
     547.  00:445F  E6 F8               	and	0xf8
     548.  00:4461  CB 3F CB 3F CB 3F   [3]	srl	a	
     549.  00:4467  85                  	add	l
     550.  00:4468  6F                  	ld	l,a
     551.  00:4469  30 01               	jr.	nc,1f
     552.  00:446B  24                  	inc	h
     553.  00:446C                      1:
     554.  00:446C                      	; now we have start addres in the cnt in HL
     555.  00:446C  4B                  	ld	c,e	; # lines to plot
     556.  00:446D                      	
     557.  00:446D                      	; --- get way to copy
     558.  00:446D  3A 02 00            	ld	a,(cb_fullbytes)
     559.  00:4470  FE FF               	cp	255
     560.  00:4472  28 46               	jr.	z,_cp_clip_copy
     561.  00:4474                      	
     562.  00:4474                      	; --- 'normal' copy
     563.  00:4474                      _cb_copyloop_main:	
     564.  00:4474  E5                  	push	hl
     565.  00:4475  CD CF 45            	call	set_vdpread
     566.  00:4478  DB 98               	in	a,(0x98)
     567.  00:447A  47                  	ld	b,a
     568.  00:447B  3A 00 00            	ld	a,(cb_maskleft)
     569.  00:447E  B0                  	or	b
     570.  00:447F  47                  	ld	b,a
     571.  00:4480                      	
     572.  00:4480  E1                  	pop	hl
     573.  00:4481  E5                  	push	hl
     574.  00:4482  CD B2 45            	call	set_vdpwrite
     575.  00:4485                      	
     576.  00:4485  78                  	ld	a,b
     577.  00:4486  D3 98               	out	(0x98),a
     578.  00:4488  3A 02 00            	ld	a,(cb_fullbytes)
     579.  00:448B  A7                  	and	a
     580.  00:448C  47                  	ld	b,a
     581.  00:448D  E1                  	pop	hl
     582.  00:448E  E5                  	push	hl
     583.  00:448F  23                  	inc	hl
     584.  00:4490  28 0B               	jr.	z,0f
     585.  00:4492                      
     586.  00:4492  85                  	add	a,l
     587.  00:4493  6F                  	ld	l,a
     588.  00:4494  30 01               	jr.	nc,9f
     589.  00:4496  24                  	inc	h
     590.  00:4497                      9:
     591.  00:4497  3E FF               	ld	a,255
     592.  00:4499                      _cb_copyloop:
     593.  00:4499  D3 98               	out	(0x98),a
     594.  00:449B  10 FC               	djnz	_cb_copyloop
     595.  00:449D                      0:	
     596.  00:449D  54                  	ld	d,h
     597.  00:449E  5D                  	ld	e,l
     598.  00:449F  CD CF 45            	call	set_vdpread
     599.  00:44A2  DB 98               	in	a,(0x98)
     600.  00:44A4  47                  	ld	b,a
     601.  00:44A5  3A 01 00            	ld	a,(cb_maskright)
     602.  00:44A8  B0                  	or	b
     603.  00:44A9  47                  	ld	b,a
     604.  00:44AA                      	
     605.  00:44AA  EB                  	ex	de,hl	
     606.  00:44AB  CD B2 45            	call	set_vdpwrite
     607.  00:44AE  78                  	ld	a,b	
     608.  00:44AF  D3 98               	out	(0x98),a
     609.  00:44B1                      	
     610.  00:44B1  E1                  	pop 	hl
     611.  00:44B2  11 0A 00            	ld	de,10
     612.  00:44B5  19                  	add	hl,de
     613.  00:44B6                      	
     614.  00:44B6  0D                  	dec	c
     615.  00:44B7  20 BB               	jr.	nz,_cb_copyloop_main
     616.  00:44B9                      	
     617.  00:44B9  C9                  	ret
     618.  00:44BA                      	
     619.  00:44BA                      
     620.  00:44BA                      _cp_clip_copy:
     621.  00:44BA  E5                  	push	hl
     622.  00:44BB                      
     623.  00:44BB  3A 00 00            	ld	a,(cb_maskleft)
     624.  00:44BE  47                  	ld	b,a
     625.  00:44BF  3A 01 00            	ld	a,(cb_maskright)
     626.  00:44C2  A0                  	and	b
     627.  00:44C3  47                  	ld	b,a
     628.  00:44C4                      
     629.  00:44C4  CD CF 45            	call	set_vdpread
     630.  00:44C7  DB 98               	in	a,(0x98)
     631.  00:44C9                      
     632.  00:44C9  B0                  	or	b
     633.  00:44CA  47                  	ld	b,a
     634.  00:44CB                      	
     635.  00:44CB  E1                  	pop	hl
     636.  00:44CC  E5                  	push	hl
     637.  00:44CD  CD B2 45            	call	set_vdpwrite
     638.  00:44D0                      	
     639.  00:44D0  78                  	ld	a,b
     640.  00:44D1  D3 98               	out	(0x98),a	
     641.  00:44D3                      
     642.  00:44D3  E1                  	pop 	hl
     643.  00:44D4  11 0A 00            	ld	de,10
     644.  00:44D7  19                  	add	hl,de
     645.  00:44D8                      	
     646.  00:44D8  0D                  	dec	c
     647.  00:44D9  20 DF               	jr.	nz,_cp_clip_copy	
     648.  00:44DB                      	
     649.  00:44DB  C9                  	ret
     650.  00:44DC                      
     651.  00:44DC                      ; ==========================================================	
     652.  00:44DC                      	; --- erase_colorbox
     653.  00:44DC                      	; 
     654.  00:44DC                      	; Draw box 
     655.  00:44DC                      	; H = x pos
     656.  00:44DC                      	; L = y pos
     657.  00:44DC                      	; D = width
     658.  00:44DC                      	; E = height
     659.  00:44DC                      ; ==========================================================
     660.  00:44DC                      erase_colorbox:
     661.  00:44DC                      	; --- get maskleft
     662.  00:44DC  7C                  	ld	a,h
     663.  00:44DD  E6 07               	and	0x07
     664.  00:44DF  A7                  	and	a
     665.  00:44E0  20 04               	jr.	nz,0f
     666.  00:44E2  3E FF               	ld	a,255
     667.  00:44E4  18 07               	jr.	1f
     668.  00:44E6                      0:	
     669.  00:44E6  47                  	ld	b,a
     670.  00:44E7  3E FF               	ld	a,255
     671.  00:44E9                      	
     672.  00:44E9                      _ecb_maskleft_loop:
     673.  00:44E9  CB 3F               		srl	a
     674.  00:44EB  10 FC               		djnz	_ecb_maskleft_loop
     675.  00:44ED                      1:	
     676.  00:44ED  EE FF               	xor	255
     677.  00:44EF  32 00 00            	ld	(cb_maskleft),a
     678.  00:44F2                      
     679.  00:44F2                      	; --- get maskright (7-(x+(w-1)) & 0x07)	
     680.  00:44F2  7A                  	ld	a,d
     681.  00:44F3  3D                  	dec	a
     682.  00:44F4  84                  	add	h
     683.  00:44F5  E6 07               	and	0x07
     684.  00:44F7  FE 07               	cp	7
     685.  00:44F9  20 04               	jr.	nz,0f
     686.  00:44FB  3E 00               	ld	a,0
     687.  00:44FD  18 0B               	jr.	1f
     688.  00:44FF  47                  0:	ld	b,a
     689.  00:4500  3E 07               	ld	a,7
     690.  00:4502  90                  	sub	b
     691.  00:4503                      
     692.  00:4503                      
     693.  00:4503  47                  	ld	b,a
     694.  00:4504  3E FF               	ld	a,255	
     695.  00:4506                      	
     696.  00:4506                      _ecb_maskright_loop:
     697.  00:4506  CB 27               		sla	a
     698.  00:4508  10 FC               		djnz	_ecb_maskright_loop
     699.  00:450A                      1:	
     700.  00:450A  EE FF               	xor	255
     701.  00:450C  32 01 00            	ld	(cb_maskright),a
     702.  00:450F                      	
     703.  00:450F                      	; --- calculate the full cnt bytes to copy
     704.  00:450F  7C                  	ld	a,h
     705.  00:4510  E6 F8               	and	0xf8
     706.  00:4512  47                  	ld	b,a		; store in b the full bytes
     707.  00:4513  7C                  	ld	a,h
     708.  00:4514  82                  	add	d
     709.  00:4515  E6 F8               	and	0xf8
     710.  00:4517  90                  	sub	b
     711.  00:4518  CB 3F CB 3F CB 3F   [3]	srl	a		; divide by 8
     712.  00:451E  3D                  	dec	a		; 255 is begin and end in same byte
     713.  00:451F                      				; 0 is no full bytes to copy
     714.  00:451F                      				; >0 full bytes to copy inbetween masks
     715.  00:451F  32 02 00            	ld	(cb_fullbytes),a	
     716.  00:4522                      
     717.  00:4522                      	; --- Calculate start address
     718.  00:4522  4C                  	ld	c,h		; x in c
     719.  00:4523  45                  	ld	b,l		; y in b
     720.  00:4524  21 00 2A            	ld	hl,_CNT
     721.  00:4527  78                  	ld	a,b
     722.  00:4528  A7                  	and	a
     723.  00:4529  28 09               	jr.	z,0f
     724.  00:452B                      
     725.  00:452B                      _ecb_start_loop:
     726.  00:452B  7D                  	ld	a,l
     727.  00:452C  C6 0A               	add	10		; every line adds 10 bytes to the addres
     728.  00:452E  6F                  	ld	l,a
     729.  00:452F  30 01               	jr.	nc,1f
     730.  00:4531  24                  	inc	h
     731.  00:4532                      1:
     732.  00:4532  10 F7               	djnz	_ecb_start_loop	
     733.  00:4534                      0:
     734.  00:4534  79                  	ld	a,c		; add the x pos.
     735.  00:4535  E6 F8               	and	0xf8
     736.  00:4537  CB 3F CB 3F CB 3F   [3]	srl	a	
     737.  00:453D  85                  	add	l
     738.  00:453E  6F                  	ld	l,a
     739.  00:453F  30 01               	jr.	nc,1f
     740.  00:4541  24                  	inc	h
     741.  00:4542                      1:
     742.  00:4542                      	; now we have start addres in the cnt in HL
     743.  00:4542  4B                  	ld	c,e	; # lines to plot
     744.  00:4543                      	
     745.  00:4543                      	; --- get way to copy
     746.  00:4543  3A 02 00            	ld	a,(cb_fullbytes)
     747.  00:4546  FE FF               	cp	255
     748.  00:4548  28 46               	jr.	z,_ecb_clip_copy
     749.  00:454A                      	
     750.  00:454A                      	; --- 'normal' copy
     751.  00:454A                      _ecb_copyloop_main:	
     752.  00:454A  E5                  	push	hl
     753.  00:454B  CD CF 45            	call	set_vdpread
     754.  00:454E  DB 98               	in	a,(0x98)
     755.  00:4550  47                  	ld	b,a
     756.  00:4551  3A 00 00            	ld	a,(cb_maskleft)
     757.  00:4554  A0                  	and	b
     758.  00:4555  47                  	ld	b,a
     759.  00:4556                      	
     760.  00:4556  E1                  	pop	hl
     761.  00:4557  E5                  	push	hl
     762.  00:4558  CD B2 45            	call	set_vdpwrite
     763.  00:455B                      	
     764.  00:455B  78                  	ld	a,b
     765.  00:455C  D3 98               	out	(0x98),a
     766.  00:455E  3A 02 00            	ld	a,(cb_fullbytes)
     767.  00:4561  A7                  	and	a
     768.  00:4562  47                  	ld	b,a
     769.  00:4563  E1                  	pop	hl
     770.  00:4564  E5                  	push	hl
     771.  00:4565  23                  	inc	hl
     772.  00:4566  28 0B               	jr.	z,0f
     773.  00:4568                      
     774.  00:4568  85                  	add	a,l
     775.  00:4569  6F                  	ld	l,a
     776.  00:456A  30 01               	jr.	nc,9f
     777.  00:456C  24                  	inc	h
     778.  00:456D                      9:
     779.  00:456D  3E 00               	ld	a,0
     780.  00:456F                      _ecb_copyloop:
     781.  00:456F  D3 98               	out	(0x98),a
     782.  00:4571  10 FC               	djnz	_ecb_copyloop
     783.  00:4573                      0:	
     784.  00:4573  54                  	ld	d,h
     785.  00:4574  5D                  	ld	e,l
     786.  00:4575  CD CF 45            	call	set_vdpread
     787.  00:4578  DB 98               	in	a,(0x98)
     788.  00:457A  47                  	ld	b,a
     789.  00:457B  3A 01 00            	ld	a,(cb_maskright)
     790.  00:457E  A0                  	and	b
     791.  00:457F  47                  	ld	b,a
     792.  00:4580                      	
     793.  00:4580  EB                  	ex	de,hl	
     794.  00:4581  CD B2 45            	call	set_vdpwrite
     795.  00:4584  78                  	ld	a,b	
     796.  00:4585  D3 98               	out	(0x98),a
     797.  00:4587                      	
     798.  00:4587  E1                  	pop 	hl
     799.  00:4588  11 0A 00            	ld	de,10
     800.  00:458B  19                  	add	hl,de
     801.  00:458C                      	
     802.  00:458C  0D                  	dec	c
     803.  00:458D  20 BB               	jr.	nz,_ecb_copyloop_main
     804.  00:458F                      	
     805.  00:458F  C9                  	ret
     806.  00:4590                      	
     807.  00:4590                      
     808.  00:4590                      _ecb_clip_copy:
     809.  00:4590  E5                  	push	hl
     810.  00:4591                      
     811.  00:4591  3A 00 00            	ld	a,(cb_maskleft)
     812.  00:4594  47                  	ld	b,a
     813.  00:4595  3A 01 00            	ld	a,(cb_maskright)
     814.  00:4598  B0                  	or	b
     815.  00:4599  47                  	ld	b,a
     816.  00:459A                      
     817.  00:459A  CD CF 45            	call	set_vdpread
     818.  00:459D  DB 98               	in	a,(0x98)
     819.  00:459F                      
     820.  00:459F  A0                  	and	b
     821.  00:45A0  47                  	ld	b,a
     822.  00:45A1                      	
     823.  00:45A1  E1                  	pop	hl
     824.  00:45A2  E5                  	push	hl
     825.  00:45A3  CD B2 45            	call	set_vdpwrite
     826.  00:45A6                      	
     827.  00:45A6  78                  	ld	a,b
     828.  00:45A7  D3 98               	out	(0x98),a	
     829.  00:45A9                      
     830.  00:45A9  E1                  	pop 	hl
     831.  00:45AA  11 0A 00            	ld	de,10
     832.  00:45AD  19                  	add	hl,de
     833.  00:45AE                      	
     834.  00:45AE  0D                  	dec	c
     835.  00:45AF  20 DF               	jr.	nz,_ecb_clip_copy	
     836.  00:45B1                      	
     837.  00:45B1  C9                  	ret
     838.  00:45B2                      
     839.  00:45B2                      	; --- set_vdpwrite
     840.  00:45B2                      	; sets up the vdp address in HL to write to
     841.  00:45B2                      	; enables ISR and changes a
     842.  00:45B2                      
     843.  00:45B2                      set_vdpwrite:
     844.  00:45B2  AF                  	xor	a
     845.  00:45B3  CB 04               	rlc	h
     846.  00:45B5  17                  	rla
     847.  00:45B6  CB 04               	rlc	h
     848.  00:45B8  17                  	rla
     849.  00:45B9  CB 3C               	srl	h
     850.  00:45BB  CB 3C               	srl	h
     851.  00:45BD  F3                  	di
     852.  00:45BE  D3 99               	out	(#99),a
     853.  00:45C0  3E 8E               	ld	a,14+128
     854.  00:45C2  D3 99               	out	(#99),a
     855.  00:45C4  7D                  	ld	a,l
     856.  00:45C5  00                  	nop
     857.  00:45C6  D3 99               	out	(#99),a
     858.  00:45C8  7C                  	ld	a,h
     859.  00:45C9  F6 40               	or	64
     860.  00:45CB  FB                  	ei
     861.  00:45CC  D3 99               	out	(#99),a
     862.  00:45CE  C9                  	ret
     863.  00:45CF                      
     864.  00:45CF                      
     865.  00:45CF                      	; --- set_vdpwrite
     866.  00:45CF                      	; sets up the vdp address in HL to write to
     867.  00:45CF                      	; enables ISR and changes a
     868.  00:45CF                      
     869.  00:45CF                      set_vdpread:
     870.  00:45CF  AF                  	xor	a
     871.  00:45D0  CB 04               	rlc	h
     872.  00:45D2  17                  	rla
     873.  00:45D3  CB 04               	rlc	h
     874.  00:45D5  17                  	rla
     875.  00:45D6  CB 3C               	srl	h
     876.  00:45D8  CB 3C               	srl	h
     877.  00:45DA  F3                  	di
     878.  00:45DB  D3 99               	out	(#99),a
     879.  00:45DD  3E 8E               	ld	a,14+128
     880.  00:45DF  D3 99               	out	(#99),a
     881.  00:45E1  7D                  	ld	a,l
     882.  00:45E2  00                  	nop
     883.  00:45E3  D3 99               	out	(#99),a
     884.  00:45E5  7C                  	ld	a,h
     885.  00:45E6  D3 99               	out	(#99),a
     886.  00:45E8  FB                  	ei
     887.  00:45E9  C9                  	ret
     888.  00:45EA                      
     889.  00:45EA                      
     890.  00:45EA                      ; --- Colorbox function variables
     891.  00:45EA  (00:0000)           cb_maskleft:	#1
     892.  00:45EA  (00:0001)           cb_maskright:	#1
     893.  00:45EA  (00:0002)           cb_fullbytes:	#1
     894.  00:45EA  (00:0003)           cb_status:		#1
     895.  00:45EA                      
     896.  00:45EA                      
     897.  00:45EA                      	; --- init_font
     898.  00:45EA                      	;
     899.  00:45EA                      	; Init the font in the PGT.
     900.  00:45EA                      
     901.  00:45EA                      init_font:
     902.  00:45EA                      
     903.  00:45EA  F3                  	di
     904.  00:45EB                      	; relocate the PGT (old is at 0x1000)
     905.  00:45EB                      	; new is at 0x9000
     906.  00:45EB                      ;	ld	a,00010010b
     907.  00:45EB                      ;	out	(0x99),a
     908.  00:45EB                      ;	ld	a,128+4	
     909.  00:45EB                      ;	out	(0x99),a
     910.  00:45EB                      
     911.  00:45EB  21 00 90            	ld	hl,0x9000
     912.  00:45EE  CD B2 45            	call	set_vdpwrite
     913.  00:45F1                      	
     914.  00:45F1  F3                  	di
     915.  00:45F2  3E 08               	ld a,8		; loop 8 times
     916.  00:45F4  0E 98               	ld c,0x98
     917.  00:45F6                      
     918.  00:45F6  21 C9 55            	ld hl,font_data
     919.  00:45F9                      
     920.  00:45F9                      _fontloop:
     921.  00:45F9  06 FF               		ld b,255		; subloop 255 times
     922.  00:45FB  ED B3               		otir
     923.  00:45FD  3D                  	dec a
     924.  00:45FE  20 F9               	jr. nz,_fontloop
     925.  00:4600                      	
     926.  00:4600  FB                  	ei
     927.  00:4601  C9                  	ret
     559   00:4602                      	include	"..\code\ttreplaySMS.asm"
       1.  00:4602                      ;=================================
       2.  00:4602                      ; TriloTracker Re-player SMS
       3.  00:4602                      ; 
       4.  00:4602                      ; Functions:
       5.  00:4602                      ; 	replay_init
       6.  00:4602                      ;	replay_pause
       7.  00:4602                      ;	replay_fade_out
       8.  00:4602                      ;================================
       9.  00:4602  (00:007C)           FM_WRITE:	equ	0x7c	; port to set fm reg nr.
      10.  00:4602  (00:007D)           FM_DATA:	equ	0x7d	; port to set fm data for reg	
      11.  00:4602                      ;===============================
      12.  00:4602  (00:0060)           _REL:		equ	96	; = release
      13.  00:4602  (00:0061)           _SUS:		equ	97	; = sustain
      14.  00:4602  (00:0062)           _VOL:		equ	98	; = volume 1
      15.  00:4602  (00:0071)           _INS:		equ	113	; = instrument 1
      16.  00:4602  (00:0090)           _CMD:		equ	144	; = effect 0
      17.  00:4602  (00:00B8)           _SPC:		equ	184	; = special commands
      18.  00:4602  (00:00BF)           _EOT:		equ 	191	; = end of track
      19.  00:4602  (00:00C0)           _WAIT:	equ	192	; = wait 1
      20.  00:4602                      
      21.  00:4602                      	
      22.  00:4602                      ;===========================================================
      23.  00:4602                      ; ---	replay_init
      24.  00:4602                      ; Initialize re-player data
      25.  00:4602                      ; Only call this on start-up
      26.  00:4602                      ; Input: none
      27.  00:4602                      ;===========================================================
      28.  00:4602                      replay_init:
      29.  00:4602  3E 07               	ld	a,7
      30.  00:4604  CD 57 46            	call	replay_set_FM_balance
      31.  00:4607  3E 07               	ld	a,7
      32.  00:4609  CD 5E 46            	call	replay_set_PSG_balance
      33.  00:460C                      
      34.  00:460C  AF                  	xor	a
      35.  00:460D  32 22 C0            	ld	(replay_mode),a	
      36.  00:4610  32 30 C0            	ld	(equalization_cnt),a
      37.  00:4613  32 31 C0            	ld	(equalization_flag),a	
      38.  00:4616  32 2F C0            	ld	(equalization_freq),a
      39.  00:4619  3C                  	inc	a
      40.  00:461A  32 23 C0            	ld	(replay_chan_setup),a	
      41.  00:461D                      	
      42.  00:461D  C9                  	ret
      43.  00:461E                      
      44.  00:461E                      ;===========================================================
      45.  00:461E                      ; ---	replay_pause
      46.  00:461E                      ; Stop/Restart music playback
      47.  00:461E                      ; 
      48.  00:461E                      ; Input: none
      49.  00:461E                      ;===========================================================
      50.  00:461E                      replay_pause:
      51.  00:461E  3A 22 C0            	ld	a,(replay_mode)
      52.  00:4621  A7                  	and	a
      53.  00:4622  CA 2B 46            	jp	z,_r_pause_disable
      54.  00:4625                      _r_pause_enable:
      55.  00:4625                      	;-- re-enable music decoding and processing
      56.  00:4625  3E 01               	ld	a,1
      57.  00:4627  32 22 C0            	ld	(replay_mode),a
      58.  00:462A  C9                  	ret
      59.  00:462B                      	
      60.  00:462B                      _r_pause_disable:
      61.  00:462B                      	;-- stop decoding and processing music data
      62.  00:462B  AF                  	xor	a
      63.  00:462C  32 22 C0            	ld	(replay_mode),a	
      64.  00:462F  32 82 C1            	ld	(FM_DRUM),a
      65.  00:4632                      	;--- Silence the SN7 PSG
      66.  00:4632  32 6A C1            	ld	(PSG_regVOLA),a
      67.  00:4635  32 6B C1            	ld	(PSG_regVOLB),a
      68.  00:4638  32 6C C1            	ld	(PSG_regVOLC),a
      69.  00:463B  32 6D C1            	ld	(PSG_regVOLN),a
      70.  00:463E                      	; release key on all FM channels
      71.  00:463E  06 09               	ld	b,9
      72.  00:4640  21 CA 5D            	ld	hl,FM_Registers+1
      73.  00:4643  11 06 00            	ld	de,6
      74.  00:4646  AF                  	xor	a
      75.  00:4647                      _r_pause_loop:
      76.  00:4647  77                  	ld	(hl),a
      77.  00:4648  19                  	add	hl,de
      78.  00:4649  10 FC               	djnz	_r_pause_loop
      79.  00:464B  C9                  	ret	
      80.  00:464C                      	
      81.  00:464C                      
      82.  00:464C                      ;===========================================================
      83.  00:464C                      ; ---	replay_fade_out
      84.  00:464C                      ; Fade out the music. 
      85.  00:464C                      ; Once the sound is silence the replayer is paused.
      86.  00:464C                      ;
      87.  00:464C                      ; in: [A] fade speed (1 - 255)
      88.  00:464C                      ;===========================================================	
      89.  00:464C                      replay_fade_out:
      90.  00:464C  32 25 C0            	ld	(replay_fade),a
      91.  00:464F  32 26 C0            	ld	(replay_fade_timer),a
      92.  00:4652  AF                  	xor	a
      93.  00:4653  32 27 C0            	ld	(replay_fade_vol),a
      94.  00:4656  C9                  	ret
      95.  00:4657                      
      96.  00:4657                      
      97.  00:4657                      	
      98.  00:4657                      ;===========================================================
      99.  00:4657                      ; ---	replay_set_FM_balance
     100.  00:4657                      ; Set the main volume for the SCC chip. This enables for
     101.  00:4657                      ; setting the balance between SCC en PSG as some MSX models 
     102.  00:4657                      ; default balance differs. 
     103.  00:4657                      ;
     104.  00:4657                      ; in: [A] master volume (0-7) 0=halve volume, 7=full volume. 
     105.  00:4657                      ;===========================================================	
     106.  00:4657                      replay_set_FM_balance:
     107.  00:4657  CD 65 46            	call	_getnewbalancebase
     108.  00:465A  22 05 C0            	ld	(replay_mainSCCvol),hl	
     109.  00:465D  C9                  	ret
     110.  00:465E                      	
     111.  00:465E                      ;===========================================================
     112.  00:465E                      ; ---	replay_set_PSG_balance
     113.  00:465E                      ; Set the main volume for the PSG chip. This enables for
     114.  00:465E                      ; setting the balance between SCC en PSG as some MSX models 
     115.  00:465E                      ; default balance differs. 
     116.  00:465E                      ;
     117.  00:465E                      ; in: [A] master volume (0-7) 0=halve volume, 7=full volume. 
     118.  00:465E                      ;===========================================================	
     119.  00:465E                      replay_set_PSG_balance:
     120.  00:465E  CD 65 46            	call	_getnewbalancebase
     121.  00:4661  22 03 C0            	ld	(replay_mainPSGvol),hl	
     122.  00:4664  C9                  	ret
     123.  00:4665                      	
     124.  00:4665                      _getnewbalancebase:
     125.  00:4665  07                  	rlca
     126.  00:4666  07                  	rlca
     127.  00:4667  07                  	rlca
     128.  00:4668  07                  	rlca
     129.  00:4669  21 B3 50            	ld	hl,_VOLUME_TABLE-128
     130.  00:466C  E6 F0               	and	$f0
     131.  00:466E  85                  	add	a,l
     132.  00:466F  6F                  	ld	l,a
     133.  00:4670  D0                  	ret 	nc
     134.  00:4671  24                  	inc	h
     135.  00:4672  C9                  	ret
     136.  00:4673                      	
     137.  00:4673                      	
     138.  00:4673                      	
     139.  00:4673                      ;===========================================================
     140.  00:4673                      ; ---	replay_loadsong
     141.  00:4673                      ; Initialize a song for playback
     142.  00:4673                      ; 
     143.  00:4673                      ; Input [HL] points to start song
     144.  00:4673                      ;===========================================================
     145.  00:4673                      replay_loadsong:
     146.  00:4673                      	;--- Get the start speed.
     147.  00:4673  7E                  	ld	a,(hl)	
     148.  00:4674  23                  	inc	hl
     149.  00:4675  32 1F C0            	ld	(replay_speed),a
     150.  00:4678                      
     151.  00:4678                      	;--- Set voice base, drum base, instrument base and track pointers
     152.  00:4678  11 07 C0            	ld 	de,replay_voicebase
     153.  00:467B  01 16 00            	ld	bc,22
     154.  00:467E  ED B0               	ldir
     155.  00:4680  22 1D C0            	ld	(replay_orderpointer),hl		; store pointer for next set
     156.  00:4683                      								; of track pointers
     157.  00:4683                      	;--- Initialize re-player variables.
     158.  00:4683  AF                  	xor	a
     159.  00:4684  32 20 C0            	ld	(replay_speed_subtimer),a
     160.  00:4687                      	
     161.  00:4687                      	;--- Erase channel data	in RAM
     162.  00:4687  01 2F 01            	ld	bc,TRACK_REC_SIZE*8-1
     163.  00:468A  21 32 C0            	ld	hl,TRACK_Chan1
     164.  00:468D  11 33 C0            	ld	de,TRACK_Chan1+1
     165.  00:4690  77                  	ld	(hl),a
     166.  00:4691  ED B0               	ldir
     167.  00:4693                      	
     168.  00:4693  32 24 C0            	ld	(replay_arp_speed),a
     169.  00:4696  32 8D C1            	ld	(FM_DRUM_LEN),a
     170.  00:4699  32 82 C1            	ld	(FM_DRUM),a	
     171.  00:469C                      	
     172.  00:469C  32 6A C1            	ld	(PSG_regVOLA),a
     173.  00:469F  32 6B C1            	ld	(PSG_regVOLB),a	
     174.  00:46A2  32 6C C1            	ld	(PSG_regVOLC),a
     175.  00:46A5  32 68 C1            	ld	(PSG_regNOISE),a
     176.  00:46A8                      
     177.  00:46A8                      ;	;--- Set the tone table base
     178.  00:46A8                      ;	ld	hl,TRACK_ToneTable_PSG
     179.  00:46A8                      ;	ld	(replay_tonetable_PSG),hl
     180.  00:46A8                      ;	ld	hl,TRACK_ToneTable_FM
     181.  00:46A8                      ;	ld	(replay_tonetable_FM),hl
     182.  00:46A8                      
     183.  00:46A8  3E 01               	ld	a,1
     184.  00:46AA  32 21 C0            	ld	(replay_speed_timer),a
     185.  00:46AD  32 54 C0            	ld	(TRACK_Chan1+17+TRACK_Delay),a	
     186.  00:46B0  32 7A C0            	ld	(TRACK_Chan2+17+TRACK_Delay),a		
     187.  00:46B3  32 A0 C0            	ld	(TRACK_Chan3+17+TRACK_Delay),a	
     188.  00:46B6  32 C6 C0            	ld	(TRACK_Chan4+17+TRACK_Delay),a	
     189.  00:46B9  32 EC C0            	ld	(TRACK_Chan5+17+TRACK_Delay),a		
     190.  00:46BC  32 12 C1            	ld	(TRACK_Chan6+17+TRACK_Delay),a		
     191.  00:46BF  32 38 C1            	ld	(TRACK_Chan7+17+TRACK_Delay),a		
     192.  00:46C2  32 5E C1            	ld	(TRACK_Chan8+17+TRACK_Delay),a	
     193.  00:46C5                      	
     194.  00:46C5  3E FE               	ld	a,254
     195.  00:46C7  32 32 C0            	ld	(TRACK_Chan1+17+TRACK_Instrument),a	
     196.  00:46CA  32 58 C0            	ld	(TRACK_Chan2+17+TRACK_Instrument),a		
     197.  00:46CD  32 7E C0            	ld	(TRACK_Chan3+17+TRACK_Instrument),a	
     198.  00:46D0  32 A4 C0            	ld	(TRACK_Chan4+17+TRACK_Instrument),a	
     199.  00:46D3  32 CA C0            	ld	(TRACK_Chan5+17+TRACK_Instrument),a		
     200.  00:46D6  32 F0 C0            	ld	(TRACK_Chan6+17+TRACK_Instrument),a		
     201.  00:46D9  32 16 C1            	ld	(TRACK_Chan7+17+TRACK_Instrument),a		
     202.  00:46DC  32 3C C1            	ld	(TRACK_Chan8+17+TRACK_Instrument),a	
     203.  00:46DF  32 90 C1            	ld	(FM_softvoice_req),a	
     204.  00:46E2  32 91 C1            	ld	(FM_softvoice_set),a
     205.  00:46E5                      
     206.  00:46E5  3E 10               	ld	a,16
     207.  00:46E7  32 87 C0            	ld	(TRACK_Chan3+17+TRACK_Voice),a
     208.  00:46EA  32 AD C0            	ld	(TRACK_Chan4+17+TRACK_Voice),a
     209.  00:46ED  32 D3 C0            	ld	(TRACK_Chan5+17+TRACK_Voice),a
     210.  00:46F0  32 F9 C0            	ld	(TRACK_Chan6+17+TRACK_Voice),a	
     211.  00:46F3  32 1F C1            	ld	(TRACK_Chan7+17+TRACK_Voice),a	
     212.  00:46F6  32 45 C1            	ld	(TRACK_Chan8+17+TRACK_Voice),a
     213.  00:46F9  3E 80               	ld	a,128
     214.  00:46FB  32 88 C0            	ld	(TRACK_Chan3+17+TRACK_Flags),a
     215.  00:46FE  32 AE C0            	ld	(TRACK_Chan4+17+TRACK_Flags),a
     216.  00:4701  32 D4 C0            	ld	(TRACK_Chan5+17+TRACK_Flags),a
     217.  00:4704  32 FA C0            	ld	(TRACK_Chan6+17+TRACK_Flags),a	
     218.  00:4707  32 20 C1            	ld	(TRACK_Chan7+17+TRACK_Flags),a
     219.  00:470A  32 46 C1            	ld	(TRACK_Chan8+17+TRACK_Flags),a	
     220.  00:470D                      	
     221.  00:470D                      	;--- Check if there are 3 psg chans.
     222.  00:470D  3A 23 C0            	ld	a,(replay_chan_setup)
     223.  00:4710  A7                  	and	a
     224.  00:4711  CA 18 47            	jp	z,99f
     225.  00:4714  AF                  	xor 	a
     226.  00:4715  32 88 C0            	ld	(TRACK_Chan3+17+TRACK_Flags),a	
     227.  00:4718                      99:	
     228.  00:4718                      
     229.  00:4718  CD 66 4F            	call	replay_route
     230.  00:471B                      	
     231.  00:471B                      	; end	is here
     232.  00:471B  3E 01               	ld	a,1
     233.  00:471D  32 22 C0            	ld	(replay_mode),a	
     234.  00:4720  C9                  	ret
     235.  00:4721                      
     236.  00:4721                      ;===========================================================
     237.  00:4721                      ; ---	replay_play
     238.  00:4721                      ; Decode music data and process instruments and effects. 
     239.  00:4721                      ; Music chip registers will be prepared for replay_route 
     240.  00:4721                      ;
     241.  00:4721                      ; Input none
     242.  00:4721                      ;===========================================================	
     243.  00:4721                      replay_play:
     244.  00:4721  3A 22 C0            	ld	a,(replay_mode)
     245.  00:4724  A7                  	and	a
     246.  00:4725  C8                  	ret	z		; replay mode = 0	; halted
     247.  00:4726                      				
     248.  00:4726                      				; replay mode = 1	; active
     249.  00:4726                      	
     250.  00:4726                      	;---- SPEED EQUALIZATION 
     251.  00:4726  3A 2F C0            	ld	a,(equalization_freq)		; 0 = 50Hz, otherwise 60Hz
     252.  00:4729  A7                  	and	a
     253.  00:472A  28 14               	jr.	z,.PAL               		; if PAL process at any interrupt;
     254.  00:472C                      
     255.  00:472C                      .NTSC:
     256.  00:472C  21 30 C0            	ld	hl,equalization_cnt  		; if NTSC call 5 times out of 6
     257.  00:472F  35                  	dec	(hl)
     258.  00:4730  20 0E               	jr.	nz,.PAL               		; skip music data processing one tic out of 6
     259.  00:4732                      
     260.  00:4732                      	;--- Reset timer and raise equalization flag
     261.  00:4732  3E 06               	ld	a,6
     262.  00:4734  77                  	ld	(hl),a						
     263.  00:4735  32 31 C0             	ld	(equalization_flag),a		
     264.  00:4738                      
     265.  00:4738  CD 6B 48            	call	process_data	
     266.  00:473B  AF                  	xor	a
     267.  00:473C  32 31 C0            	ld	(equalization_flag),a
     268.  00:473F  C9                  	ret
     269.  00:4740                      .PAL:                             
     270.  00:4740                      	;---- END SPEED EQUALIZATION	
     271.  00:4740                      
     272.  00:4740                      		
     273.  00:4740                      	;--- The speed timer
     274.  00:4740  21 21 C0            	ld	hl,replay_speed_timer
     275.  00:4743  35                  	dec	(hl)
     276.  00:4744                      
     277.  00:4744  C2 B2 49            	jp	nz,_replay_check_patternend	
     278.  00:4747                      		
     279.  00:4747                      	;--- Re-init Timer == 0
     280.  00:4747  AF                  	xor	a
     281.  00:4748  ED 4B 1F C0         	ld	bc,(replay_speed)		; [b]	sub-timer [c] speed
     282.  00:474C  CB 39               	srl	c				; bit	0 is halve speed step
     283.  00:474E  8F                  	adc	a,a
     284.  00:474F  A8                  	xor	b				; alternate	speed	to have halve speed.
     285.  00:4750  32 20 C0            	ld	(replay_speed_subtimer),a
     286.  00:4753  81                  	add	c
     287.  00:4754  32 21 C0            	ld	(replay_speed_timer),a
     288.  00:4757                      		
     289.  00:4757                      ;===========================================================
     290.  00:4757                      ; ---	replay_decodedata
     291.  00:4757                      ; Process the pattern data 
     292.  00:4757                      ;===========================================================
     293.  00:4757                      decode_data:
     294.  00:4757                      	;--- process the channels (tracks)
     295.  00:4757                      	
     296.  00:4757  21 33 52            	ld	hl,TRACK_ToneTable_PSG			; Set the PSG note table
     297.  00:475A  22 2D C0            	ld	(replay_tonetable),hl	
     298.  00:475D                      	
     299.  00:475D                      .decode1:	
     300.  00:475D  21 54 C0            	ld 	hl,TRACK_Chan1+17+TRACK_Delay
     301.  00:4760  35                  	dec	(hl)
     302.  00:4761  C2 7E 47            	jp	nz,.decode2
     303.  00:4764                      
     304.  00:4764  3A 3C C0            	ld	a,(TRACK_Chan1+17+TRACK_Flags)
     305.  00:4767  57                  	ld	d,a
     306.  00:4768  3A 39 C0            	ld	a,(TRACK_Chan1+17+TRACK_Note)	
     307.  00:476B  DD 21 43 C0         	ld	ix,TRACK_Chan1+17
     308.  00:476F  ED 4B 0D C0         	ld	bc,(TRACK_pointer1)
     309.  00:4773  CD E4 49            	call	decode_data_chan
     310.  00:4776  ED 43 0D C0         	ld	(TRACK_pointer1),bc
     311.  00:477A  7A                  	ld	a,d
     312.  00:477B  32 3C C0            	ld	(TRACK_Chan1+17+TRACK_Flags),a	
     313.  00:477E                      
     314.  00:477E                      .decode2:	
     315.  00:477E  21 7A C0            	ld 	hl,TRACK_Chan2+17+TRACK_Delay
     316.  00:4781  35                  	dec	(hl)
     317.  00:4782  C2 A5 47            	jp	nz,.decode3
     318.  00:4785                      
     319.  00:4785  3A 62 C0            	ld	a,(TRACK_Chan2+17+TRACK_Flags)
     320.  00:4788  57                  	ld	d,a
     321.  00:4789  3A 5F C0            	ld	a,(TRACK_Chan2+17+TRACK_Note)	
     322.  00:478C  DD 21 69 C0         	ld	ix,TRACK_Chan2+17
     323.  00:4790  ED 4B 0F C0         	ld	bc,(TRACK_pointer2)
     324.  00:4794  CD E4 49            	call	decode_data_chan
     325.  00:4797  ED 43 0F C0         	ld	(TRACK_pointer2),bc
     326.  00:479B  7A                  	ld	a,d				;'
     327.  00:479C  32 62 C0            	ld	(TRACK_Chan2+17+TRACK_Flags),a	
     328.  00:479F                      
     329.  00:479F                      	;--- Set FM Tone table
     330.  00:479F  21 F3 52            	ld	hl,TRACK_ToneTable_FM
     331.  00:47A2  22 2D C0            	ld	(replay_tonetable),hl
     332.  00:47A5                      
     333.  00:47A5                      
     334.  00:47A5                      .decode3:
     335.  00:47A5  21 A0 C0            	ld 	hl,TRACK_Chan3+17+TRACK_Delay
     336.  00:47A8  35                  	dec	(hl)
     337.  00:47A9  C2 C6 47            	jp	nz,.decode4
     338.  00:47AC                      
     339.  00:47AC  3A 88 C0            	ld	a,(TRACK_Chan3+17+TRACK_Flags)
     340.  00:47AF  57                  	ld	d,a		;'
     341.  00:47B0  3A 85 C0            	ld	a,(TRACK_Chan3+17+TRACK_Note)	
     342.  00:47B3  DD 21 8F C0         	ld	ix,TRACK_Chan3+17
     343.  00:47B7  ED 4B 11 C0         	ld	bc,(TRACK_pointer3)
     344.  00:47BB  CD E4 49            	call	decode_data_chan
     345.  00:47BE  ED 43 11 C0         	ld	(TRACK_pointer3),bc
     346.  00:47C2  7A                  	ld	a,d				;'
     347.  00:47C3  32 88 C0            	ld	(TRACK_Chan3+17+TRACK_Flags),a	
     348.  00:47C6                      
     349.  00:47C6                      .decode4:
     350.  00:47C6  21 C6 C0            	ld 	hl,TRACK_Chan4+17+TRACK_Delay
     351.  00:47C9  35                  	dec	(hl)
     352.  00:47CA  C2 E7 47            	jp	nz,.decode5
     353.  00:47CD                      
     354.  00:47CD  3A AE C0            	ld	a,(TRACK_Chan4+17+TRACK_Flags)
     355.  00:47D0  57                  	ld 	d,a		;'
     356.  00:47D1  3A AB C0            	ld	a,(TRACK_Chan4+17+TRACK_Note)	
     357.  00:47D4  DD 21 B5 C0         	ld	ix,TRACK_Chan4+17
     358.  00:47D8  ED 4B 13 C0         	ld	bc,(TRACK_pointer4)
     359.  00:47DC  CD E4 49            	call	decode_data_chan
     360.  00:47DF  ED 43 13 C0         	ld	(TRACK_pointer4),bc
     361.  00:47E3  7A                  	ld	a,d			;'
     362.  00:47E4  32 AE C0            	ld	(TRACK_Chan4+17+TRACK_Flags),a	
     363.  00:47E7                      
     364.  00:47E7                      .decode5:
     365.  00:47E7  21 EC C0            	ld 	hl,TRACK_Chan5+17+TRACK_Delay
     366.  00:47EA  35                  	dec	(hl)
     367.  00:47EB  C2 08 48            	jp	nz,.decode6
     368.  00:47EE                      
     369.  00:47EE  3A D4 C0            	ld	a,(TRACK_Chan5+17+TRACK_Flags)
     370.  00:47F1  57                  	ld	d,a		;'
     371.  00:47F2  3A D1 C0            	ld	a,(TRACK_Chan5+17+TRACK_Note)	
     372.  00:47F5  DD 21 DB C0         	ld	ix,TRACK_Chan5+17
     373.  00:47F9  ED 4B 15 C0         	ld	bc,(TRACK_pointer5)
     374.  00:47FD  CD E4 49            	call	decode_data_chan
     375.  00:4800  ED 43 15 C0         	ld	(TRACK_pointer5),bc
     376.  00:4804  7A                  	ld	a,d			;'
     377.  00:4805  32 D4 C0            	ld	(TRACK_Chan5+17+TRACK_Flags),a	
     378.  00:4808                      
     379.  00:4808                      .decode6:
     380.  00:4808  21 12 C1            	ld 	hl,TRACK_Chan6+17+TRACK_Delay
     381.  00:480B  35                  	dec	(hl)
     382.  00:480C  C2 29 48            	jp	nz,.decode7
     383.  00:480F                      
     384.  00:480F  3A FA C0            	ld	a,(TRACK_Chan6+17+TRACK_Flags)
     385.  00:4812  57                  	ld	d,a		;'
     386.  00:4813  3A F7 C0            	ld	a,(TRACK_Chan6+17+TRACK_Note)	
     387.  00:4816  DD 21 01 C1         	ld	ix,TRACK_Chan6+17
     388.  00:481A  ED 4B 17 C0         	ld	bc,(TRACK_pointer6)
     389.  00:481E  CD E4 49            	call	decode_data_chan
     390.  00:4821  ED 43 17 C0         	ld	(TRACK_pointer6),bc
     391.  00:4825  7A                  	ld	a,d				;'
     392.  00:4826  32 FA C0            	ld	(TRACK_Chan6+17+TRACK_Flags),a	
     393.  00:4829                      
     394.  00:4829                      .decode7:
     395.  00:4829  21 38 C1            	ld 	hl,TRACK_Chan7+17+TRACK_Delay
     396.  00:482C  35                  	dec	(hl)
     397.  00:482D  C2 4A 48            	jp	nz,.decode8
     398.  00:4830                      
     399.  00:4830  3A 20 C1            	ld	a,(TRACK_Chan7+17+TRACK_Flags)
     400.  00:4833  57                  	ld	d,a		;'
     401.  00:4834  3A 1D C1            	ld	a,(TRACK_Chan7+17+TRACK_Note)	
     402.  00:4837  DD 21 27 C1         	ld	ix,TRACK_Chan7+17
     403.  00:483B  ED 4B 19 C0         	ld	bc,(TRACK_pointer7)
     404.  00:483F  CD E4 49            	call	decode_data_chan
     405.  00:4842  ED 43 19 C0         	ld	(TRACK_pointer7),bc
     406.  00:4846  7A                  	ld	a,d				;'
     407.  00:4847  32 20 C1            	ld	(TRACK_Chan7+17+TRACK_Flags),a	
     408.  00:484A                      
     409.  00:484A                      .decode8:
     410.  00:484A  21 5E C1            	ld 	hl,TRACK_Chan8+17+TRACK_Delay
     411.  00:484D  35                  	dec	(hl)
     412.  00:484E  C2 6B 48            	jp	nz,.decode_end
     413.  00:4851                      
     414.  00:4851  3A 46 C1            	ld	a,(TRACK_Chan8+17+TRACK_Flags)
     415.  00:4854  57                  	ld	d,a		;'
     416.  00:4855  3A 43 C1            	ld	a,(TRACK_Chan8+17+TRACK_Note)	
     417.  00:4858  DD 21 4D C1         	ld	ix,TRACK_Chan8+17
     418.  00:485C  ED 4B 1B C0         	ld	bc,(TRACK_pointer8)
     419.  00:4860  CD E4 49            	call	decode_data_chan
     420.  00:4863  ED 43 1B C0         	ld	(TRACK_pointer8),bc
     421.  00:4867  7A                  	ld	a,d				;'
     422.  00:4868  32 46 C1            	ld	(TRACK_Chan8+17+TRACK_Flags),a
     423.  00:486B                      		
     424.  00:486B                      .decode_end:
     425.  00:486B                      	; continue to process data
     426.  00:486B                      ;===========================================================
     427.  00:486B                      ; ---	replay_decodedata_NO
     428.  00:486B                      ; Process changes.
     429.  00:486B                      ; 
     430.  00:486B                      ; 
     431.  00:486B                      ;===========================================================
     432.  00:486B                      process_data:
     433.  00:486B                      
     434.  00:486B                      	; Set tone table
     435.  00:486B  21 33 52            	ld	hl,TRACK_ToneTable_PSG
     436.  00:486E  22 2D C0            	ld	(replay_tonetable),hl
     437.  00:4871                      
     438.  00:4871                      	;--- Initialize PSG Mixer and volume
     439.  00:4871  AF                  	xor	a
     440.  00:4872  32 92 C1            	ld	(FM_regMIXER),a
     441.  00:4875  32 6D C1            	ld	(PSG_regVOLN),a
     442.  00:4878  32 6A C1            	ld	(PSG_regVOLA),a
     443.  00:487B  32 6B C1            	ld	(PSG_regVOLB),a
     444.  00:487E  32 6C C1            	ld	(PSG_regVOLC),a
     445.  00:4881                      	
     446.  00:4881                      	;--- PSG balance
     447.  00:4881  2A 03 C0            	ld	hl,(replay_mainPSGvol)
     448.  00:4884  22 29 C0            	ld	(replay_mainvol),hl
     449.  00:4887                      	
     450.  00:4887                      	;--------------------
     451.  00:4887                      	;--- Process track 1
     452.  00:4887                      	;--------------------
     453.  00:4887  DD 21 43 C0         	ld	ix,TRACK_Chan1+17
     454.  00:488B  3A 3C C0            	ld	a,(TRACK_Chan1+17+TRACK_Flags)
     455.  00:488E  57                  	ld	d,a
     456.  00:488F  CD 43 4C            	call	process_data_chan
     457.  00:4892  22 62 C1            	ld	(PSG_regToneA),hl
     458.  00:4895  3A 81 C1            	ld	a,(FM_regVOLF)
     459.  00:4898  32 6A C1            	ld	(PSG_regVOLA),a	
     460.  00:489B                      
     461.  00:489B                      	;--------------------
     462.  00:489B                      	;--- Process track 2
     463.  00:489B                      	;--------------------
     464.  00:489B  DD 21 69 C0         	ld	ix,TRACK_Chan2+17
     465.  00:489F  3A 62 C0            	ld	a,(TRACK_Chan2+17+TRACK_Flags)
     466.  00:48A2  57                  	ld	d,a
     467.  00:48A3  CD 43 4C            	call	process_data_chan
     468.  00:48A6  22 64 C1            	ld	(PSG_regToneB),hl
     469.  00:48A9  3A 81 C1            	ld	a,(FM_regVOLF)
     470.  00:48AC  32 6B C1            	ld	(PSG_regVOLB),a	
     471.  00:48AF                      
     472.  00:48AF  3A 23 C0            	ld	a,(replay_chan_setup)
     473.  00:48B2  A7                  	and	a
     474.  00:48B3  CA E5 48            	jp	z,_rdd_2psg_6fm
     475.  00:48B6                      
     476.  00:48B6                      _rdd_3psg_5fm:
     477.  00:48B6                      	;--------------------
     478.  00:48B6                      	;--- Process track 3	
     479.  00:48B6                      	;--------------------
     480.  00:48B6  DD 21 8F C0         	ld	ix,TRACK_Chan3+17
     481.  00:48BA  3A 88 C0            	ld	a,(TRACK_Chan3+17+TRACK_Flags)
     482.  00:48BD  57                  	ld	d,a
     483.  00:48BE  CD 43 4C            	call	process_data_chan
     484.  00:48C1  22 66 C1            	ld	(PSG_regToneC),hl
     485.  00:48C4  3A 81 C1            	ld	a,(FM_regVOLF)
     486.  00:48C7  32 6C C1            	ld	(PSG_regVOLC),a
     487.  00:48CA                      
     488.  00:48CA                      	;-- Convert mixer to AY
     489.  00:48CA  3A 92 C1            	ld	a,(FM_regMIXER)		
     490.  00:48CD  CB 3F               	srl	a
     491.  00:48CF  CB 3F               	srl	a
     492.  00:48D1  EE 3F               	xor	0x3f
     493.  00:48D3  32 69 C1            	ld	(PSG_regMIXER),a
     494.  00:48D6                      
     495.  00:48D6                      	; Set tone table
     496.  00:48D6  21 F3 52            	ld	hl,TRACK_ToneTable_FM
     497.  00:48D9  22 2D C0            	ld	(replay_tonetable),hl
     498.  00:48DC                      	;--- set SCC balance
     499.  00:48DC  2A 05 C0            	ld	hl,(replay_mainSCCvol)
     500.  00:48DF  22 29 C0            	ld	(replay_mainvol),hl
     501.  00:48E2                      	
     502.  00:48E2  C3 13 49            	jp	_rdd_cont
     503.  00:48E5                      	
     504.  00:48E5                      	
     505.  00:48E5                      _rdd_2psg_6fm:
     506.  00:48E5                      	;-- Convert mixer to AY
     507.  00:48E5  3A 92 C1            	ld	a,(FM_regMIXER)		
     508.  00:48E8  CB 3F               	srl	a
     509.  00:48EA  CB 3F               	srl	a
     510.  00:48EC  CB 3F               	srl	a
     511.  00:48EE  EE 3F               	xor	0x3f
     512.  00:48F0  32 69 C1            	ld	(PSG_regMIXER),a
     513.  00:48F3                      
     514.  00:48F3                      	; Set tone table
     515.  00:48F3  21 F3 52            	ld	hl,TRACK_ToneTable_FM
     516.  00:48F6  22 2D C0            	ld	(replay_tonetable),hl
     517.  00:48F9                      	;--- set SCC balance
     518.  00:48F9  2A 05 C0            	ld	hl,(replay_mainSCCvol)
     519.  00:48FC  22 29 C0            	ld	(replay_mainvol),hl
     520.  00:48FF                      
     521.  00:48FF                      	;--------------------
     522.  00:48FF                      	;--- Process track 3
     523.  00:48FF                      	;--------------------
     524.  00:48FF  DD 21 8F C0         	ld	ix,TRACK_Chan3+17
     525.  00:4903  3A 88 C0            	ld	a,(TRACK_Chan3+17+TRACK_Flags)
     526.  00:4906  57                  	ld	d,a
     527.  00:4907  CD 43 4C            	call	process_data_chan
     528.  00:490A  22 70 C1            	ld	(FM_regToneA),hl
     529.  00:490D  3A 81 C1            	ld	a,(FM_regVOLF)
     530.  00:4910  32 7C C1            	ld	(FM_regVOLA),a	
     531.  00:4913                      
     532.  00:4913                      
     533.  00:4913                      _rdd_cont:
     534.  00:4913                      	;--------------------
     535.  00:4913                      	;--- Process track 4
     536.  00:4913                      	;--------------------
     537.  00:4913  DD 21 B5 C0         	ld	ix,TRACK_Chan4+17
     538.  00:4917  3A AE C0            	ld	a,(TRACK_Chan4+17+TRACK_Flags)
     539.  00:491A  57                  	ld	d,a
     540.  00:491B  CD 43 4C            	call	process_data_chan
     541.  00:491E  22 72 C1            	ld	(FM_regToneB),hl
     542.  00:4921  3A 81 C1            	ld	a,(FM_regVOLF)
     543.  00:4924  32 7D C1            	ld	(FM_regVOLB),a	
     544.  00:4927                      
     545.  00:4927                      	;--------------------
     546.  00:4927                      	;--- Process track 5
     547.  00:4927                      	;--------------------	
     548.  00:4927  DD 21 DB C0         	ld	ix,TRACK_Chan5+17
     549.  00:492B  3A D4 C0            	ld	a,(TRACK_Chan5+17+TRACK_Flags)
     550.  00:492E  57                  	ld	d,a
     551.  00:492F  CD 43 4C            	call	process_data_chan
     552.  00:4932  22 74 C1            	ld	(FM_regToneC),hl
     553.  00:4935  3A 81 C1            	ld	a,(FM_regVOLF)
     554.  00:4938  32 7E C1            	ld	(FM_regVOLC),a	
     555.  00:493B                      
     556.  00:493B                      	;--------------------
     557.  00:493B                      	;--- Process track 6
     558.  00:493B                      	;--------------------
     559.  00:493B                      		
     560.  00:493B  DD 21 01 C1         	ld	ix,TRACK_Chan6+17
     561.  00:493F  3A FA C0            	ld	a,(TRACK_Chan6+17+TRACK_Flags)
     562.  00:4942  57                  	ld	d,a
     563.  00:4943  CD 43 4C            	call	process_data_chan
     564.  00:4946  22 76 C1            	ld	(FM_regToneD),hl
     565.  00:4949  3A 81 C1            	ld	a,(FM_regVOLF)
     566.  00:494C  32 7F C1            	ld	(FM_regVOLD),a	
     567.  00:494F                      
     568.  00:494F                      	;--------------------
     569.  00:494F                      	;--- Process track 7
     570.  00:494F                      	;--------------------
     571.  00:494F  DD 21 27 C1         	ld	ix,TRACK_Chan7+17
     572.  00:4953  3A 20 C1            	ld	a,(TRACK_Chan7+17+TRACK_Flags)
     573.  00:4956  57                  	ld	d,a
     574.  00:4957  CD 43 4C            	call	process_data_chan
     575.  00:495A  22 78 C1            	ld	(FM_regToneE),hl
     576.  00:495D                      ;	ld	a,d
     577.  00:495D                      ;	ld	(TRACK_Chan7+17+TRACK_Flags),a	
     578.  00:495D  3A 81 C1            	ld	a,(FM_regVOLF)
     579.  00:4960  32 80 C1            	ld	(FM_regVOLE),a		
     580.  00:4963                      
     581.  00:4963                      	;--------------------
     582.  00:4963                      	;--- Process track 8
     583.  00:4963                      	;--------------------		
     584.  00:4963  DD 21 4D C1         	ld	ix,TRACK_Chan8+17
     585.  00:4967  3A 46 C1            	ld	a,(TRACK_Chan8+17+TRACK_Flags)
     586.  00:496A  57                  	ld	d,a
     587.  00:496B  CD 43 4C            	call	process_data_chan
     588.  00:496E  22 7A C1            	ld	(FM_regToneF),hl
     589.  00:4971                      	
     590.  00:4971                      
     591.  00:4971                      	;--------------------
     592.  00:4971                      	; Fade out processing
     593.  00:4971                      	;--------------------
     594.  00:4971  3A 25 C0            	ld	a,(replay_fade)
     595.  00:4974  A7                  	and	a
     596.  00:4975  C8                  	ret	z	; if replay fade = 0 then no fade active
     597.  00:4976                      	
     598.  00:4976                      	; decrease fade timer
     599.  00:4976  3A 26 C0            	ld	a,(replay_fade_timer)
     600.  00:4979  3D                  	dec	a
     601.  00:497A  C2 93 49            	jp	nz,.no_new_step
     602.  00:497D                      
     603.  00:497D  3A 27 C0            	ld	a,(replay_fade_vol)
     604.  00:4980  3C                  	inc	a
     605.  00:4981  FE 10               	cp	16
     606.  00:4983  DA 8D 49            	jp	c,.cont_fadeing
     607.  00:4986  AF                  	xor	a
     608.  00:4987  32 25 C0            	ld	(replay_fade),a
     609.  00:498A  C3 1E 46            	jp	replay_pause
     610.  00:498D                      .cont_fadeing:	
     611.  00:498D  32 27 C0            	ld	(replay_fade_vol),a
     612.  00:4990  3A 25 C0            	ld	a,(replay_fade)
     613.  00:4993                      .no_new_step:
     614.  00:4993  32 26 C0            	ld	(replay_fade_timer),a
     615.  00:4996                      
     616.  00:4996  3A 27 C0            	ld	a,(replay_fade_vol)
     617.  00:4999  4F                  	ld	c,a
     618.  00:499A  06 03               	ld	b,3
     619.  00:499C  21 6A C1            	ld	hl,PSG_regVOLA
     620.  00:499F  CD A7 49            	call	.calc_vol
     621.  00:49A2  06 06               	ld	b,6
     622.  00:49A4  21 7C C1            	ld	hl,FM_regVOLA
     623.  00:49A7                      
     624.  00:49A7                      .calc_vol:	
     625.  00:49A7  7E                  	ld	a,(hl)
     626.  00:49A8  91                  	sub	c
     627.  00:49A9  D2 AD 49            	jp	nc,.no_carry
     628.  00:49AC  AF                  	xor	a
     629.  00:49AD                      .no_carry:	
     630.  00:49AD  77                  	ld	(hl),a
     631.  00:49AE  23                  	inc	hl
     632.  00:49AF  10 F6               	djnz	.calc_vol
     633.  00:49B1  C9                  	ret
     634.  00:49B2                      
     635.  00:49B2                      
     636.  00:49B2                      
     637.  00:49B2                      ;--------------------
     638.  00:49B2                      	
     639.  00:49B2                      	
     640.  00:49B2                      ;--------------------
     641.  00:49B2                      _replay_check_patternend:
     642.  00:49B2  3A 54 C0            	ld 	a,(TRACK_Chan1+17+TRACK_Delay)
     643.  00:49B5  3D                  	dec	a
     644.  00:49B6  C2 6B 48            	jp	nz,process_data
     645.  00:49B9                      	
     646.  00:49B9  2A 0D C0            	ld	hl,(TRACK_pointer1)
     647.  00:49BC  7E                  	ld	a,(hl)
     648.  00:49BD                      	
     649.  00:49BD                      	;--- check for end of pattern
     650.  00:49BD  FE BF               	cp	191	
     651.  00:49BF  C2 6B 48            	jp	nz,process_data
     652.  00:49C2                      
     653.  00:49C2                      	;--- Set track pointers to start
     654.  00:49C2  2A 1D C0            	ld	hl,(replay_orderpointer)
     655.  00:49C5  AF                  	xor	a
     656.  00:49C6  BE                  	cp	(hl)
     657.  00:49C7  C2 D6 49            	jp	nz,.no_restart
     658.  00:49CA  23                  	inc	hl
     659.  00:49CB  BE                  	cp	(hl)
     660.  00:49CC  2B                  	dec	hl
     661.  00:49CD  C2 D6 49            	jp	nz,.no_restart
     662.  00:49D0                      	;--- next is restart order
     663.  00:49D0  23                  	inc	hl
     664.  00:49D1  23                  	inc	hl
     665.  00:49D2  7E                  	ld	a,(hl)
     666.  00:49D3  23                  	inc	hl
     667.  00:49D4  66                  	ld	h,(hl)
     668.  00:49D5  6F                  	ld	l,a
     669.  00:49D6                      .no_restart:	
     670.  00:49D6  11 0D C0            	ld	de,TRACK_pointer1
     671.  00:49D9  01 10 00            	ld	bc,16
     672.  00:49DC  ED B0               	ldir
     673.  00:49DE  22 1D C0            	ld	(replay_orderpointer),hl		; store pointer for next set
     674.  00:49E1                      								; of strack pointers
     675.  00:49E1  C3 6B 48            	jp	process_data
     676.  00:49E4                      
     677.  00:49E4                      
     678.  00:49E4                      
     679.  00:49E4                      
     680.  00:49E4                      
     681.  00:49E4                      
     682.  00:49E4                      
     683.  00:49E4                      
     684.  00:49E4                      
     685.  00:49E4                      
     686.  00:49E4                      
     687.  00:49E4                      
     688.  00:49E4                      ;===========================================================
     689.  00:49E4                      ; ---	decode_data_chan
     690.  00:49E4                      ; Process the channel data
     691.  00:49E4                      ; 
     692.  00:49E4                      ; in BC is the pointer to the	data
     693.  00:49E4                      ;    D contains flags.
     694.  00:49E4                      ;===========================================================	
     695.  00:49E4                      decode_data_chan:
     696.  00:49E4                      	;--- initialize data
     697.  00:49E4  DD 7E F6            	ld	a,(ix+TRACK_Note)
     698.  00:49E7  32 28 C0            	ld	(replay_previous_note),a
     699.  00:49EA                      
     700.  00:49EA                      	;=============
     701.  00:49EA                      	; Note 
     702.  00:49EA                      	;=============
     703.  00:49EA  0A                  	ld	a,(bc)
     704.  00:49EB  FE 60               	cp	_REL
     705.  00:49ED  DA 33 4A            	jp	c,_replay_decode_note
     706.  00:49F0  FE 61               	cp	_SUS
     707.  00:49F2  DA 3F 4A            	jp	c,_replay_decode_release
     708.  00:49F5  CA 4A 4A            	jp	z,_replay_decode_sustain
     709.  00:49F8  FE 71               _rdn2:cp	_INS
     710.  00:49FA  DA 8F 4A            	jp	c,_replay_decode_vol
     711.  00:49FD  FE 90               _rdv2:cp	_CMD
     712.  00:49FF  DA 55 4A            	jp	c,_replay_decode_ins
     713.  00:4A02                      _rdi2:
     714.  00:4A02  FE BF               	cp	_EOT
     715.  00:4A04  D2 A4 4A            	jp	nc,_replay_decode_delay
     716.  00:4A07  DA B1 4A            	jp	c,_replaydecode_cmd
     717.  00:4A0A                      
     718.  00:4A0A                      _rdn:
     719.  00:4A0A  FE 61               	cp	_SUS
     720.  00:4A0C  DA 2C 4A            	jp	c,_rd_delay
     721.  00:4A0F  C3 F8 49            	jp	_rdn2
     722.  00:4A12                      
     723.  00:4A12                      _rdi:
     724.  00:4A12  FE 90               	cp	_CMD
     725.  00:4A14  DA 2C 4A            	jp	c,_rd_delay
     726.  00:4A17  C3 02 4A            	jp	_rdi2
     727.  00:4A1A                      
     728.  00:4A1A                      _rdv:
     729.  00:4A1A  FE 71               	cp	_INS
     730.  00:4A1C  DA 2C 4A            	jp	c,_rd_delay
     731.  00:4A1F  C3 FD 49            	jp	_rdv2
     732.  00:4A22                      _rdc:
     733.  00:4A22  03                  	inc	bc
     734.  00:4A23                      _rdc_noinc:	
     735.  00:4A23  0A                  	ld	a,(bc)
     736.  00:4A24  FE BF               	cp	_EOT
     737.  00:4A26  DA 2C 4A            	jp	c,_rd_delay
     738.  00:4A29  C3 A4 4A            	jp	_replay_decode_delay
     739.  00:4A2C                      
     740.  00:4A2C                      	;--- re-init previous delay
     741.  00:4A2C                      _rd_delay:
     742.  00:4A2C  DD 7E 13            	ld	a,(ix+TRACK_prevDelay)
     743.  00:4A2F  DD 77 11            	ld	(ix+TRACK_Delay),a
     744.  00:4A32  C9                  	ret
     745.  00:4A33                      
     746.  00:4A33                      
     747.  00:4A33                      
     748.  00:4A33                      _replay_decode_note:
     749.  00:4A33  DD 77 F6            	ld	(ix+TRACK_Note),a
     750.  00:4A36  CB C2               	set 	B_TRGNOT,d
     751.  00:4A38  CB E2               	set 	B_KEYON,d
     752.  00:4A3A                      
     753.  00:4A3A  03                  	inc	bc
     754.  00:4A3B  0A                  	ld	a,(bc)
     755.  00:4A3C  C3 0A 4A            	jp	_rdn
     756.  00:4A3F                      	
     757.  00:4A3F                      _replay_decode_release:
     758.  00:4A3F  CB 8A               	res	B_ACTNOT,d				; reset note bit to	0
     759.  00:4A41  CB AA               	res	B_SUST,d				; rest sustain
     760.  00:4A43  CB A2               	res	B_KEYON,d				; reset Key on
     761.  00:4A45                      
     762.  00:4A45  03                  	inc	bc
     763.  00:4A46  0A                  	ld	a,(bc)
     764.  00:4A47  C3 0A 4A            	jp	_rdn	
     765.  00:4A4A                      	
     766.  00:4A4A                      _replay_decode_sustain:
     767.  00:4A4A  CB 8A               	res	B_ACTNOT,d				; reset note bit to	0
     768.  00:4A4C  CB EA               	set	B_SUST,d				; rest sustain
     769.  00:4A4E  CB A2               	res	B_KEYON,d				; reset Key on
     770.  00:4A50                      
     771.  00:4A50  03                  	inc	bc
     772.  00:4A51  0A                  	ld	a,(bc)
     773.  00:4A52  C3 0A 4A            	jp	_rdn
     774.  00:4A55                      
     775.  00:4A55                      _replay_decode_ins:
     776.  00:4A55  D6 71               	sub	_INS
     777.  00:4A57  DD BE EF            	cp	(ix+TRACK_Instrument)
     778.  00:4A5A  CA 8A 4A            	jp	z,.skip_ins
     779.  00:4A5D                      	
     780.  00:4A5D                      	;--- instrument change found	
     781.  00:4A5D  DD 77 EF            	ld	(ix+TRACK_Instrument),a
     782.  00:4A60                      
     783.  00:4A60                      	;--- set instrument pointer
     784.  00:4A60  87                  	add	a
     785.  00:4A61  2A 0B C0            	ld	hl,(replay_insbase)
     786.  00:4A64  85                  	add	a,l
     787.  00:4A65  6F                  	ld	l,a
     788.  00:4A66  D2 6A 4A            	jp	nc,.skip
     789.  00:4A69  24                  	inc	h
     790.  00:4A6A                      .skip:
     791.  00:4A6A  7E                  	ld	a,(hl)
     792.  00:4A6B  23                  	inc	hl
     793.  00:4A6C  66                  	ld	h,(hl)
     794.  00:4A6D  6F                  	ld	l,a
     795.  00:4A6E                      
     796.  00:4A6E                      	;-- get voice
     797.  00:4A6E  7E                  	ld	a,(hl)
     798.  00:4A6F                      
     799.  00:4A6F  23                  	inc	hl
     800.  00:4A70                      	;--- Store the macro start
     801.  00:4A70  DD 75 F1            	ld	(ix+TRACK_MacroPointer),l
     802.  00:4A73  DD 74 F2            	ld	(ix+TRACK_MacroPointer+1),h	
     803.  00:4A76                      	;--- Store the macro re-start
     804.  00:4A76  DD 75 F3            	ld	(ix+TRACK_MacroStart),l
     805.  00:4A79  DD 74 F4            	ld	(ix+TRACK_MacroStart+1),h		
     806.  00:4A7C                      	;--- Set the software voice (if needed)
     807.  00:4A7C                      
     808.  00:4A7C  FE 10               	cp	16
     809.  00:4A7E  DA 87 4A            	jp	c,.skip_soft
     810.  00:4A81                      	; software voice found
     811.  00:4A81  D6 10               	sub	16
     812.  00:4A83  32 90 C1            	ld 	(FM_softvoice_req),a
     813.  00:4A86  AF                  	xor 	a
     814.  00:4A87                      	
     815.  00:4A87                      .skip_soft:
     816.  00:4A87  DD 77 F8            	ld	(ix+TRACK_Voice),a
     817.  00:4A8A                      
     818.  00:4A8A                      	
     819.  00:4A8A                      .skip_ins:	
     820.  00:4A8A  03                  	inc	bc
     821.  00:4A8B  0A                  	ld	a,(bc)
     822.  00:4A8C  C3 12 4A            	jp	_rdi
     823.  00:4A8F                      
     824.  00:4A8F                      
     825.  00:4A8F                      
     826.  00:4A8F                      _replay_decode_vol:
     827.  00:4A8F  D6 61               	sub	_VOL-1
     828.  00:4A91  87                  	add	a
     829.  00:4A92  87                  	add	a
     830.  00:4A93  87                  	add	a
     831.  00:4A94  87                  	add	a
     832.  00:4A95                      	
     833.  00:4A95                      	;--- Set new base	volume (high byte) but keep relative offset (low byte)
     834.  00:4A95  5F                  	ld	e,a
     835.  00:4A96  DD 7E F7            	ld	a,(ix+TRACK_Volume)
     836.  00:4A99  E6 0F               	and	0xf
     837.  00:4A9B  B3                  	or	e
     838.  00:4A9C  DD 77 F7            	ld	(ix+TRACK_Volume),a
     839.  00:4A9F                      
     840.  00:4A9F  03                  	inc	bc
     841.  00:4AA0  0A                  	ld	a,(bc)
     842.  00:4AA1  C3 1A 4A            	jp	_rdv
     843.  00:4AA4                      
     844.  00:4AA4                      
     845.  00:4AA4                      _replay_decode_delay:
     846.  00:4AA4  D6 BF               	sub	_WAIT-1
     847.  00:4AA6  CA 2C 4A            	jp	z,_rd_delay		; EOT found
     848.  00:4AA9  DD 77 11            	ld	(ix+TRACK_Delay),a
     849.  00:4AAC  DD 77 13            	ld	(ix+TRACK_prevDelay),a
     850.  00:4AAF                      
     851.  00:4AAF  03                  	inc	bc
     852.  00:4AB0  C9                  	ret
     853.  00:4AB1                      
     854.  00:4AB1                      
     855.  00:4AB1                      
     856.  00:4AB1                      
     857.  00:4AB1                      _replaydecode_cmd:
     858.  00:4AB1  D6 90               	sub	_CMD
     859.  00:4AB3                      	
     860.  00:4AB3                      	;[Debug]
     861.  00:4AB3  FE 16               	cp	22
     862.  00:4AB5  DA BA 4A            	jp	c,99f
     863.  00:4AB8  F3                  	di
     864.  00:4AB9  76                  	halt
     865.  00:4ABA                      99:
     866.  00:4ABA                      	;[Debug end]
     867.  00:4ABA                      	
     868.  00:4ABA  5F                  	ld	e,a				; store command for later
     869.  00:4ABB  21 CC 4A            	ld	hl,DECODE_CMDLIST
     870.  00:4ABE  87                  	add	a,a
     871.  00:4ABF  85                  	add	a,l
     872.  00:4AC0  6F                  	ld	l,a
     873.  00:4AC1  D2 C5 4A            	jp	nc,.skip
     874.  00:4AC4  24                  	inc	h
     875.  00:4AC5                      .skip:
     876.  00:4AC5  7E                  	ld	a,(hl)
     877.  00:4AC6  23                  	inc	hl
     878.  00:4AC7  66                  	ld	h,(hl)
     879.  00:4AC8  6F                  	ld	l,a
     880.  00:4AC9                      	
     881.  00:4AC9  03                  	inc	bc
     882.  00:4ACA  0A                  	ld	a,(bc)
     883.  00:4ACB  E9                  	jp	(hl)
     884.  00:4ACC                      
     885.  00:4ACC                      
     886.  00:4ACC                      DECODE_CMDLIST:
     887.  00:4ACC                      	; Primary
     888.  00:4ACC  F8 4A               	dw	decode_cmd0_arpeggio
     889.  00:4ACE  0B 4B               	dw	decode_cmd1_port_up
     890.  00:4AD0  16 4B               	dw	decode_cmd2_port_down
     891.  00:4AD2  21 4B               	dw	decode_cmd3_port_tone
     892.  00:4AD4  71 4B               	dw	decode_cmd4_vibrato
     893.  00:4AD6  88 4B               	dw	decode_cmd5_vibrato_port_tone
     894.  00:4AD8  88 4B               	dw	decode_cmd6_vibrato_vol	
     895.  00:4ADA  88 4B               	dw	decode_cmd7_vol_slide
     896.  00:4ADC  90 4B               	dw	decode_cmd8_note_cut
     897.  00:4ADE  99 4B               	dw	decode_cmd9_note_delay
     898.  00:4AE0                      	; Secondary
     899.  00:4AE0  B7 4B               	dw	decode_cmd10_command_end
     900.  00:4AE2  BC 4B               	dw	decode_cmd11_drum
     901.  00:4AE4  E2 4B               	dw	decode_cmd12_short_arp
     902.  00:4AE6  EE 4B               	dw	decode_cmd13_fine_up
     903.  00:4AE8  EE 4B               	dw	decode_cmd14_fine_down
     904.  00:4AEA  FA 4B               	dw	decode_cmd15_notelink
     905.  00:4AEC  02 4C               	dw	decode_cmd16_track_detune
     906.  00:4AEE  21 4C               	dw	decode_cmd17_trigger
     907.  00:4AF0  27 4C               	dw	decode_cmd18_speed
     908.  00:4AF2                      	; SoundChip Specific
     909.  00:4AF2  3A 4C               	dw	decode_cmd19_tone_panning
     910.  00:4AF4  3D 4C               	dw	decode_cmd20_noise_panning
     911.  00:4AF6  40 4C               	dw	decode_cmd21_chan_setup	
     912.  00:4AF8                      	
     913.  00:4AF8                      
     914.  00:4AF8                      decode_cmd0_arpeggio:
     915.  00:4AF8                      	; in:	[A] contains the paramvalue
     916.  00:4AF8                      	; 
     917.  00:4AF8                      	; ! do not change	[BC] this is the data pointer
     918.  00:4AF8                      	;--------------------------------------------------
     919.  00:4AF8  DD 77 05            	ld	(ix+TRACK_cmd_0),a
     920.  00:4AFB  DD 73 F0            	ld	(ix+TRACK_Command),e
     921.  00:4AFE  CB DA               	set	B_TRGCMD,d
     922.  00:4B00  DD 36 0F 00         	ld	(ix+TRACK_Timer),0
     923.  00:4B04  DD 36 10 02         	ld	(ix+TRACK_Step),2
     924.  00:4B08  C3 22 4A            	jp	_rdc
     925.  00:4B0B                      
     926.  00:4B0B                      
     927.  00:4B0B                      	
     928.  00:4B0B                      decode_cmd1_port_up:
     929.  00:4B0B                      	; in:	[A] contains the paramvalue
     930.  00:4B0B                      	; 
     931.  00:4B0B                      	; ! do not change	[BC] this is the data pointer
     932.  00:4B0B                      	;--------------------------------------------------
     933.  00:4B0B  DD 73 F0            	ld	(ix+TRACK_Command),e
     934.  00:4B0E  DD 77 06            	ld	(ix+TRACK_cmd_1),a
     935.  00:4B11  CB DA               	set	B_TRGCMD,d
     936.  00:4B13  C3 22 4A            	jp	_rdc
     937.  00:4B16                      	
     938.  00:4B16                      	 
     939.  00:4B16                      	 
     940.  00:4B16                      decode_cmd2_port_down:
     941.  00:4B16                      	; in:	[A] contains the paramvalue
     942.  00:4B16                      	; 
     943.  00:4B16                      	; ! do1_ not change	[BC] this is the data pointer
     944.  00:4B16                      	;--------------------------------------------------
     945.  00:4B16  DD 73 F0            	ld	(ix+TRACK_Command),e
     946.  00:4B19  DD 77 07            	ld	(ix+TRACK_cmd_2),a
     947.  00:4B1C  CB DA               	set	B_TRGCMD,d
     948.  00:4B1E  C3 22 4A            	jp	_rdc
     949.  00:4B21                      
     950.  00:4B21                      
     951.  00:4B21                      decode_cmd3_port_tone:
     952.  00:4B21                      	; in:	[A] contains the param value
     953.  00:4B21                      	; 
     954.  00:4B21                      	; ! do not change	[BC] this is the data pointer
     955.  00:4B21                      	;--------------------------------------------------
     956.  00:4B21  DD 73 F0            	ld	(ix+TRACK_Command),e
     957.  00:4B24  CB DA               	set	B_TRGCMD,d
     958.  00:4B26  CB CA               	set	B_ACTNOT,d
     959.  00:4B28                      	
     960.  00:4B28  DD 77 08            	ld	(ix+TRACK_cmd_3),a
     961.  00:4B2B  DD 36 0F 02         	ld	(ix+TRACK_Timer),2
     962.  00:4B2F                      
     963.  00:4B2F                      ;decode_cmd3_port_tone_cont:
     964.  00:4B2F                      	;--- Check if we have a	note on the	same event
     965.  00:4B2F  CB 42               	bit	B_TRGNOT,d
     966.  00:4B31  CA 22 4A            	jp	z,_rdc
     967.  00:4B34                      
     968.  00:4B34  CB E2               	set	B_KEYON,d
     969.  00:4B36  CB 82               	res 	B_TRGNOT,d
     970.  00:4B38                      
     971.  00:4B38                      _decode_newNote:
     972.  00:4B38                      	;-- get the	previous note freq
     973.  00:4B38  3A 28 C0            	ld	a,(replay_previous_note)
     974.  00:4B3B  87                  	add	a
     975.  00:4B3C                      
     976.  00:4B3C  D9                  	exx
     977.  00:4B3D                      ;	bit	B_PSGFM,d
     978.  00:4B3D                      ;	jp	nz,_cmd3_fm
     979.  00:4B3D                      ;_cmd3_psg:
     980.  00:4B3D                      ;	ld	hl,(replay_tonetable_PSG)	;TRACK_ToneTable
     981.  00:4B3D                      ;	jp	99f
     982.  00:4B3D                      ;_cmd3_fm:
     983.  00:4B3D                      ;	ld	hl,(replay_tonetable_FM)	;TRACK_ToneTable
     984.  00:4B3D                      ;
     985.  00:4B3D                      ;99:
     986.  00:4B3D  2A 2D C0            	ld	hl,(replay_tonetable)
     987.  00:4B40                      	
     988.  00:4B40  E5                  	push	hl			; store address for later
     989.  00:4B41  85                  	add	a,l
     990.  00:4B42  6F                  	ld	l,a
     991.  00:4B43  D2 47 4B            	jp	nc,.skip
     992.  00:4B46  24                  	inc	h
     993.  00:4B47                      .skip:
     994.  00:4B47  5E                  	ld	e,(hl)
     995.  00:4B48  23                  	inc	hl
     996.  00:4B49  56                  	ld	d,(hl)
     997.  00:4B4A                      
     998.  00:4B4A                      	; add	the toneadd
     999.  00:4B4A  DD 6E 00            	ld	l,(ix+TRACK_cmd_ToneSlideAdd)
    1000.  00:4B4D  DD 66 01            	ld	h,(ix+TRACK_cmd_ToneSlideAdd+1)
    1001.  00:4B50                      
    1002.  00:4B50  19                  	add	hl,de	
    1003.  00:4B51  EB                  	ex	de,hl				; store current freq in	[de]
    1004.  00:4B52                      
    1005.  00:4B52                      	;--- get the current note freq
    1006.  00:4B52  DD 7E F6            	ld	a,(ix+TRACK_Note)
    1007.  00:4B55  87                  	add	a
    1008.  00:4B56                      	;ld	hl,(replay_Tonetable)	;TRACK_ToneTable
    1009.  00:4B56  E1                  	pop 	hl
    1010.  00:4B57  85                  	add	a,l
    1011.  00:4B58  6F                  	ld	l,a
    1012.  00:4B59  D2 5D 4B            	jp	nc,.skip2
    1013.  00:4B5C  24                  	inc	h
    1014.  00:4B5D                      .skip2:
    1015.  00:4B5D  7E                  	ld	a,(hl)
    1016.  00:4B5E  23                  	inc	hl
    1017.  00:4B5F  66                  	ld	h,(hl)
    1018.  00:4B60  6F                  	ld	l,a				; destination freq in [hl]
    1019.  00:4B61                      	
    1020.  00:4B61                      	;--- Calculate the delta
    1021.  00:4B61  AF                  	xor	a
    1022.  00:4B62  EB                  	ex	de,hl
    1023.  00:4B63  ED 52               	sbc	hl,de				; results in pos/neg delta
    1024.  00:4B65                      	
    1025.  00:4B65  DD 75 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),l
    1026.  00:4B68  DD 74 01            	ld	(ix+TRACK_cmd_ToneSlideAdd+1),h	
    1027.  00:4B6B  D9                  	exx
    1028.  00:4B6C                      	
    1029.  00:4B6C  CB 82               	res	B_TRGNOT,d
    1030.  00:4B6E  C3 22 4A            	jp	_rdc	
    1031.  00:4B71                      
    1032.  00:4B71                      	
    1033.  00:4B71                      decode_cmd4_vibrato:
    1034.  00:4B71                      	; in:	[A] contains the paramvalue
    1035.  00:4B71                      	; 
    1036.  00:4B71                      	; ! do not change	[BC] this is the data pointer
    1037.  00:4B71                      	;--------------------------------------------------
    1038.  00:4B71                      	; Vibrato with speed x and depth y.	This command 
    1039.  00:4B71                      	; will oscillate the frequency of the current note
    1040.  00:4B71                      	; with a sine wave. 
    1041.  00:4B71                      	;
    1042.  00:4B71                      	; high 3 bits is depth (0-7) (direct offset in sinetable)
    1043.  00:4B71                      	; low 5 bits is the speed. 1-16
    1044.  00:4B71                      	;--- Init values
    1045.  00:4B71  5F                  	ld	e,a
    1046.  00:4B72  E6 E0               	and	$e0
    1047.  00:4B74                      
    1048.  00:4B74  DD 77 09            	ld	(ix+TRACK_cmd_4_depth),a
    1049.  00:4B77  7B                  	ld	a,e
    1050.  00:4B78  E6 1F               	and	$1f
    1051.  00:4B7A  3C                  	inc	a
    1052.  00:4B7B  DD 77 0A            	ld	(ix+TRACK_cmd_4_step),a
    1053.  00:4B7E  ED 44               	neg	
    1054.  00:4B80  DD 77 10            	ld	(ix+TRACK_Step),a
    1055.  00:4B83                      	
    1056.  00:4B83  CB DA               	set	B_TRGCMD,d
    1057.  00:4B85  C3 22 4A            	jp	_rdc	
    1058.  00:4B88                      
    1059.  00:4B88                      
    1060.  00:4B88                      decode_cmd5_vibrato_port_tone:
    1061.  00:4B88                      	; in:	[A] contains the paramvalue
    1062.  00:4B88                      	; 
    1063.  00:4B88                      	; ! do not change	[BC] this is the data pointer
    1064.  00:4B88                      	;--------------------------------------------------
    1065.  00:4B88                      	; portTone	+ volumeslide
    1066.  00:4B88                      	;--- Init values
    1067.  00:4B88                      decode_cmd6_vibrato_vol:
    1068.  00:4B88                      	; in:	[A] contains the paramvalue
    1069.  00:4B88                      	; 
    1070.  00:4B88                      	; ! do not change	[BC] this is the data pointer
    1071.  00:4B88                      	;--------------------------------------------------
    1072.  00:4B88                      decode_cmd7_vol_slide:
    1073.  00:4B88                      	; in:	[A] contains the paramvalue
    1074.  00:4B88                      	; 
    1075.  00:4B88                      	; ! do not change	[BC] this is the data pointer
    1076.  00:4B88                      	;--------------------------------------------------
    1077.  00:4B88                      	; slide the	volume up or down	1 step.
    1078.  00:4B88                      	; The	x or y param  set	the delay*2	(x=up,y=down)
    1079.  00:4B88                      	; With A00 the previous	value	is used.
    1080.  00:4B88                      	
    1081.  00:4B88  DD 77 0C            	ld	(ix+TRACK_cmd_A),a
    1082.  00:4B8B  CB DA               	set	B_TRGCMD,d
    1083.  00:4B8D  C3 22 4A            	jp	_rdc
    1084.  00:4B90                      
    1085.  00:4B90                      decode_cmd8_note_cut:
    1086.  00:4B90  CB DA               	set	B_TRGCMD,d
    1087.  00:4B92  3C                  	inc	a
    1088.  00:4B93  DD 77 0F            	ld	(ix+TRACK_Timer),a		; set	the timer to param y
    1089.  00:4B96  C3 22 4A            	jp 	_rdc
    1090.  00:4B99                      
    1091.  00:4B99                      
    1092.  00:4B99                      decode_cmd9_note_delay:
    1093.  00:4B99  CB 42               	bit	B_TRGNOT,d		; is there a note	in this eventstep?
    1094.  00:4B9B  CA 22 4A            	jp	z,_rdc
    1095.  00:4B9E                      
    1096.  00:4B9E  CB DA               	set	B_TRGCMD,d					; command active
    1097.  00:4BA0  3C                  	inc	a
    1098.  00:4BA1  DD 77 0F            	ld	(ix+TRACK_Timer),a			; set	the timer to param y
    1099.  00:4BA4  DD 7E F6            	ld	a,(ix+TRACK_Note)
    1100.  00:4BA7  DD 77 0E            	ld	(ix+TRACK_cmd_E),a			; store the	new note
    1101.  00:4BAA  3A 28 C0            	ld	a,(replay_previous_note)
    1102.  00:4BAD  DD 77 F6            	ld	(ix+TRACK_Note),a				; restore the old	note
    1103.  00:4BB0  DD CB F9 86         	res	B_TRGNOT,(ix+TRACK_Flags)		; reset any	triggernote
    1104.  00:4BB4                      
    1105.  00:4BB4  C3 22 4A            	jp	_rdc	
    1106.  00:4BB7                      
    1107.  00:4BB7                      
    1108.  00:4BB7                      decode_cmd10_command_end:
    1109.  00:4BB7                      	; in:	[A] contains the paramvalue
    1110.  00:4BB7                      	; 
    1111.  00:4BB7                      	; ! do not change	[BC] this is the data pointer
    1112.  00:4BB7                      	;--------------------------------------------------
    1113.  00:4BB7  CB 9A               	res	B_TRGCMD,d
    1114.  00:4BB9  C3 23 4A            	jp	_rdc_noinc
    1115.  00:4BBC                      	
    1116.  00:4BBC                      
    1117.  00:4BBC                      decode_cmd11_drum:
    1118.  00:4BBC  A7                  	and 	a		; drum reset not supported
    1119.  00:4BBD  28 1F               	jr 	z,0f
    1120.  00:4BBF                      	
    1121.  00:4BBF                      	; Get the base addres of the drum list
    1122.  00:4BBF  87                  	add 	a 
    1123.  00:4BC0  2A 09 C0            	ld	hl,(replay_drumbase)
    1124.  00:4BC3  85                  	add	a,l 
    1125.  00:4BC4  6F                  	ld	l,a
    1126.  00:4BC5  D2 C9 4B            	jp	nc,99f
    1127.  00:4BC8  24                  	inc	h 
    1128.  00:4BC9                      99:
    1129.  00:4BC9  6F                  	ld	l,a
    1130.  00:4BCA                      	; Get the start of the drum macro
    1131.  00:4BCA  7E                  	ld	a,(hl)
    1132.  00:4BCB  23                  	inc	hl
    1133.  00:4BCC  66                  	ld	h,(hl)
    1134.  00:4BCD  6F                  	ld	l,a
    1135.  00:4BCE                      	
    1136.  00:4BCE                      	; Store the length
    1137.  00:4BCE  7E                  	ld	a,(hl)
    1138.  00:4BCF  32 8D C1            	ld	(FM_DRUM_LEN),a
    1139.  00:4BD2  23                  	inc	hl
    1140.  00:4BD3                      	; Store the address
    1141.  00:4BD3  7D                  	ld	a,l
    1142.  00:4BD4  32 8E C1            	ld 	(FM_DRUM_MACRO),a
    1143.  00:4BD7  7C                  	ld	a,h
    1144.  00:4BD8  32 8F C1            	ld	(FM_DRUM_MACRO+1),a
    1145.  00:4BDB  C3 22 4A            	jp	_rdc		
    1146.  00:4BDE                      0:
    1147.  00:4BDE  0B                  	dec	bc
    1148.  00:4BDF  C3 22 4A            	jp	_rdc		
    1149.  00:4BE2                      	
    1150.  00:4BE2                      
    1151.  00:4BE2                      decode_cmd12_short_arp:
    1152.  00:4BE2  DD 77 0E            	ld	(ix+TRACK_cmd_E),a		; store the halve not to add
    1153.  00:4BE5  DD 36 0F 00         	ld	(ix+TRACK_Timer),0
    1154.  00:4BE9                      
    1155.  00:4BE9  CB DA               	set	B_TRGCMD,d		; command active
    1156.  00:4BEB  C3 22 4A            	jp	_rdc	
    1157.  00:4BEE                      	
    1158.  00:4BEE                      	
    1159.  00:4BEE                      decode_cmd13_fine_up:
    1160.  00:4BEE                      decode_cmd14_fine_down:
    1161.  00:4BEE  DD 77 0E            	ld	(ix+TRACK_cmd_E),a
    1162.  00:4BF1  DD 36 0F 02         	ld	(ix+TRACK_Timer),2
    1163.  00:4BF5  CB DA               	set	B_TRGCMD,d		; command active
    1164.  00:4BF7  C3 22 4A            	jp	_rdc	
    1165.  00:4BFA                      
    1166.  00:4BFA                      decode_cmd15_notelink:
    1167.  00:4BFA  CB 82               	res	B_TRGNOT,d
    1168.  00:4BFC  CB E2               	set 	B_KEYON,d
    1169.  00:4BFE  0B                  	dec 	bc
    1170.  00:4BFF  C3 22 4A            	jp	_rdc	
    1171.  00:4C02                      
    1172.  00:4C02                      decode_cmd16_track_detune:
    1173.  00:4C02                      	; This command sets the	detune of the track.
    1174.  00:4C02  5F                  	ld	e,a
    1175.  00:4C03  E6 07               	and	0x07		; low	4 bits is value
    1176.  00:4C05  CB 5B               	bit	3,e		; Center around 8
    1177.  00:4C07  CA 17 4C            	jp	z,.pos
    1178.  00:4C0A  3C                  	inc	a
    1179.  00:4C0B  ED 44               	neg			; make correct value
    1180.  00:4C0D  DD 77 04            	ld	(ix+TRACK_cmd_detune),a
    1181.  00:4C10  DD 36 05 FF         	ld	(ix+TRACK_cmd_detune+1),0xff
    1182.  00:4C14                      
    1183.  00:4C14  C3 22 4A            	jp	_rdc	
    1184.  00:4C17                      
    1185.  00:4C17                      .pos:
    1186.  00:4C17  DD 77 04            	ld	(ix+TRACK_cmd_detune),a
    1187.  00:4C1A  DD 36 05 00         	ld	(ix+TRACK_cmd_detune+1),0x00	
    1188.  00:4C1E                      
    1189.  00:4C1E  C3 22 4A            	jp	_rdc	
    1190.  00:4C21                      
    1191.  00:4C21                      
    1192.  00:4C21                      
    1193.  00:4C21                      decode_cmd17_trigger:
    1194.  00:4C21  32 02 C0            	ld	(replay_trigger),a
    1195.  00:4C24  C3 22 4A            	jp	_rdc		
    1196.  00:4C27                      
    1197.  00:4C27                      
    1198.  00:4C27                      decode_cmd18_speed:
    1199.  00:4C27  32 1F C0            	ld	(replay_speed),a
    1200.  00:4C2A                      	;--- Reset Timer == 0
    1201.  00:4C2A  CB 3F               	srl	a				; divide speed with 2
    1202.  00:4C2C  5F                  	ld	e,a
    1203.  00:4C2D  3E 00               	ld	a,0				
    1204.  00:4C2F  8F                  	adc	a				; store carry of shift as subtimer
    1205.  00:4C30  32 20 C0            	ld	(replay_speed_subtimer),a
    1206.  00:4C33  83                  	add	a,e
    1207.  00:4C34  32 21 C0            	ld	(replay_speed_timer),a
    1208.  00:4C37                      
    1209.  00:4C37  C3 22 4A            	jp	_rdc	
    1210.  00:4C3A                      	
    1211.  00:4C3A                      decode_cmd19_tone_panning:
    1212.  00:4C3A  C3 22 4A            	jp	_rdc	
    1213.  00:4C3D                      
    1214.  00:4C3D                      decode_cmd20_noise_panning:
    1215.  00:4C3D  C3 22 4A            	jp	_rdc
    1216.  00:4C40                      
    1217.  00:4C40                      decode_cmd21_chan_setup:
    1218.  00:4C40  C3 22 4A            	jp	_rdc
    1219.  00:4C43                      
    1220.  00:4C43                      
    1221.  00:4C43                      
    1222.  00:4C43                      ;===========================================================
    1223.  00:4C43                      ; ---replay_route
    1224.  00:4C43                      ; Output the data	to the CHIP	registers
    1225.  00:4C43                      ; 
    1226.  00:4C43                      ; in HL is the current tone freq
    1227.  00:4C43                      ; in D is TRACK_FLAGS  
    1228.  00:4C43                      ;===========================================================
    1229.  00:4C43                      process_data_chan:
    1230.  00:4C43                      
    1231.  00:4C43                      	;-- set the	mixer	right
    1232.  00:4C43  21 92 C1            	ld	hl,FM_regMIXER   
    1233.  00:4C46  CB 0E               	rrc	(hl)
    1234.  00:4C48                      
    1235.  00:4C48                      	;===== 
    1236.  00:4C48                      	; Speed equalization check
    1237.  00:4C48                      	;=====
    1238.  00:4C48  3A 31 C0            	ld	a,(equalization_flag)			; check for speed equalization
    1239.  00:4C4B  A7                  	and	a
    1240.  00:4C4C  C2 9D 4C            	jp	nz,process_noNoteTrigger		; Only process instruments macro
    1241.  00:4C4F                      	
    1242.  00:4C4F                      	
    1243.  00:4C4F                      	;=====
    1244.  00:4C4F                      	; COMMAND
    1245.  00:4C4F                      	;=====
    1246.  00:4C4F  DD 36 0B 00         	ld	(ix+TRACK_cmd_NoteAdd),0			; Always reset note add
    1247.  00:4C53                      	
    1248.  00:4C53  CB 5A               	bit	B_TRGCMD,d	;(ix+TRACK_Flags)
    1249.  00:4C55  CA 74 4C            	jp	z,process_note
    1250.  00:4C58                      
    1251.  00:4C58  21 17 4E            	ld	hl,process_cmd_list
    1252.  00:4C5B  DD 7E F0            	ld	a,(ix+TRACK_Command)
    1253.  00:4C5E                      ;[DEBUG]	
    1254.  00:4C5E  FE 0A               	cp	10
    1255.  00:4C60  DA 68 4C            	jp	c,99f
    1256.  00:4C63  F3                  	di
    1257.  00:4C64  76                  1:	halt
    1258.  00:4C65  C3 64 4C            	jp	1b
    1259.  00:4C68                      
    1260.  00:4C68                      99:
    1261.  00:4C68                      ;[/DEBUG]
    1262.  00:4C68  87                  	add	a
    1263.  00:4C69  85                  	add	a,l
    1264.  00:4C6A  6F                  	ld	l,a
    1265.  00:4C6B  D2 6F 4C            	jp	nc,.skip
    1266.  00:4C6E  24                  	inc	h
    1267.  00:4C6F                      .skip:
    1268.  00:4C6F  7E                  	ld	a,(hl)
    1269.  00:4C70  23                  	inc	hl
    1270.  00:4C71  66                  	ld	h,(hl)
    1271.  00:4C72  6F                  	ld	l,a	
    1272.  00:4C73  E9                  	jp	(hl)
    1273.  00:4C74                      
    1274.  00:4C74                      
    1275.  00:4C74                      process_commandEND:
    1276.  00:4C74                      process_note:
    1277.  00:4C74                      
    1278.  00:4C74                      	;=====
    1279.  00:4C74                      	; NOTE
    1280.  00:4C74                      	;=====
    1281.  00:4C74                      	;--- Check if we need to trigger a new note
    1282.  00:4C74  CB 42               	bit	B_TRGNOT,d	;(ix+TRACK_Flags)
    1283.  00:4C76  CA 9D 4C            	jp	z,process_noNoteTrigger
    1284.  00:4C79                      	
    1285.  00:4C79                      
    1286.  00:4C79                      process_triggerNote:	
    1287.  00:4C79                      	;--- get new Note
    1288.  00:4C79  CB 82               	res	B_TRGNOT,d		;(ix+TRACK_Flags)		; reset trigger note flag
    1289.  00:4C7B  CB CA               	set	B_ACTNOT,d		;(ix+TRACK_Flags)		; set	note active	flag
    1290.  00:4C7D                      
    1291.  00:4C7D  DD 6E F3            	ld	l,(ix+TRACK_MacroStart)
    1292.  00:4C80  DD 66 F4            	ld	h,(ix+TRACK_MacroStart+1)
    1293.  00:4C83                      	;--- Store the macro start	
    1294.  00:4C83  DD 75 F1            	ld	(ix+TRACK_MacroPointer),l
    1295.  00:4C86  DD 74 F2            	ld	(ix+TRACK_MacroPointer+1),h	
    1296.  00:4C89                      
    1297.  00:4C89  21 00 00            	ld	hl,0
    1298.  00:4C8C  ED 73 00 C0         	ld	(_SP_Storage),sp
    1299.  00:4C90  DD F9               	ld	sp,ix
    1300.  00:4C92  F1                  	pop	af
    1301.  00:4C93  F1                  	pop	af
    1302.  00:4C94  E5                  	push	hl
    1303.  00:4C95  E5                  	push	hl		
    1304.  00:4C96  E5                  	push	hl
    1305.  00:4C97  E5                  	push	hl
    1306.  00:4C98  E5                  	push	hl
    1307.  00:4C99  ED 7B 00 C0         	ld	sp,(_SP_Storage)
    1308.  00:4C9D                      
    1309.  00:4C9D                      ;	ld	(ix+TRACK_ToneAdd),0
    1310.  00:4C9D                      ;	ld	(ix+TRACK_ToneAdd+1),0
    1311.  00:4C9D                      ;	ld	(ix+TRACK_VolumeAdd),0	
    1312.  00:4C9D                      ;	ld	(ix+TRACK_cmd_ToneAdd),0
    1313.  00:4C9D                      ;	ld	(ix+TRACK_cmd_ToneAdd+1),0
    1314.  00:4C9D                      ;	ld	(ix+TRACK_cmd_VolumeAdd),0
    1315.  00:4C9D                      ;	ld	(ix+TRACK_Noise),0
    1316.  00:4C9D                      ;	ld	(ix+TRACK_cmd_ToneSlideAdd),0
    1317.  00:4C9D                      ;	ld	(ix+TRACK_cmd_ToneSlideAdd+1),0
    1318.  00:4C9D                      
    1319.  00:4C9D                      process_noNoteTrigger:
    1320.  00:4C9D                      	;Get note freq
    1321.  00:4C9D  DD 7E F6            	ld	a,(ix+TRACK_Note)
    1322.  00:4CA0  DD 86 0B            	add	a,(ix+TRACK_cmd_NoteAdd)
    1323.  00:4CA3  87                  	add	a
    1324.  00:4CA4  08                  	ex	af,af'			;'store the	note offset
    1325.  00:4CA5                      
    1326.  00:4CA5                      	;==============
    1327.  00:4CA5                      	; Macro instrument
    1328.  00:4CA5                      	;==============
    1329.  00:4CA5  CB 4A               	bit	B_ACTNOT,d			
    1330.  00:4CA7  CA 0F 4E            	jp	z,process_noNoteActive
    1331.  00:4CAA                      	
    1332.  00:4CAA                      	;--- Get the macro len and loop
    1333.  00:4CAA  DD 6E F1            	ld	l,(ix+TRACK_MacroPointer)
    1334.  00:4CAD  DD 66 F2            	ld	h,(ix+TRACK_MacroPointer+1)
    1335.  00:4CB0                      
    1336.  00:4CB0  5E                  	ld	e,(hl)				; info byte
    1337.  00:4CB1  23                  	inc	hl
    1338.  00:4CB2  CB 5B               	bit	3,e					; Volume change
    1339.  00:4CB4  C2 BD 4C            	jp	nz,_vol_change
    1340.  00:4CB7  DD 7E FD            	ld	a,(ix+TRACK_VolumeAdd)
    1341.  00:4CBA  C3 DA 4C            	jp	_noVolumeChange
    1342.  00:4CBD                      	
    1343.  00:4CBD                      	;--- Volume change
    1344.  00:4CBD                      _vol_change:
    1345.  00:4CBD  7E                  	ld	a,(hl)
    1346.  00:4CBE  23                  	inc	hl
    1347.  00:4CBF                      	
    1348.  00:4CBF  CB 53               	bit	2,e
    1349.  00:4CC1  CA D7 4C            	jp	z,_vol_base
    1350.  00:4CC4                      _vol_rel:
    1351.  00:4CC4  DD 86 FD            	add	 (ix+TRACK_VolumeAdd)
    1352.  00:4CC7  FE 10               	cp	16
    1353.  00:4CC9  DA D7 4C            	jp	c,_vol_base
    1354.  00:4CCC  FE 80               	cp	128
    1355.  00:4CCE  D2 D6 4C            	jp	nc,.skip
    1356.  00:4CD1  3E 0F               	ld	a,$0f
    1357.  00:4CD3  C3 D7 4C            	jp	_vol_base
    1358.  00:4CD6                      .skip:	
    1359.  00:4CD6  AF                  	xor	a
    1360.  00:4CD7                      	
    1361.  00:4CD7                      _vol_base:
    1362.  00:4CD7  DD 77 FD            	ld	(ix+TRACK_VolumeAdd),a
    1363.  00:4CDA                      
    1364.  00:4CDA                      	;---- envelope check
    1365.  00:4CDA                      	; is done here to be able to continue
    1366.  00:4CDA                      	; macro volume values.
    1367.  00:4CDA                      ;	bit	B_TRGENV,d		;'(IX+TRACK_Flags)
    1368.  00:4CDA                      ;	jp	z,_noEnv		; if not set then normal volume calculation
    1369.  00:4CDA                      ;	ld	a,16			; set volume to 16 == envelope
    1370.  00:4CDA                      ;	ld	(FM_regVOLF),a
    1371.  00:4CDA                      ;	jp	_noVolume	
    1372.  00:4CDA                      	
    1373.  00:4CDA                      _noVolumeChange:
    1374.  00:4CDA  DD B6 F7            	or	(ix+TRACK_Volume)
    1375.  00:4CDD  4F                  	ld	c,a			; store volume add
    1376.  00:4CDE                      
    1377.  00:4CDE  DD 7E FF            	ld 	a,(ix+TRACK_cmd_VolumeAdd)
    1378.  00:4CE1  17                  	rla				; shift to detect shift
    1379.  00:4CE2  DA EF 4C            	jp 	c,.sub_Vadd		
    1380.  00:4CE5                      .add_Vadd:  
    1381.  00:4CE5  81                  	add	a,c
    1382.  00:4CE6  D2 FB 4C            	jp	nc,_Vadd
    1383.  00:4CE9  79                  	ld	a,c
    1384.  00:4CEA  F6 F0               	or	0xf0
    1385.  00:4CEC  C3 FB 4C            	jp	_Vadd	
    1386.  00:4CEF                      .sub_Vadd:	
    1387.  00:4CEF  47                  	ld	b,a
    1388.  00:4CF0  AF                  	xor	a
    1389.  00:4CF1  90                  	sub 	b
    1390.  00:4CF2  47                  	ld	b,a
    1391.  00:4CF3  79                  	ld	a,c
    1392.  00:4CF4  90                  	sub	a,b
    1393.  00:4CF5  D2 FB 4C            	jp 	nc,.skip2
    1394.  00:4CF8  79                  	ld	a,c
    1395.  00:4CF9  E6 0F                	and	0x0f
    1396.  00:4CFB                      .skip2:
    1397.  00:4CFB                      
    1398.  00:4CFB                      	
    1399.  00:4CFB                      	;-- next is _Vadd
    1400.  00:4CFB                      _Vadd:
    1401.  00:4CFB                      	;--- apply main volume balance
    1402.  00:4CFB  ED 4B 29 C0         	ld	bc,(replay_mainvol)
    1403.  00:4CFF  81                  	add	a,c
    1404.  00:4D00  4F                  	ld	c,a
    1405.  00:4D01  D2 05 4D            	jp	nc,.skip
    1406.  00:4D04  04                  	inc	b
    1407.  00:4D05                      .skip:
    1408.  00:4D05  0A                  	ld	a,(bc)	
    1409.  00:4D06                      	; Test which CHIP.
    1410.  00:4D06  CB 7A               	bit	B_PSGFM,d		;(ix+TRACK_Flags)
    1411.  00:4D08  C2 0F 4D            	jp	nz,.skip2
    1412.  00:4D0B  1F                  	rra
    1413.  00:4D0C  1F                  	rra
    1414.  00:4D0D  1F                  	rra
    1415.  00:4D0E  1F                  	rra
    1416.  00:4D0F                      .skip2:
    1417.  00:4D0F  E6 0F               	and	0x0f
    1418.  00:4D11  32 81 C1            	ld	(FM_regVOLF),a
    1419.  00:4D14                      
    1420.  00:4D14                      _noVolume:
    1421.  00:4D14                      	;-------------------------------
    1422.  00:4D14                      	;
    1423.  00:4D14                      	; NOISE
    1424.  00:4D14                      	;
    1425.  00:4D14                      	;-------------------------------
    1426.  00:4D14  CB 7B               	bit 	7,e			; test if noise value
    1427.  00:4D16  CA 23 4D            	jp	z,_noNoise
    1428.  00:4D19                      
    1429.  00:4D19                      	;--- prevent FM and noise
    1430.  00:4D19  7E                  	ld	a,(hl)		; get the value	
    1431.  00:4D1A  23                  	inc	hl	
    1432.  00:4D1B                      	
    1433.  00:4D1B  CB 7A               	bit	B_PSGFM,d		;(ix+TRACK_Flags)
    1434.  00:4D1D  C2 23 4D            	jp	nz,_noNoise		; Noise and Link not at the same time
    1435.  00:4D20                      	
    1436.  00:4D20                      	;--- Set the mixer for noise
    1437.  00:4D20                      ;	ld	a,(FM_regMIXER)
    1438.  00:4D20                      ;	or	128
    1439.  00:4D20                      ;	ld	(FM_regMIXER),a
    1440.  00:4D20                      
    1441.  00:4D20                      ;	bit	5,e
    1442.  00:4D20                      ;	jp	z,_noLink
    1443.  00:4D20                      ;	ld	a,(hl)	; get the deviation	
    1444.  00:4D20                      ;	inc	hl
    1445.  00:4D20                      ;	bit	6,e
    1446.  00:4D20                      ;	jp	z,.skip
    1447.  00:4D20                      ;	add	(ix+TRACK_Noise)
    1448.  00:4D20                      ;.skip:	
    1449.  00:4D20  32 68 C1            	ld	(PSG_regNOISE),a
    1450.  00:4D23                      	
    1451.  00:4D23                      	
    1452.  00:4D23                      _noNoise:
    1453.  00:4D23                      	;-------------------------------
    1454.  00:4D23                      	;
    1455.  00:4D23                      	; NOISE volume
    1456.  00:4D23                      	;
    1457.  00:4D23                      	;-------------------------------
    1458.  00:4D23  CB 73               	bit 	6,e			; test if noise volume
    1459.  00:4D25  CA 43 4D            	jp	z,_noNoiseVol
    1460.  00:4D28                      	
    1461.  00:4D28                      	;--- prevent FM and noise
    1462.  00:4D28  7E                  	ld	a,(hl)		; get the volume	
    1463.  00:4D29  23                  	inc	hl
    1464.  00:4D2A                      	
    1465.  00:4D2A  CB 7A               	bit	B_PSGFM,d		;(ix+TRACK_Flags)
    1466.  00:4D2C  C2 51 4D            	jp	nz,_noLink		; Noise and Link not at the same time
    1467.  00:4D2F                      	
    1468.  00:4D2F  DD B6 F7            	or	(ix+TRACK_Volume)
    1469.  00:4D32                      	;--- apply main volume balance
    1470.  00:4D32  ED 4B 29 C0         	ld	bc,(replay_mainvol)
    1471.  00:4D36  81                  	add	a,c
    1472.  00:4D37  4F                  	ld	c,a
    1473.  00:4D38  D2 3C 4D            	jp	nc,.skip
    1474.  00:4D3B  04                  	inc	b
    1475.  00:4D3C                      .skip:
    1476.  00:4D3C  0A                  	ld	a,(bc)
    1477.  00:4D3D  32 6D C1            	ld	(PSG_regVOLN),a
    1478.  00:4D40  C3 51 4D            	jp	_noLink
    1479.  00:4D43                      
    1480.  00:4D43                      
    1481.  00:4D43                      _noNoiseVol
    1482.  00:4D43                      	;-------------------------------
    1483.  00:4D43                      	;
    1484.  00:4D43                      	; VoiceLink
    1485.  00:4D43                      	;
    1486.  00:4D43                      	;-------------------------------
    1487.  00:4D43  CB 4B               	bit 	1,e
    1488.  00:4D45  CA 51 4D            	jp	z,_noLink
    1489.  00:4D48                      
    1490.  00:4D48  7E                  	ld	a,(hl)					; get the new hw voice	
    1491.  00:4D49  23                  	inc	hl
    1492.  00:4D4A                      	
    1493.  00:4D4A  DD CB F9 F6         	set 	B_TRGVOI,(ix+TRACK_Flags)
    1494.  00:4D4E  DD 77 F8            	ld	(ix+TRACK_Voice),a			; set new voice to be loaded
    1495.  00:4D51                      
    1496.  00:4D51                      
    1497.  00:4D51                      
    1498.  00:4D51                      _noLink
    1499.  00:4D51                      	;-------------------------------
    1500.  00:4D51                      	;
    1501.  00:4D51                      	; TONE 
    1502.  00:4D51                      	;
    1503.  00:4D51                      	;-------------------------------
    1504.  00:4D51                      
    1505.  00:4D51                      
    1506.  00:4D51  DD 46 FB            	ld	b,(ix+TRACK_ToneAdd)	; get	the current	deviation	
    1507.  00:4D54  DD 4E FC            	ld	c,(ix+TRACK_ToneAdd+1)
    1508.  00:4D57                      
    1509.  00:4D57  CB 63               	bit 	4,e
    1510.  00:4D59  CA 6E 4D            	jp	z,process_noToneAdd
    1511.  00:4D5C                      	
    1512.  00:4D5C  7E                  	ld	a,(hl)
    1513.  00:4D5D  23                  	inc	hl
    1514.  00:4D5E  81                  	add	c
    1515.  00:4D5F  4F                  	ld	c,a
    1516.  00:4D60  DD 71 FC            	ld	(ix+TRACK_ToneAdd+1),c
    1517.  00:4D63  D2 67 4D            	jp	nc,.skip
    1518.  00:4D66  04                  	inc	b
    1519.  00:4D67                      .skip:
    1520.  00:4D67  7E                  	ld	a,(hl)
    1521.  00:4D68  23                  	inc	hl
    1522.  00:4D69  80                  	add	b
    1523.  00:4D6A  47                  	ld	b,a
    1524.  00:4D6B  DD 70 FB            	ld	(ix+TRACK_ToneAdd),b
    1525.  00:4D6E                      	
    1526.  00:4D6E                      	
    1527.  00:4D6E                      process_noToneAdd:	
    1528.  00:4D6E                      	;---- check for macro end
    1529.  00:4D6E  CB 43               	bit	0,e		
    1530.  00:4D70  CA 77 4D            	jp	z,.noend
    1531.  00:4D73                      	
    1532.  00:4D73  7E                  	ld	a,(hl)
    1533.  00:4D74  23                  	inc	hl
    1534.  00:4D75  66                  	ld	h,(hl)
    1535.  00:4D76  6F                  	ld	l,a
    1536.  00:4D77                      
    1537.  00:4D77                      .noend:
    1538.  00:4D77                      	;--- Set the mixer bit (T)
    1539.  00:4D77  CB 6B               	bit	5,e		; do we have tone?
    1540.  00:4D79  CA 84 4D            	jp	z,process_noToneBit
    1541.  00:4D7C                      
    1542.  00:4D7C                      	;-- enable tone output
    1543.  00:4D7C  3A 92 C1            	ld	a,(FM_regMIXER)
    1544.  00:4D7F  F6 10               	or	16
    1545.  00:4D81  32 92 C1            	ld	(FM_regMIXER),a
    1546.  00:4D84                      	
    1547.  00:4D84                      process_noToneBit:	
    1548.  00:4D84  DD 75 F1            	ld	(ix+TRACK_MacroPointer),l	;--- store pointer for next time
    1549.  00:4D87  DD 74 F2            	ld	(ix+TRACK_MacroPointer+1),h	
    1550.  00:4D8A                      
    1551.  00:4D8A  08                  	ex	af,af'			;';restore note offset
    1552.  00:4D8B  2A 2D C0            	ld	hl,(replay_tonetable)
    1553.  00:4D8E  85                  	add	a,l
    1554.  00:4D8F  6F                  	ld	l,a
    1555.  00:4D90  D2 94 4D            	jp	nc,.skip
    1556.  00:4D93  24                  	inc	h
    1557.  00:4D94                      .skip:
    1558.  00:4D94  7E                  	ld	a,(hl)	;--- Store the note tone value in hl
    1559.  00:4D95  23                  	inc	hl
    1560.  00:4D96  66                  	ld	h,(hl)
    1561.  00:4D97  6F                  	ld	l,a
    1562.  00:4D98                      		
    1563.  00:4D98  09                  	add	hl,bc		;--- Store tone deviation		
    1564.  00:4D99                      
    1565.  00:4D99  7A                  	ld	a,d
    1566.  00:4D9A  DD 72 F9            	ld	(ix+TRACK_Flags),d
    1567.  00:4D9D                      	; set	the detune.
    1568.  00:4D9D  ED 73 00 C0         	ld	(_SP_Storage),sp
    1569.  00:4DA1  DD F9               	ld	sp,ix
    1570.  00:4DA3  D1                  	pop	de		; cmd detune
    1571.  00:4DA4  19                  	add	hl,de
    1572.  00:4DA5  C1                  	pop	bc		; cmd toneadd
    1573.  00:4DA6  09                  	add	hl,bc
    1574.  00:4DA7  C1                  	pop	bc		; cmd tone slide add
    1575.  00:4DA8  09                  	add	hl,bc
    1576.  00:4DA9  ED 7B 00 C0         	ld	sp,(_SP_Storage)
    1577.  00:4DAD                      
    1578.  00:4DAD                      	;-----------------
    1579.  00:4DAD                      	; FM Octave wrapper
    1580.  00:4DAD                      	; enable slides over multiple octaves.
    1581.  00:4DAD                      	; [DE] still contains tone slide add.
    1582.  00:4DAD                      	;-----------------
    1583.  00:4DAD  CB 7F               	bit	B_PSGFM,a			;(ix+TRACK_Flags)
    1584.  00:4DAF  C8                  	ret	z				; skip wrapper for PSG
    1585.  00:4DB0                      
    1586.  00:4DB0  CB 44               	bit	0,h
    1587.  00:4DB2  CA DC 4D            	jp	z,_wrap_lowcheck
    1588.  00:4DB5                      _wrap_highcheck:
    1589.  00:4DB5  7D                  	ld	a,l
    1590.  00:4DB6  FE 5A               	cp	$5a				; $5a is the strict limit
    1591.  00:4DB8  DA FF 4D            	jp	c,_wrap_skip		; stop if smaller	
    1592.  00:4DBB                      	
    1593.  00:4DBB  E5                  	push	hl
    1594.  00:4DBC  D5                  	push	de
    1595.  00:4DBD                      	
    1596.  00:4DBD                      	;--- Set new tone value for same note 1 octave lower
    1597.  00:4DBD  CB 3F               	srl	a
    1598.  00:4DBF  CB 44               	bit 	0,h		; test 9th bit
    1599.  00:4DC1  CA C6 4D            	jp	z,99f
    1600.  00:4DC4  C6 80               	add	128
    1601.  00:4DC6                      99:
    1602.  00:4DC6  5F                  	ld	e,a
    1603.  00:4DC7                      ;	ld	d,0
    1604.  00:4DC7                      	;--- set octave higher
    1605.  00:4DC7  7C                  	ld	a,h
    1606.  00:4DC8  E6 FE               	and	$fe
    1607.  00:4DCA  C6 02               	add	$02
    1608.  00:4DCC                      ;	add	d		; merge with tone value
    1609.  00:4DCC  57                  	ld	d,a
    1610.  00:4DCD                      	;--- get difference between now and new
    1611.  00:4DCD  EB                  	ex	de,hl
    1612.  00:4DCE  AF                  	xor	a		; reset carry flag
    1613.  00:4DCF  ED 52               	sbc	hl,de
    1614.  00:4DD1                      	;--- add difference to current slide
    1615.  00:4DD1  D1                  	pop	de		; restore slide
    1616.  00:4DD2  19                  	add	hl,de
    1617.  00:4DD3  DD 75 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),l
    1618.  00:4DD6  DD 74 01            	ld	(ix+TRACK_cmd_ToneSlideAdd+1),h	
    1619.  00:4DD9  E1                  	pop	hl	
    1620.  00:4DDA  18 23               	jr.	_wrap_skip
    1621.  00:4DDC                      	
    1622.  00:4DDC                      _wrap_lowcheck:
    1623.  00:4DDC  7D                  	ld	a,l
    1624.  00:4DDD  FE 3B               	cp	$3b		; $ad is the strict limit
    1625.  00:4DDF  30 1E               	jr.	nc,_wrap_skip		; stop if smaller
    1626.  00:4DE1                      
    1627.  00:4DE1                      
    1628.  00:4DE1  E5                  	push 	hl		; store freq
    1629.  00:4DE2  D5                  	push	de		; store slide
    1630.  00:4DE3                      	;--- set new tone value for same note (but octave lower)
    1631.  00:4DE3  87                  	add	a,a		; multiply by 2 in de 
    1632.  00:4DE4  5F                  	ld	e,a
    1633.  00:4DE5  16 00               	ld	d,0
    1634.  00:4DE7  D2 EB 4D            	jp	nc,99f
    1635.  00:4DEA  14                  	inc	d	
    1636.  00:4DEB                      99:
    1637.  00:4DEB                      	;--- set octave higher
    1638.  00:4DEB  7C                  	ld	a,h
    1639.  00:4DEC  E6 FE               	and	$fe
    1640.  00:4DEE  D6 02               	sub	$02
    1641.  00:4DF0  82                  	add	d		; merge with tone value
    1642.  00:4DF1  57                  	ld	d,a
    1643.  00:4DF2                      	;--- get difference between now and new
    1644.  00:4DF2  EB                  	ex	de,hl
    1645.  00:4DF3  AF                  	xor	a		; reset carry flag
    1646.  00:4DF4  ED 52               	sbc	hl,de
    1647.  00:4DF6                      	;--- add difference to current slide
    1648.  00:4DF6  D1                  	pop	de		; restore slide
    1649.  00:4DF7  19                  	add	hl,de	
    1650.  00:4DF8                      	
    1651.  00:4DF8  DD 75 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),l
    1652.  00:4DFB  DD 74 01            	ld	(ix+TRACK_cmd_ToneSlideAdd+1),h	
    1653.  00:4DFE  E1                  	pop	hl	
    1654.  00:4DFF                      	
    1655.  00:4DFF                      _wrap_skip:
    1656.  00:4DFF                      	; replace the last pushed value on stack
    1657.  00:4DFF  D1                  	pop	de
    1658.  00:4E00  EB                  	ex	de,hl
    1659.  00:4E01  73                  	ld	(hl),e
    1660.  00:4E02  23                  	inc	hl
    1661.  00:4E03  7A                  	ld	a,d	; reset key on and sustain
    1662.  00:4E04  E6 0F               	and	$0f
    1663.  00:4E06  57                  	ld	d,a
    1664.  00:4E07  DD 7E F9            	ld	a,(ix+TRACK_Flags)	; Add the sustain and key bits.
    1665.  00:4E0A  E6 30               	and	16+32	
    1666.  00:4E0C  B2                  	or	d
    1667.  00:4E0D  77                  	ld	(hl),a
    1668.  00:4E0E  C9                  	ret
    1669.  00:4E0F                      	
    1670.  00:4E0F                      	
    1671.  00:4E0F                      process_noNoteActive:
    1672.  00:4E0F  AF                  	xor	a
    1673.  00:4E10  32 81 C1            	ld	(FM_regVOLF),a
    1674.  00:4E13  DD 72 F9            	ld	(ix+TRACK_Flags),d
    1675.  00:4E16  C9                  	ret	
    1676.  00:4E17                      
    1677.  00:4E17                      ;---- This is for debugging only	
    1678.  00:4E17                      ;stop_debug:
    1679.  00:4E17                      ;	halt
    1680.  00:4E17                      ;	jp	stop_debug	
    1681.  00:4E17                      ;	
    1682.  00:4E17                      ;PROCESS_CMDLIST:	
    1683.  00:4E17                      ;[13]	dw 	stop_debug
    1684.  00:4E17                      
    1685.  00:4E17                      process_cmd_list:
    1686.  00:4E17                      	; This list only contains the primary commands.
    1687.  00:4E17  2B 4E               	dw	process_cmd0_arpeggio		
    1688.  00:4E19  62 4E               	dw	process_cmd1_port_up		
    1689.  00:4E1B  76 4E               	dw	process_cmd2_port_down		
    1690.  00:4E1D  8A 4E               	dw	process_cmd3_port_tone		
    1691.  00:4E1F  CB 4E               	dw	process_cmd4_vibrato		
    1692.  00:4E21  0D 4F               	dw	process_cmd5_vibrato_port_tone	
    1693.  00:4E23  13 4F               	dw	process_cmd6_vibrato_vol		
    1694.  00:4E25  19 4F               	dw	process_cmd7_vol_slide		
    1695.  00:4E27  46 4F               	dw	process_cmd8_note_cut		
    1696.  00:4E29  53 4F               	dw	process_cmd9_note_delay		
    1697.  00:4E2B                      
    1698.  00:4E2B                      			
    1699.  00:4E2B                      process_cmd0_arpeggio:
    1700.  00:4E2B  DD 7E 0F            	ld	a,(ix+TRACK_Timer)
    1701.  00:4E2E  CB 47               	bit	0,a
    1702.  00:4E30  CA 47 4E            	jp	z,.step2
    1703.  00:4E33                      
    1704.  00:4E33                      	;--- set x
    1705.  00:4E33  DD 36 0F 02         	ld	(ix+TRACK_Timer),2
    1706.  00:4E37  AF                  	xor	a
    1707.  00:4E38  DD 7E 05            	ld	a,(ix+TRACK_cmd_0)
    1708.  00:4E3B  E6 F0               	and	0xf0
    1709.  00:4E3D  1F                  	rra
    1710.  00:4E3E  1F                  	rra
    1711.  00:4E3F  1F                  	rra
    1712.  00:4E40  1F                  	rra
    1713.  00:4E41  DD 77 0B            	ld	(ix+TRACK_cmd_NoteAdd),a		
    1714.  00:4E44  C3 74 4C            	jp	process_commandEND
    1715.  00:4E47                      
    1716.  00:4E47                      	
    1717.  00:4E47                      .step2:
    1718.  00:4E47  CB 4F               	bit	1,a
    1719.  00:4E49  CA 5B 4E            	jp	z,.step3
    1720.  00:4E4C                      
    1721.  00:4E4C                      	;--- set y
    1722.  00:4E4C  DD 36 0F 00         	ld	(ix+TRACK_Timer),0
    1723.  00:4E50  DD 7E 05            	ld	a,(ix+TRACK_cmd_0)
    1724.  00:4E53  E6 0F               	and	0x0f
    1725.  00:4E55  DD 77 0B            	ld	(ix+TRACK_cmd_NoteAdd),a		
    1726.  00:4E58  C3 74 4C            	jp	process_commandEND
    1727.  00:4E5B                      	
    1728.  00:4E5B                      .step3:
    1729.  00:4E5B                      	;--- set none
    1730.  00:4E5B  DD 36 0F 01         	ld	(ix+TRACK_Timer),1
    1731.  00:4E5F  C3 74 4C            	jp	process_commandEND
    1732.  00:4E62                      	
    1733.  00:4E62                      
    1734.  00:4E62                      	
    1735.  00:4E62                      process_cmd1_port_up:
    1736.  00:4E62  DD 7E 06            	ld	a,(ix+TRACK_cmd_1)	
    1737.  00:4E65                      
    1738.  00:4E65  47                  	ld	b,a
    1739.  00:4E66  DD 7E 00            	ld	a,(ix+TRACK_cmd_ToneSlideAdd)
    1740.  00:4E69  80                  	add	b
    1741.  00:4E6A  DD 77 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),a
    1742.  00:4E6D  D2 74 4C            	jp	nc,process_commandEND
    1743.  00:4E70  DD 34 01            	inc	(ix+TRACK_cmd_ToneSlideAdd+1)
    1744.  00:4E73  C3 74 4C            	jp	process_commandEND
    1745.  00:4E76                      
    1746.  00:4E76                      	
    1747.  00:4E76                      process_cmd2_port_down:	
    1748.  00:4E76  DD 7E 07            	ld	a,(ix+TRACK_cmd_2)
    1749.  00:4E79  47                  	ld	b,a
    1750.  00:4E7A  DD 7E 00            	ld	a,(ix+TRACK_cmd_ToneSlideAdd)
    1751.  00:4E7D  90                  	sub	b
    1752.  00:4E7E  DD 77 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),a
    1753.  00:4E81  D2 74 4C            	jp	nc,process_commandEND
    1754.  00:4E84  DD 35 01            	dec	(ix+TRACK_cmd_ToneSlideAdd+1)
    1755.  00:4E87  C3 74 4C            	jp	process_commandEND
    1756.  00:4E8A                      	
    1757.  00:4E8A                      
    1758.  00:4E8A                      process_cmd3_port_tone:
    1759.  00:4E8A  DD 7E 08            	ld	a,(ix+TRACK_cmd_3)
    1760.  00:4E8D  DD 6E 00            	ld	l,(ix+TRACK_cmd_ToneSlideAdd)
    1761.  00:4E90  DD 66 01            	ld	h,(ix+TRACK_cmd_ToneSlideAdd+1)
    1762.  00:4E93  CB 7C               	bit	7,h
    1763.  00:4E95  CA AB 4E            	jp	z,process_cmd3_sub
    1764.  00:4E98                      process_cmd3_add:
    1765.  00:4E98                      	;pos slide
    1766.  00:4E98  85                  	add	a,l
    1767.  00:4E99  DD 77 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),a
    1768.  00:4E9C  D2 74 4C            	jp	nc,process_commandEND
    1769.  00:4E9F  24                  	inc	h					
    1770.  00:4EA0  CB 7C               	bit	7,h
    1771.  00:4EA2  CA BE 4E            	jp	z,process_cmd3_stop			; delta turned pos ?
    1772.  00:4EA5  DD 74 01            	ld	(ix+TRACK_cmd_ToneSlideAdd+1),h
    1773.  00:4EA8  C3 74 4C            	jp	process_commandEND
    1774.  00:4EAB                      process_cmd3_sub:
    1775.  00:4EAB                      	;negative slide	
    1776.  00:4EAB  4F                  	ld	c,a
    1777.  00:4EAC  AF                  	xor	a
    1778.  00:4EAD  47                  	ld	b,a
    1779.  00:4EAE  ED 42               	sbc	hl,bc
    1780.  00:4EB0  CB 7C               	bit	7,h
    1781.  00:4EB2  C2 BE 4E            	jp	nz,process_cmd3_stop			; delta turned neg ?
    1782.  00:4EB5  DD 75 00            	ld	(ix+TRACK_cmd_ToneSlideAdd),l
    1783.  00:4EB8  DD 74 01            	ld	(ix+TRACK_cmd_ToneSlideAdd+1),h
    1784.  00:4EBB  C3 74 4C            	jp	process_commandEND
    1785.  00:4EBE                      process_cmd3_stop:	
    1786.  00:4EBE  CB 9A               	res	B_TRGCMD,d		;(ix+TRACK_Flags)
    1787.  00:4EC0  DD 36 00 00         	ld	(ix+TRACK_cmd_ToneSlideAdd),0
    1788.  00:4EC4  DD 36 01 00         	ld	(ix+TRACK_cmd_ToneSlideAdd+1),0	
    1789.  00:4EC8  C3 74 4C            	jp	process_commandEND
    1790.  00:4ECB                      
    1791.  00:4ECB                      	;=================================
    1792.  00:4ECB                      	;
    1793.  00:4ECB                      	; Vibrato	
    1794.  00:4ECB                      	;
    1795.  00:4ECB                      	;=================================
    1796.  00:4ECB                      process_cmd4_vibrato:
    1797.  00:4ECB  21 B3 53            	ld	hl,TRACK_Vibrato_sine
    1798.  00:4ECE                      	;--- Get next step
    1799.  00:4ECE  DD 7E 10            	ld	a,(IX+TRACK_Step)
    1800.  00:4ED1  DD 86 0A            	add	(ix+TRACK_cmd_4_step)
    1801.  00:4ED4  E6 3F               	and	$3F			; max	64
    1802.  00:4ED6  DD 77 10            	ld	(ix+TRACK_Step),a
    1803.  00:4ED9                      	
    1804.  00:4ED9  CB 6F               	bit	5,a			; step 32-63 the neg	
    1805.  00:4EDB  CA F9 4E            	jp	z,.pos	
    1806.  00:4EDE                      	
    1807.  00:4EDE                      .neg:
    1808.  00:4EDE  E6 1F               	and	$1f	; make it 32 steps again
    1809.  00:4EE0  DD 86 09            	add	a,(ix+TRACK_cmd_4_depth)
    1810.  00:4EE3  85                  	add	a,l
    1811.  00:4EE4  6F                  	ld	l,a
    1812.  00:4EE5  D2 E9 4E            	jp	nc,99f
    1813.  00:4EE8  24                  	inc	h
    1814.  00:4EE9                      99:
    1815.  00:4EE9  7E                  	ld	a,(hl)
    1816.  00:4EEA  ED 44               	neg
    1817.  00:4EEC  CA 03 4F            	jp	z,.zero			; $ff00 gives strange result ;)	
    1818.  00:4EEF  DD 77 02            	ld	(ix+TRACK_cmd_ToneAdd),a
    1819.  00:4EF2  DD 36 03 FF         	ld	(ix+TRACK_cmd_ToneAdd+1),0xff
    1820.  00:4EF6  C3 74 4C            	jp	process_commandEND	
    1821.  00:4EF9                      
    1822.  00:4EF9                      .pos:
    1823.  00:4EF9  DD 86 09            	add	a,(ix+TRACK_cmd_4_depth)
    1824.  00:4EFC  85                  	add	a,l
    1825.  00:4EFD  6F                  	ld	l,a
    1826.  00:4EFE  D2 02 4F            	jp	nc,99f
    1827.  00:4F01  24                  	inc	h
    1828.  00:4F02                      99:
    1829.  00:4F02  7E                  	ld	a,(hl)
    1830.  00:4F03                      .zero:	
    1831.  00:4F03  DD 77 02            	ld	(ix+TRACK_cmd_ToneAdd),a
    1832.  00:4F06  DD 36 03 00         	ld	(ix+TRACK_cmd_ToneAdd+1),0
    1833.  00:4F0A  C3 74 4C            	jp	process_commandEND	
    1834.  00:4F0D                      
    1835.  00:4F0D                      
    1836.  00:4F0D                      ;	ld	hl,(replay_vib_table)
    1837.  00:4F0D                      ;	;--- Get next step
    1838.  00:4F0D                      ;	ld	a,(IX+TRACK_Step)
    1839.  00:4F0D                      ;	add	(ix+TRACK_cmd_4_step)
    1840.  00:4F0D                      ;	and	$3F			; max	64
    1841.  00:4F0D                      ;	ld	(ix+TRACK_Step),a
    1842.  00:4F0D                      ;	
    1843.  00:4F0D                      ;	bit	5,a			; step 32-63 the neg	
    1844.  00:4F0D                      ;	jp	z,process_cmd4pos
    1845.  00:4F0D                      ;
    1846.  00:4F0D                      ;; neg	
    1847.  00:4F0D                      ;	and	$1f
    1848.  00:4F0D                      ;	add	a,l
    1849.  00:4F0D                      ;	ld	l,a
    1850.  00:4F0D                      ;	jp	nc,.skip
    1851.  00:4F0D                      ;	inc	h
    1852.  00:4F0D                      ;.skip:
    1853.  00:4F0D                      ;	ld	a,(hl)
    1854.  00:4F0D                      ;	;apply depth
    1855.  00:4F0D                      ;	ld	b,(ix+TRACK_cmd_4_depth)
    1856.  00:4F0D                      ;.loop:
    1857.  00:4F0D                      ;	srl	a
    1858.  00:4F0D                      ;	djnz	.loop
    1859.  00:4F0D                      ;;	and	$0f
    1860.  00:4F0D                      ;
    1861.  00:4F0D                      ;	neg
    1862.  00:4F0D                      ;	jp	z,process_cmd4_zero			; $ff00 gives strange result ;)	
    1863.  00:4F0D                      ;	ld	(ix+TRACK_cmd_ToneAdd),a
    1864.  00:4F0D                      ;	ld	(ix+TRACK_cmd_ToneAdd+1),0xff
    1865.  00:4F0D                      ;	jp	process_commandEND
    1866.  00:4F0D                      ;
    1867.  00:4F0D                      ;process_cmd4pos:	
    1868.  00:4F0D                      ;;	and	$1f
    1869.  00:4F0D                      ;	add	a,l
    1870.  00:4F0D                      ;	ld	l,a
    1871.  00:4F0D                      ;	jp	nc,.skip
    1872.  00:4F0D                      ;	inc	h
    1873.  00:4F0D                      ;.skip:
    1874.  00:4F0D                      ;	ld	a,(hl)
    1875.  00:4F0D                      ;	;apply depth
    1876.  00:4F0D                      ;	ld	b,(ix+TRACK_cmd_4_depth)
    1877.  00:4F0D                      ;.loop:
    1878.  00:4F0D                      ;	srl	a
    1879.  00:4F0D                      ;	djnz	.loop
    1880.  00:4F0D                      ;process_cmd4_zero:
    1881.  00:4F0D                      ;	ld	(ix+TRACK_cmd_ToneAdd),a
    1882.  00:4F0D                      ;	ld	(ix+TRACK_cmd_ToneAdd+1),0
    1883.  00:4F0D                      ;	jp	process_commandEND
    1884.  00:4F0D                      		
    1885.  00:4F0D                      	
    1886.  00:4F0D                      
    1887.  00:4F0D                      process_cmd5_vibrato_port_tone:
    1888.  00:4F0D  CD 1F 4F            	call	process_cmdasub
    1889.  00:4F10  C3 8A 4E            	jp	process_cmd3_port_tone
    1890.  00:4F13                      	
    1891.  00:4F13                      process_cmd6_vibrato_vol:
    1892.  00:4F13  CD 1F 4F            	call	process_cmdasub
    1893.  00:4F16  C3 CB 4E            	jp	process_cmd4_vibrato	
    1894.  00:4F19                      
    1895.  00:4F19                      process_cmd7_vol_slide:
    1896.  00:4F19  CD 1F 4F            	call	process_cmdasub
    1897.  00:4F1C  C3 74 4C            	jp	process_commandEND
    1898.  00:4F1F                      
    1899.  00:4F1F                      
    1900.  00:4F1F                      process_cmdasub:
    1901.  00:4F1F  DD 35 0F            	dec	(ix+TRACK_Timer)
    1902.  00:4F22  C0                  	ret	nz
    1903.  00:4F23                      		
    1904.  00:4F23                      	; vol	slide
    1905.  00:4F23  DD 7E 0C            	ld	a,(ix+TRACK_cmd_A)
    1906.  00:4F26  4F                  	ld	c,a
    1907.  00:4F27  E6 7F               	and	$7f
    1908.  00:4F29  DD 77 0F            	ld	(ix+TRACK_Timer),a
    1909.  00:4F2C                      
    1910.  00:4F2C  DD 7E FF            	ld	a,(IX+TRACK_cmd_VolumeAdd)
    1911.  00:4F2F  CB 79               	bit	7,c
    1912.  00:4F31  CA 3D 4F            	jp	z,process_cmda_inc
    1913.  00:4F34                      process_cmda_dec:
    1914.  00:4F34  FE 88               	cp	0x88
    1915.  00:4F36  C8                  	ret	z
    1916.  00:4F37  D6 08               	sub	8
    1917.  00:4F39  DD 77 FF            	ld	(ix+TRACK_cmd_VolumeAdd),a
    1918.  00:4F3C  C9                  	ret
    1919.  00:4F3D                      process_cmda_inc:
    1920.  00:4F3D  FE 78               	cp	0x78
    1921.  00:4F3F  C8                  	ret	z
    1922.  00:4F40  C6 08               	add	8	
    1923.  00:4F42  DD 77 FF            	ld	(ix+TRACK_cmd_VolumeAdd),a
    1924.  00:4F45  C9                  	ret
    1925.  00:4F46                      
    1926.  00:4F46                      
    1927.  00:4F46                      process_cmd8_note_cut:
    1928.  00:4F46  DD 35 0F            	dec	(ix+TRACK_Timer)
    1929.  00:4F49  C2 74 4C            	jp	nz,process_commandEND
    1930.  00:4F4C                      	
    1931.  00:4F4C                      	; stop note
    1932.  00:4F4C  CB 9A               	res	B_TRGCMD,d	; set	note bit to	0
    1933.  00:4F4E  CB 82               	res	B_TRGNOT,d
    1934.  00:4F50  C3 74 4C            	jp	process_commandEND		
    1935.  00:4F53                      	
    1936.  00:4F53                      process_cmd9_note_delay:
    1937.  00:4F53                      	; note delay
    1938.  00:4F53  DD 35 0F            	dec	(ix+TRACK_Timer)
    1939.  00:4F56  C2 74 4C            	jp	nz,process_commandEND	; no delay yet
    1940.  00:4F59                      
    1941.  00:4F59                      	; trigger note
    1942.  00:4F59  DD 7E 0E            	ld	a,(ix+TRACK_cmd_E)		
    1943.  00:4F5C  DD 77 F6            	ld	(ix+TRACK_Note),a		; set	the note val
    1944.  00:4F5F  CB C2               	set	B_TRGNOT,d	;(ix+TRACK_Flags)		; set	trigger note flag
    1945.  00:4F61  CB 9A               	res	B_TRGCMD,d	;(ix+TRACK_Flags)		; reset tiggger cmd flag
    1946.  00:4F63                      	
    1947.  00:4F63  C3 74 4C            	jp	process_commandEND	
    1948.  00:4F66                      
    1949.  00:4F66                      
    1950.  00:4F66                      
    1951.  00:4F66                      ;===========================================================
    1952.  00:4F66                      ; ---replay_route
    1953.  00:4F66                      ; Output the data	to the CHIP	registers
    1954.  00:4F66                      ; 
    1955.  00:4F66                      ; 
    1956.  00:4F66                      ;===========================================================
    1957.  00:4F66                      replay_route:
    1958.  00:4F66                      ;---------------
    1959.  00:4F66                      ; P S	G 
    1960.  00:4F66                      ;---------------
    1961.  00:4F66                      route_SN:
    1962.  00:4F66                      ;	ld	a,(_CONFIG_PSGPORT)
    1963.  00:4F66  0E 3F               	ld	c,$3f
    1964.  00:4F68                      99:	
    1965.  00:4F68                      	; vol chan 1
    1966.  00:4F68  3A 6A C1            	ld	a,(PSG_regVOLA)
    1967.  00:4F6B  3C                  	inc	a
    1968.  00:4F6C  ED 44               	neg
    1969.  00:4F6E  E6 0F               	and	$0f
    1970.  00:4F70  F6 90               	or	10010000b
    1971.  00:4F72  ED 79               	out	(c),a	
    1972.  00:4F74                      	
    1973.  00:4F74                      	; vol chan 2
    1974.  00:4F74  3A 6B C1            	ld	a,(PSG_regVOLB)
    1975.  00:4F77  3C                  	inc	a
    1976.  00:4F78  ED 44               	neg
    1977.  00:4F7A  E6 0F               	and	$0f
    1978.  00:4F7C  F6 B0               	or	10110000b
    1979.  00:4F7E  ED 79               	out	(c),a		
    1980.  00:4F80                      		
    1981.  00:4F80                      ;	;-- check if we need 3rd psg
    1982.  00:4F80                      ;	ld	a,10110000b
    1983.  00:4F80                      ;	cp	b
    1984.  00:4F80                      ;	jp	z,99f
    1985.  00:4F80                      		
    1986.  00:4F80                      	; vol chan 3
    1987.  00:4F80  3A 6C C1            	ld	a,(PSG_regVOLC)
    1988.  00:4F83  3C                  	inc	a
    1989.  00:4F84  ED 44               	neg
    1990.  00:4F86  E6 0F               	and	$0f
    1991.  00:4F88  F6 D0               	or	11010000b 
    1992.  00:4F8A  ED 79               	out	(c),a			
    1993.  00:4F8C                      
    1994.  00:4F8C                      ;99:	
    1995.  00:4F8C                      	;--- next reg
    1996.  00:4F8C                      	; vol noise
    1997.  00:4F8C  3A 6D C1            	ld	a,(PSG_regVOLN)
    1998.  00:4F8F  3C                  	inc	a
    1999.  00:4F90  ED 44               	neg
    2000.  00:4F92  E6 0F               	and	$0f
    2001.  00:4F94  F6 F0               	or	11110000b
    2002.  00:4F96                      
    2003.  00:4F96  ED 79               	out	(c),a	
    2004.  00:4F98                      
    2005.  00:4F98                      	; noise chan 
    2006.  00:4F98  21 6E C1            	ld	hl,PSG_regNOISEold
    2007.  00:4F9B  3A 68 C1            	ld	a,(PSG_regNOISE)
    2008.  00:4F9E  BE                  	cp	(hl)
    2009.  00:4F9F  CA A7 4F            	jp	z,0f
    2010.  00:4FA2  77                  	ld	(hl),a
    2011.  00:4FA3  F6 E0               	or	11100000b
    2012.  00:4FA5  D3 3F               	out	($3f),a
    2013.  00:4FA7                      0:
    2014.  00:4FA7                      	; tone chan a
    2015.  00:4FA7  ED 4B 62 C1         	ld	bc,(PSG_regToneA)
    2016.  00:4FAB  79                  	ld	a,c
    2017.  00:4FAC  E6 0F               	and	$0f
    2018.  00:4FAE  F6 80               	or	10000000b
    2019.  00:4FB0  D3 3F               	out	($3f),a	
    2020.  00:4FB2  CB 11               	rl	c
    2021.  00:4FB4  CB 10               	rl	b
    2022.  00:4FB6  CB 11               	rl	c
    2023.  00:4FB8  CB 10               	rl	b
    2024.  00:4FBA  CB 11               	rl	c
    2025.  00:4FBC  CB 10               	rl	b
    2026.  00:4FBE  CB 11               	rl	c
    2027.  00:4FC0  CB 10               	rl	b
    2028.  00:4FC2  3E 3F               	ld	a,00111111b
    2029.  00:4FC4  A0                  	and	b
    2030.  00:4FC5  D3 3F               	out	($3f),a		
    2031.  00:4FC7                      	
    2032.  00:4FC7                      	
    2033.  00:4FC7                      	; tone chan b
    2034.  00:4FC7  ED 4B 64 C1         	ld	bc,(PSG_regToneB)
    2035.  00:4FCB  79                  	ld	a,c
    2036.  00:4FCC  E6 0F               	and	$0f
    2037.  00:4FCE  F6 A0               	or	10100000b
    2038.  00:4FD0  D3 3F               	out	($3f),a	
    2039.  00:4FD2  CB 11               	rl	c
    2040.  00:4FD4  CB 10               	rl	b
    2041.  00:4FD6  CB 11               	rl	c
    2042.  00:4FD8  CB 10               	rl	b
    2043.  00:4FDA  CB 11               	rl	c
    2044.  00:4FDC  CB 10               	rl	b
    2045.  00:4FDE  CB 11               	rl	c
    2046.  00:4FE0  CB 10               	rl	b
    2047.  00:4FE2  3E 3F               	ld	a,00111111b
    2048.  00:4FE4  A0                  	and	b
    2049.  00:4FE5  D3 3F               	out	($3f),a	
    2050.  00:4FE7                      	
    2051.  00:4FE7                      	; tone chan c
    2052.  00:4FE7  ED 4B 66 C1         	ld	bc,(PSG_regToneC)
    2053.  00:4FEB  79                  	ld	a,c
    2054.  00:4FEC  E6 0F               	and	$0f
    2055.  00:4FEE  F6 C0               	or	11000000b
    2056.  00:4FF0  D3 3F               	out	($3f),a	
    2057.  00:4FF2  CB 11               	rl	c
    2058.  00:4FF4  CB 10               	rl	b
    2059.  00:4FF6  CB 11               	rl	c
    2060.  00:4FF8  CB 10               	rl	b
    2061.  00:4FFA  CB 11               	rl	c
    2062.  00:4FFC  CB 10               	rl	b
    2063.  00:4FFE  CB 11               	rl	c
    2064.  00:5000  CB 10               	rl	b
    2065.  00:5002  3E 3F               	ld	a,00111111b
    2066.  00:5004  A0                  	and	b
    2067.  00:5005  D3 3F               	out	($3f),a	
    2068.  00:5007                      
    2069.  00:5007                      route_gg:
    2070.  00:5007                      	;==== output the GG stereo panning
    2071.  00:5007  3A 6F C1            	ld	a,(GG_panning)
    2072.  00:500A  D3 06               	out	($06),a
    2073.  00:500C                      
    2074.  00:500C                      
    2075.  00:500C                      
    2076.  00:500C                      
    2077.  00:500C                      
    2078.  00:500C                      
    2079.  00:500C                      ;	;--- Push values to AY HW
    2080.  00:500C                      ;	ld	b,0
    2081.  00:500C                      ;	ld	c,0xa0
    2082.  00:500C                      ;	ld	hl,PSG_registers
    2083.  00:500C                      ;_comp_loop:	
    2084.  00:500C                      ;	out	(c),b
    2085.  00:500C                      ;	ld	a,(hl)
    2086.  00:500C                      ;	add	1
    2087.  00:500C                      ;	out	(0xa1),a
    2088.  00:500C                      ;	inc	hl
    2089.  00:500C                      ;	ld	a,(hl)
    2090.  00:500C                      ;	adc	a,0
    2091.  00:500C                      ;	inc	b
    2092.  00:500C                      ;	out	(c),b	
    2093.  00:500C                      ;	inc	hl
    2094.  00:500C                      ;	out	(0xa1),a	
    2095.  00:500C                      ;	inc	b
    2096.  00:500C                      ;	ld	a,6
    2097.  00:500C                      ;	cp	b
    2098.  00:500C                      ;	jp	nz,_comp_loop
    2099.  00:500C                      ;	
    2100.  00:500C                      ;	ld	a,b	
    2101.  00:500C                      ;	
    2102.  00:500C                      ;	
    2103.  00:500C                      ;_ptPSG_loop:
    2104.  00:500C                      ;	out	(c),a
    2105.  00:500C                      ;	inc	c
    2106.  00:500C                      ;	outi
    2107.  00:500C                      ;	dec	c
    2108.  00:500C                      ;	inc	a
    2109.  00:500C                      ;	cp	13
    2110.  00:500C                      ;	jr	nz,_ptPSG_loop
    2111.  00:500C                      ;
    2112.  00:500C                      ;	ld	b,a
    2113.  00:500C                      ;	ld	a,(hl)
    2114.  00:500C                      ;	and	a
    2115.  00:500C                      ;	jp	z,_ptPSG_noEnv
    2116.  00:500C                      ;	out	(c),b
    2117.  00:500C                      ;	inc	c
    2118.  00:500C                      ;	out 	(c),a
    2119.  00:500C                      ;	ld	(hl),0	;reset the envwrite
    2120.  00:500C                      ;	
    2121.  00:500C                      ;	
    2122.  00:500C                      ;_ptPSG_noEnv:
    2123.  00:500C                      
    2124.  00:500C                      
    2125.  00:500C                      
    2126.  00:500C                      
    2127.  00:500C                      ;---------------
    2128.  00:500C                      ; F M
    2129.  00:500C                      ;---------------
    2130.  00:500C                      
    2131.  00:500C                      	; Check if we need to load a software voice
    2132.  00:500C  21 90 C1            	ld	hl,FM_softvoice_req
    2133.  00:500F  7E                  	ld	a,(hl)
    2134.  00:5010  23                  	inc	hl
    2135.  00:5011  BE                  	cp	(hl)
    2136.  00:5012  CA 38 50            	jp	z,_tt_route_fm_novoice
    2137.  00:5015                      	
    2138.  00:5015  77                  	ld	(hl),a
    2139.  00:5016                      
    2140.  00:5016  2A 07 C0            	ld	hl,(replay_voicebase)
    2141.  00:5019  87                  	add	a		; x2
    2142.  00:501A  87                  	add	a		; x4
    2143.  00:501B  87                  	add	a		; x8
    2144.  00:501C  85                  	add	a,l
    2145.  00:501D  6F                  	ld	l,a
    2146.  00:501E  D2 22 50            	jp	nc,99f
    2147.  00:5021  24                  	inc	h
    2148.  00:5022                      99:
    2149.  00:5022                      	;--- copy data to FM custom voice register
    2150.  00:5022  0E 08               	ld	c,8
    2151.  00:5024  3E 00               	ld	a,$0
    2152.  00:5026                      _tt_voice_fmloop:
    2153.  00:5026  D3 7C               	out	(FM_WRITE),a
    2154.  00:5028  3C                  	inc	a			; 4 cycles
    2155.  00:5029  08                  	ex	af,af'		; 4 cycles	'
    2156.  00:502A  7E                  	ld	a,(hl)		; 7 cycles    the low byte
    2157.  00:502B  D3 7D               	out	(FM_DATA),a
    2158.  00:502D                      	
    2159.  00:502D                      	;--- delay
    2160.  00:502D  DD E5               	push 	ix
    2161.  00:502F  DD E1               	pop	ix
    2162.  00:5031  00                  	nop
    2163.  00:5032  00                  	nop	
    2164.  00:5033                      	
    2165.  00:5033                      	
    2166.  00:5033  23                  	inc	hl
    2167.  00:5034  08                  	ex	af,af'		
    2168.  00:5035  0D                  	dec	c
    2169.  00:5036  20 EE               	jr.	nz,_tt_voice_fmloop	
    2170.  00:5038                      	
    2171.  00:5038                      
    2172.  00:5038                      
    2173.  00:5038                      
    2174.  00:5038                      _tt_route_fm_novoice:
    2175.  00:5038                      	;--- write volume register
    2176.  00:5038  11 7C C1            	ld	de,FM_regVOLA
    2177.  00:503B  21 87 C0            	ld	hl,TRACK_Chan3+17+TRACK_Voice
    2178.  00:503E  06 06               	ld	b,6		; 5 tracks
    2179.  00:5040  3E 30               	ld	a,$30
    2180.  00:5042                      ;	ex	af,af'	;'
    2181.  00:5042                      _tt_route_fmvol:
    2182.  00:5042  08                  	ex	af,af'	; '
    2183.  00:5043  7E                  	ld	a,(hl)
    2184.  00:5044  17                  	rla
    2185.  00:5045  17                  	rla
    2186.  00:5046  17                  	rla
    2187.  00:5047  17                  	rla
    2188.  00:5048  E6 F0               	and	$f0
    2189.  00:504A  4F                  	ld	c,a
    2190.  00:504B                      	
    2191.  00:504B  1A                  	ld	a,(de)	
    2192.  00:504C  E5                  	push	hl
    2193.  00:504D  21 92 C1            	ld	hl,FM_regMIXER
    2194.  00:5050                      
    2195.  00:5050  CB 7E               	bit	7,(hl)
    2196.  00:5052  20 02               	jr	nz,33f
    2197.  00:5054  3E 0F               	ld	a,$0f			; silentio
    2198.  00:5056                      33:
    2199.  00:5056  CB 0E               	rrc	(hl)
    2200.  00:5058  E1                  	pop	hl	
    2201.  00:5059                      	
    2202.  00:5059  E6 0F               	and	0x0f
    2203.  00:505B  B1                  	or	c
    2204.  00:505C  08                  	ex	af,af'		;'
    2205.  00:505D  D3 7C               	out	(FM_WRITE),a
    2206.  00:505F  3C                  	inc	a			; 4 cycles
    2207.  00:5060  08                  	ex	af,af'		; 4 cycles	 '
    2208.  00:5061  13                  	inc	de			; 6 cycles
    2209.  00:5062  D3 7D               	out	(FM_DATA),a
    2210.  00:5064                      
    2211.  00:5064  3E 26               	ld	a,TRACK_REC_SIZE
    2212.  00:5066  85                  	add	a,l
    2213.  00:5067  6F                  	ld	l,a
    2214.  00:5068  30 01               	jr.	nc,99f
    2215.  00:506A  24                  	inc	h
    2216.  00:506B                      99:
    2217.  00:506B  08                  	ex	af,af'		;	'
    2218.  00:506C                      
    2219.  00:506C                      
    2220.  00:506C  10 D4               	djnz	_tt_route_fmvol
    2221.  00:506E                      
    2222.  00:506E                      
    2223.  00:506E                      	
    2224.  00:506E                      
    2225.  00:506E                      	;--- write tone register
    2226.  00:506E  21 C9 5D            	ld	hl,FM_Registers
    2227.  00:5071  11 88 C0            	ld	de,TRACK_Chan3+17+TRACK_Flags
    2228.  00:5074  06 06               	ld	b,6		; 5 tracks
    2229.  00:5076  3E 10               	ld	a,$10
    2230.  00:5078                      ;	ex	af,af'	;'
    2231.  00:5078                      _tt_route_fmtone:
    2232.  00:5078                      
    2233.  00:5078  D3 7C               	out	(FM_WRITE),a
    2234.  00:507A  08                  	ex	af,af'		; 4 cycles 	'
    2235.  00:507B  7E                  	ld	a,(hl)		; 13 cycles  	the low byte
    2236.  00:507C  D3 7D               	out	(FM_DATA),a
    2237.  00:507E  23                  	inc	hl
    2238.  00:507F  1A                  	ld	a,(de)		; the flags (bit 4 has key)
    2239.  00:5080  4F                  	ld	c,a
    2240.  00:5081  E6 30               	and	48			; preserve key and sustain
    2241.  00:5083                      
    2242.  00:5083                      	;--- check for new note (key on is off '0')
    2243.  00:5083  CB 67               	bit	4,a
    2244.  00:5085  C2 98 50            	jp	nz,99f		; skip if no key off
    2245.  00:5088                      
    2246.  00:5088  B6                  	or	(hl)
    2247.  00:5089  08                  	ex	af,af'		;'
    2248.  00:508A  C6 10               	add	a,$10
    2249.  00:508C  D3 7C               	out	(FM_WRITE),a
    2250.  00:508E  08                  	ex	af,af'		; 4 cycles '
    2251.  00:508F  D3 7D               	out 	(FM_DATA),a
    2252.  00:5091                      
    2253.  00:5091  F6 10               	or	16			; set keyon on '1'
    2254.  00:5093  12                  	ld	(de),a		; store keyon
    2255.  00:5094  08                  	ex	af,af'		;'
    2256.  00:5095  C3 9C 50            	jp 	88f	
    2257.  00:5098                      			
    2258.  00:5098                      	
    2259.  00:5098                      
    2260.  00:5098                      
    2261.  00:5098                      99:
    2262.  00:5098  B6                  	or	(hl)			; add the tone high byte
    2263.  00:5099                      
    2264.  00:5099  08                  	ex	af,af'		;'
    2265.  00:509A  C6 10               	add	a,$10
    2266.  00:509C                      	
    2267.  00:509C                      	;--- delay to get 84 cycles at least
    2268.  00:509C                      ;	push ix
    2269.  00:509C                      ;	pop ix
    2270.  00:509C                      ;	nop
    2271.  00:509C                      	
    2272.  00:509C                      	
    2273.  00:509C                      	
    2274.  00:509C  D3 7C               88:	out	(FM_WRITE),a
    2275.  00:509E  08                  	ex	af,af'		; 4 cycles '
    2276.  00:509F  23                  	inc	hl			; 6 cycles 
    2277.  00:50A0  D3 7D               	out 	(FM_DATA),a
    2278.  00:50A2  3E 10               	ld	a,16
    2279.  00:50A4  B1                  	or	c
    2280.  00:50A5  12                  	ld	(de),a		; write key flag enabled to disable retrigger of note
    2281.  00:50A6  3E 26               	ld	a,TRACK_REC_SIZE
    2282.  00:50A8  83                  	add	a,e
    2283.  00:50A9  5F                  	ld	e,a
    2284.  00:50AA  30 01               	jr.	nc,99f
    2285.  00:50AC  14                  	inc	d
    2286.  00:50AD                      99:
    2287.  00:50AD  08                  	ex	af,af'		;'
    2288.  00:50AE  D6 0F               	sub	$f
    2289.  00:50B0  10 C6               	djnz	_tt_route_fmtone
    2290.  00:50B2                      debug:
    2291.  00:50B2  C9                  	ret
    2292.  00:50B3                      
    2293.  00:50B3                      	
    2294.  00:50B3                      	
    2295.  00:50B3                      
    2296.  00:50B3                      	
    2297.  00:50B3                      
    2298.  00:50B3                      	
    2299.  00:50B3                      
    2300.  00:50B3                      
     560   00:50B3                      	include	"..\code\ttreplaySMSDAT.asm"
       1.  00:50B3                      
       2.  00:50B3                      
       3.  00:50B3                      	; Balance setting space volume max - 8
       4.  00:50B3  0F (128)            	ds 8*16, $0F
       5.  00:5133                      _VOLUME_TABLE
       6.  00:5133                      	; Combined volume table PSG/FM
       7.  00:5133                      	db	 $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F, $0F
       7.  00:5133  0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 0F 
       8.  00:5143                      	db	 $0F, $0F, $0F, $0F, $0F, $0F, $0F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1E
       8.  00:5143  0F 0F 0F 0F 0F 0F 0F 1F 1F 1F 1F 1F 1F 1F 1F 1E 
       9.  00:5153                      	db	 $0F, $0F, $0F, $0F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $2F, $2F, $2E, $2D
       9.  00:5153  0F 0F 0F 0F 1F 1F 1F 1F 1F 1F 1F 1F 2F 2F 2E 2D 
      10.  00:5163                      	db	 $0F, $0F, $0F, $1F, $1F, $1F, $1F, $1F, $2F, $2F, $2F, $2F, $2F, $3E, $3D, $3C
      10.  00:5163  0F 0F 0F 1F 1F 1F 1F 1F 2F 2F 2F 2F 2F 3E 3D 3C 
      11.  00:5173                      	db	 $0F, $0F, $1F, $1F, $1F, $1F, $2F, $2F, $2F, $2F, $3F, $3F, $3E, $3D, $4C, $4B
      11.  00:5173  0F 0F 1F 1F 1F 1F 2F 2F 2F 2F 3F 3F 3E 3D 4C 4B 
      12.  00:5183                      	db	 $0F, $0F, $1F, $1F, $1F, $2F, $2F, $2F, $3F, $3F, $3F, $4E, $4D, $4C, $5B, $5A
      12.  00:5183  0F 0F 1F 1F 1F 2F 2F 2F 3F 3F 3F 4E 4D 4C 5B 5A 
      13.  00:5193                      	db	 $0F, $0F, $1F, $1F, $2F, $2F, $2F, $3F, $3F, $4F, $4E, $4D, $5C, $5B, $6A, $69
      13.  00:5193  0F 0F 1F 1F 2F 2F 2F 3F 3F 4F 4E 4D 5C 5B 6A 69 
      14.  00:51A3                      	db	 $0F, $0F, $1F, $1F, $2F, $2F, $3F, $3F, $4F, $4E, $5D, $5C, $6B, $6A, $79, $78
      14.  00:51A3  0F 0F 1F 1F 2F 2F 3F 3F 4F 4E 5D 5C 6B 6A 79 78 
      15.  00:51B3                      	db	 $0F, $1F, $1F, $2F, $2F, $3F, $3F, $4F, $4E, $5D, $5C, $6B, $6A, $79, $78, $87
      15.  00:51B3  0F 1F 1F 2F 2F 3F 3F 4F 4E 5D 5C 6B 6A 79 78 87 
      16.  00:51C3                      	db	 $0F, $1F, $1F, $2F, $2F, $3F, $4F, $4E, $5D, $5C, $6B, $7A, $79, $88, $87, $96
      16.  00:51C3  0F 1F 1F 2F 2F 3F 4F 4E 5D 5C 6B 7A 79 88 87 96 
      17.  00:51D3                      	db	 $0F, $1F, $1F, $2F, $3F, $3F, $4E, $5D, $5C, $6B, $7A, $79, $88, $97, $96, $A5
      17.  00:51D3  0F 1F 1F 2F 3F 3F 4E 5D 5C 6B 7A 79 88 97 96 A5 
      18.  00:51E3                      	db	 $0F, $1F, $1F, $2F, $3F, $4E, $4D, $5C, $6B, $7A, $79, $88, $97, $A6, $A5, $B4
      18.  00:51E3  0F 1F 1F 2F 3F 4E 4D 5C 6B 7A 79 88 97 A6 A5 B4 
      19.  00:51F3                      	db	 $0F, $1F, $2F, $2F, $3E, $4D, $5C, $6B, $6A, $79, $88, $97, $A6, $A5, $B4, $C3
      19.  00:51F3  0F 1F 2F 2F 3E 4D 5C 6B 6A 79 88 97 A6 A5 B4 C3 
      20.  00:5203                      	db	 $0F, $1F, $2F, $3E, $3D, $4C, $5B, $6A, $79, $88, $97, $A6, $A5, $B4, $C3, $D2
      20.  00:5203  0F 1F 2F 3E 3D 4C 5B 6A 79 88 97 A6 A5 B4 C3 D2 
      21.  00:5213                      	db	 $0F, $1F, $2E, $3D, $4C, $5B, $6A, $79, $78, $87, $96, $A5, $B4, $C3, $D2, $E1
      21.  00:5213  0F 1F 2E 3D 4C 5B 6A 79 78 87 96 A5 B4 C3 D2 E1 
      22.  00:5223                      	db	 $0F, $1E, $2D, $3C, $4B, $5A, $69, $78, $87, $96, $A5, $B4, $C3, $D2, $E1, $F0
      22.  00:5223  0F 1E 2D 3C 4B 5A 69 78 87 96 A5 B4 C3 D2 E1 F0 
      23.  00:5233                      	
      24.  00:5233                      
      25.  00:5233                      ;Konami values found in	Nemesis 2 replayer.
      26.  00:5233  (00:0D40)           C_PER		equ	$6a*32	
      27.  00:5233  (00:0C80)           C1_PER	equ	$64*32
      28.  00:5233  (00:0BC0)           D_PER		equ	$5e*32
      29.  00:5233  (00:0B20)           D1_PER	equ	$59*32
      30.  00:5233  (00:0A80)           E_PER		equ	$54*32
      31.  00:5233  (00:09E0)           F_PER		equ	$4f*32
      32.  00:5233  (00:0940)           F1_PER	equ	$4a*32
      33.  00:5233  (00:08C0)           G_PER		equ	$46*32
      34.  00:5233  (00:0840)           G1_PER	equ	$42*32
      35.  00:5233  (00:07E0)           A_PER		equ	$3f*32
      36.  00:5233  (00:0760)           A1_PER	equ	$3b*32
      37.  00:5233  (00:0700)           B_PER		equ	$38*32
      38.  00:5233                      
      39.  00:5233                      TRACK_ToneTable_PSG:	
      40.  00:5233                      	dw C_PER/1	,C1_PER/1  ,D_PER/1  ,D1_PER/1  ,E_PER/1	,F_PER/1  ,F1_PER/1  ,G_PER/1	 ,G1_PER/1	,A_PER/1  ,A1_PER/1  ,B_PER/1
      40.  00:5233  40 0D 80 0C C0 0B 20 0B 80 0A E0 09 40 09 C0 08 
      40.  00:5243  40 08 E0 07 60 07 00 07 
      41.  00:524B                      	dw C_PER/2	,C1_PER/2  ,D_PER/2  ,D1_PER/2  ,E_PER/2	,F_PER/2  ,F1_PER/2  ,G_PER/2	 ,G1_PER/2	,A_PER/2  ,A1_PER/2  ,B_PER/2
      41.  00:524B  A0 06 40 06 E0 05 90 05 40 05 F0 04 A0 04 60 04 
      41.  00:525B  20 04 F0 03 B0 03 80 03 
      42.  00:5263                      	dw C_PER/4	,C1_PER/4  ,D_PER/4  ,D1_PER/4  ,E_PER/4	,F_PER/4  ,F1_PER/4  ,G_PER/4	 ,G1_PER/4	,A_PER/4  ,A1_PER/4  ,B_PER/4
      42.  00:5263  50 03 20 03 F0 02 C8 02 A0 02 78 02 50 02 30 02 
      42.  00:5273  10 02 F8 01 D8 01 C0 01 
      43.  00:527B                      	dw C_PER/8	,C1_PER/8  ,D_PER/8  ,D1_PER/8  ,E_PER/8	,F_PER/8  ,F1_PER/8  ,G_PER/8	 ,G1_PER/8	,A_PER/8  ,A1_PER/8  ,B_PER/8
      43.  00:527B  A8 01 90 01 78 01 64 01 50 01 3C 01 28 01 18 01 
      43.  00:528B  08 01 FC 00 EC 00 E0 00 
      44.  00:5293                      	dw C_PER/16	,C1_PER/16 ,D_PER/16 ,D1_PER/16 ,E_PER/16	,F_PER/16 ,F1_PER/16 ,G_PER/16 ,G1_PER/16	,A_PER/16 ,A1_PER/16 ,B_PER/16
      44.  00:5293  D4 00 C8 00 BC 00 B2 00 A8 00 9E 00 94 00 8C 00 
      44.  00:52A3  84 00 7E 00 76 00 70 00 
      45.  00:52AB                      	dw C_PER/32	,C1_PER/32 ,D_PER/32 ,D1_PER/32 ,E_PER/32	,F_PER/32 ,F1_PER/32 ,G_PER/32 ,G1_PER/32	,A_PER/32 ,A1_PER/32 ,B_PER/32
      45.  00:52AB  6A 00 64 00 5E 00 59 00 54 00 4F 00 4A 00 46 00 
      45.  00:52BB  42 00 3F 00 3B 00 38 00 
      46.  00:52C3                      	dw C_PER/64	,C1_PER/64 ,D_PER/64 ,D1_PER/64 ,E_PER/64	,F_PER/64 ,F1_PER/64 ,G_PER/64 ,G1_PER/64	,A_PER/64 ,A1_PER/64 ,B_PER/64
      46.  00:52C3  35 00 32 00 2F 00 2C 00 2A 00 27 00 25 00 23 00 
      46.  00:52D3  21 00 1F 00 1D 00 1C 00 
      47.  00:52DB                      	dw C_PER/128,C1_PER/128,D_PER/128,D1_PER/128,E_PER/128,F_PER/128,F1_PER/128,G_PER/128,G1_PER/128,A_PER/128,A1_PER/128,B_PER/128
      47.  00:52DB  1A 00 19 00 17 00 16 00 15 00 13 00 12 00 11 00 
      47.  00:52EB  10 00 0F 00 0E 00 0E 00 
      48.  00:52F3                      
      49.  00:52F3                      TRACK_ToneTable_FM:
      50.  00:52F3                      ;	db   	0,0
      51.  00:52F3                      	db	0adh,000h,0b7h,000h,0c2h,000h,0cdh,000h,0d9h,000h,0e6h,000h
      51.  00:52F3  AD 00 B7 00 C2 00 CD 00 D9 00 E6 00 
      52.  00:52FF                            db	0f4h,000h,003h,001h,012h,001h,022h,001h,034h,001h,046h,001h
      52.  00:52FF  F4 00 03 01 12 01 22 01 34 01 46 01 
      53.  00:530B                            db    0adh,002h,0b7h,002h,0c2h,002h,0cdh,002h,0d9h,002h,0e6h,002h
      53.  00:530B  AD 02 B7 02 C2 02 CD 02 D9 02 E6 02 
      54.  00:5317                            db    0f4h,002h,003h,003h,012h,003h,022h,003h,034h,003h,046h,003h
      54.  00:5317  F4 02 03 03 12 03 22 03 34 03 46 03 
      55.  00:5323                            db    0adh,004h,0b7h,004h,0c2h,004h,0cdh,004h,0d9h,004h,0e6h,004h
      55.  00:5323  AD 04 B7 04 C2 04 CD 04 D9 04 E6 04 
      56.  00:532F                            db    0f4h,004h,003h,005h,012h,005h,022h,005h,034h,005h,046h,005h
      56.  00:532F  F4 04 03 05 12 05 22 05 34 05 46 05 
      57.  00:533B                            db    0adh,006h,0b7h,006h,0c2h,006h,0cdh,006h,0d9h,006h,0e6h,006h
      57.  00:533B  AD 06 B7 06 C2 06 CD 06 D9 06 E6 06 
      58.  00:5347                            db    0f4h,006h,003h,007h,012h,007h,022h,007h,034h,007h,046h,007h
      58.  00:5347  F4 06 03 07 12 07 22 07 34 07 46 07 
      59.  00:5353                            db    0adh,008h,0b7h,008h,0c2h,008h,0cdh,008h,0d9h,008h,0e6h,008h
      59.  00:5353  AD 08 B7 08 C2 08 CD 08 D9 08 E6 08 
      60.  00:535F                            db    0f4h,008h,003h,009h,012h,009h,022h,009h,034h,009h,046h,009h
      60.  00:535F  F4 08 03 09 12 09 22 09 34 09 46 09 
      61.  00:536B                            db    0adh,00ah,0b7h,00ah,0c2h,00ah,0cdh,00ah,0d9h,00ah,0e6h,00ah
      61.  00:536B  AD 0A B7 0A C2 0A CD 0A D9 0A E6 0A 
      62.  00:5377                            db    0f4h,00ah,003h,00bh,012h,00bh,022h,00bh,034h,00bh,046h,00bh
      62.  00:5377  F4 0A 03 0B 12 0B 22 0B 34 0B 46 0B 
      63.  00:5383                            db    0adh,00ch,0b7h,00ch,0c2h,00ch,0cdh,00ch,0d9h,00ch,0e6h,00ch
      63.  00:5383  AD 0C B7 0C C2 0C CD 0C D9 0C E6 0C 
      64.  00:538F                            db    0f4h,00ch,003h,00dh,012h,00dh,022h,00dh,034h,00dh,046h,00dh
      64.  00:538F  F4 0C 03 0D 12 0D 22 0D 34 0D 46 0D 
      65.  00:539B                            db    0adh,00eh,0b7h,00eh,0c2h,00eh,0cdh,00eh,0d9h,00eh,0e6h,00eh
      65.  00:539B  AD 0E B7 0E C2 0E CD 0E D9 0E E6 0E 
      66.  00:53A7                            db    0f4h,00eh,003h,00fh,012h,00fh,022h,00fh,034h,00fh,046h,00fh
      66.  00:53A7  F4 0E 03 0F 12 0F 22 0F 34 0F 46 0F 
      67.  00:53B3                      
      68.  00:53B3                      
      69.  00:53B3                      TRACK_Vibrato_sine:
      70.  00:53B3                      	db	0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0	; Depth 0
      70.  00:53B3  00 00 00 00 00 00 00 00 00 00 00 00 01 01 01 01 
      70.  00:53C3  01 01 01 01 00 00 00 00 00 00 00 00 00 00 00 00 
      71.  00:53D3                      	db	0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  3,  3,  2,  2,  2,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0	; Depth 1
      71.  00:53D3  00 00 00 00 00 00 00 00 01 01 01 01 02 02 02 03 
      71.  00:53E3  03 02 02 02 01 01 01 01 00 00 00 00 00 00 00 00 
      72.  00:53F3                      	db	0,  0,  0,  0,  0,  1,  1,  1,  2,  2,  3,  3,  4,  4,  5,  6,  6,  5,  4,  4,  3,  3,  2,  2,  1,  1,  1,  0,  0,  0,  0,  0 ; Depth 2
      72.  00:53F3  00 00 00 00 00 01 01 01 02 02 03 03 04 04 05 06 
      72.  00:5403  06 05 04 04 03 03 02 02 01 01 01 00 00 00 00 00 
      73.  00:5413                      	db	0,  0,  0,  0,  1,  2,  2,  3,  4,  5,  6,  7,  8,  9, 10, 12, 12, 10,  9,  8,  7,  6,  5,  4,  3,  2,  2,  1,  0,  0,  0,  0	; Depth 3
      73.  00:5413  00 00 00 00 01 02 02 03 04 05 06 07 08 09 0A 0C 
      73.  00:5423  0C 0A 09 08 07 06 05 04 03 02 02 01 00 00 00 00 
      74.  00:5433                      	db	0,  0,  1,  1,  2,  4,  5,  7,  8, 10, 12, 14, 17, 19, 21, 24, 24, 21, 19, 17, 14, 12, 10,  8,  7,  5,  4,  2,  1,  1,  0,  0	; Depth 4
      74.  00:5433  00 00 01 01 02 04 05 07 08 0A 0C 0E 11 13 15 18 
      74.  00:5443  18 15 13 11 0E 0C 0A 08 07 05 04 02 01 01 00 00 
      75.  00:5453                      	db	0,  1,  2,  3,  5,  8, 11, 14, 17, 21, 25, 29, 34, 38, 43, 48, 48, 43, 38, 34, 29, 25, 21, 17, 14, 11,  8,  5,  3,  2,  1,  0	; Depth 5
      75.  00:5453  00 01 02 03 05 08 0B 0E 11 15 19 1D 22 26 2B 30 
      75.  00:5463  30 2B 26 22 1D 19 15 11 0E 0B 08 05 03 02 01 00 
      76.  00:5473                      	db	0,  2,  4,  7, 11, 16, 22, 28, 35, 43, 51, 59, 68, 77, 87, 96, 96, 87, 77, 68, 59, 51, 43, 35, 28, 22, 16, 11,  7,  4,  2,  0	; Depth 6	
      76.  00:5473  00 02 04 07 0B 10 16 1C 23 2B 33 3B 44 4D 57 60 
      76.  00:5483  60 57 4D 44 3B 33 2B 23 1C 16 10 0B 07 04 02 00 
      77.  00:5493                      	db	0,  4,  8, 14, 22, 32, 44, 56, 70, 86,102,118,136,154,174,192,192,174,154,136,118,102, 86, 70, 56, 44, 32, 22, 14,  8,  4,  0	; Depth 7
      77.  00:5493  00 04 08 0E 16 20 2C 38 46 56 66 76 88 9A AE C0 
      77.  00:54A3  C0 AE 9A 88 76 66 56 46 38 2C 20 16 0E 08 04 00 
     561   00:54B3                      ;	include	"..\ttsfxplay\ttsfxplay.asm"
     562   00:54B3                      
     563   00:54B3                      	
     564   00:54B3                      demo_song:
     565   00:54B3                      	include	".\test.asm"
       1.  00:54B3                      ; Song:                                 
       2.  00:54B3                      ; By:                                   
       3.  00:54B3                      
       4.  00:54B3                      ; [ Song start data ]
       5.  00:54B3  0C                  	db $0c					; Initial song speed.
       6.  00:54B4  CE 54               	dw .customvoice_start			; Start of the custom voices data.
       7.  00:54B6  CE 54               	dw .drummacro_start			; Start of the drum macro data.
       8.  00:54B8  CE 54               	dw .instrument_start			; Start of the instrument data.
       9.  00:54BA                      
      10.  00:54BA                      ; [ Song order pointer list ]
      11.  00:54BA                      .restart:
      12.  00:54BA                      	dw .track_000, .track_001, .track_002, .track_003, .track_003, .track_003, .track_003, .track_003	; Step:001 Pattern:000
      12.  00:54BA  D5 54 EA 54 00 55 16 55 16 55 16 55 16 55 16 55 
      13.  00:54CA  00 00 BA 54         	dw 0x0000, .restart			; End of sequence delimiter + restart address.
      14.  00:54CE                      
      15.  00:54CE                      ; [ Custom FM voices ]
      16.  00:54CE                      .customvoice_start:
      17.  00:54CE                      
      18.  00:54CE                      ; [ SCC Waveforms ]
      19.  00:54CE                      .waveform_start:
      20.  00:54CE                      
      21.  00:54CE                      ; [ FM Drum macros]
      22.  00:54CE                      .drummacro_start:
      23.  00:54CE                      
      24.  00:54CE                      ; [ Instruments]
      25.  00:54CE                      .instrument_start:
      26.  00:54CE  D0 54               	dw .instrument_00				;                 
      27.  00:54D0                      
      28.  00:54D0                      .instrument_00:					;                 
      29.  00:54D0  00                  	db $00					; FM Voice 0
      30.  00:54D1                      .rst_i00:
      31.  00:54D1  29                  	db $29			; Info byte: 00101001
      32.  00:54D2  0F                  	db $0f			; Volume _
      33.  00:54D3  D1 54               	dw .rst_i00			; Loop address
      34.  00:54D5                      
      35.  00:54D5                      ; [ Song track data ]
      36.  00:54D5                      .track_000:
      37.  00:54D5  24                  	db $24			;Note C-4
      38.  00:54D6  70                  	db $70			;Volume 15
      39.  00:54D7  71                  	db $71			;Instrument 1
      40.  00:54D8  C1                  	db $c1			;Wait 2
      41.  00:54D9  28                  	db $28			;Note E-4
      42.  00:54DA                      					;Wait Repeat 2
      43.  00:54DA  2B                  	db $2b			;Note G-4
      44.  00:54DB                      					;Wait Repeat 2
      45.  00:54DB  60                  	db $60			;Release 96
      46.  00:54DC  D1                  	db $d1			;Wait 18
      47.  00:54DD  24                  	db $24			;Note C-4
      48.  00:54DE  94 82               	db $94,$82			;CMD Vibrato
      49.  00:54E0  C3                  	db $c3			;Wait 4
      50.  00:54E1  60                  	db $60			;Release 96
      51.  00:54E2  CD                  	db $cd			;Wait 14
      52.  00:54E3  24                  	db $24			;Note C-4
      53.  00:54E4  92 01               	db $92,$01			;CMD Portamento down
      54.  00:54E6  C3                  	db $c3			;Wait 4
      55.  00:54E7  60                  	db $60			;Release 96
      56.  00:54E8  D1                  	db $d1			;Wait 18
      57.  00:54E9  BF                  	db $bf			;[End-Of-Track]
      58.  00:54EA                      .track_001:
      59.  00:54EA  C7                  	db $c7			;Wait 8
      60.  00:54EB  24                  	db $24			;Note C-4
      61.  00:54EC  70                  	db $70			;Volume 15
      62.  00:54ED  71                  	db $71			;Instrument 1
      63.  00:54EE  C1                  	db $c1			;Wait 2
      64.  00:54EF  28                  	db $28			;Note E-4
      65.  00:54F0                      					;Wait Repeat 2
      66.  00:54F0  2B                  	db $2b			;Note G-4
      67.  00:54F1                      					;Wait Repeat 2
      68.  00:54F1  60                  	db $60			;Release 96
      69.  00:54F2  CF                  	db $cf			;Wait 16
      70.  00:54F3  24                  	db $24			;Note C-4
      71.  00:54F4  94 82               	db $94,$82			;CMD Vibrato
      72.  00:54F6  C3                  	db $c3			;Wait 4
      73.  00:54F7  60                  	db $60			;Release 96
      74.  00:54F8  CD                  	db $cd			;Wait 14
      75.  00:54F9  24                  	db $24			;Note C-4
      76.  00:54FA  91 01               	db $91,$01			;CMD Portamento up
      77.  00:54FC  C3                  	db $c3			;Wait 4
      78.  00:54FD  60                  	db $60			;Release 96
      79.  00:54FE  CB                  	db $cb			;Wait 12
      80.  00:54FF  BF                  	db $bf			;[End-Of-Track]
      81.  00:5500                      .track_002:
      82.  00:5500  CF                  	db $cf			;Wait 16
      83.  00:5501  24                  	db $24			;Note C-4
      84.  00:5502  70                  	db $70			;Volume 15
      85.  00:5503  71                  	db $71			;Instrument 1
      86.  00:5504  C1                  	db $c1			;Wait 2
      87.  00:5505  28                  	db $28			;Note E-4
      88.  00:5506                      					;Wait Repeat 2
      89.  00:5506  2B                  	db $2b			;Note G-4
      90.  00:5507                      					;Wait Repeat 2
      91.  00:5507  60                  	db $60			;Release 96
      92.  00:5508  CD                  	db $cd			;Wait 14
      93.  00:5509  24                  	db $24			;Note C-4
      94.  00:550A  94 82               	db $94,$82			;CMD Vibrato
      95.  00:550C  C3                  	db $c3			;Wait 4
      96.  00:550D  60                  	db $60			;Release 96
      97.  00:550E  CD                  	db $cd			;Wait 14
      98.  00:550F  24                  	db $24			;Note C-4
      99.  00:5510  91 01               	db $91,$01			;CMD Portamento up
     100.  00:5512  C3                  	db $c3			;Wait 4
     101.  00:5513  60                  	db $60			;Release 96
     102.  00:5514  C5                  	db $c5			;Wait 6
     103.  00:5515  BF                  	db $bf			;[End-Of-Track]
     104.  00:5516                      .track_003:
     105.  00:5516  FF                  	db $ff			;Wait 64
     106.  00:5517  BF                  	db $bf			;[End-Of-Track]
     107.  00:5518                      
     566   00:5518                      	
     567   00:5518                      TEXT_Title:
     568   00:5518                      	db	"TriloTracker FM Re-player Debug info",0	
     568   00:5518  54 72 69 6C 6F 54 72 61 63 6B 65 72 20 46 4D 20 
     568   00:5528  52 65 2D 70 6C 61 79 65 72 20 44 65 62 75 67 20 
     568   00:5538  69 6E 66 6F 00 
     569   00:553D                      TEXT_Step:
     570   00:553D  53 74 65 70 3A 00   	db	"Step:",0	
     571   00:5543                      TEXT_Header_Data:
     572   00:5543                      	db	"C# Nt In FM Vl Cm Flags",0
     572   00:5543  43 23 20 4E 74 20 49 6E 20 46 4D 20 56 6C 20 43 
     572   00:5553  6D 20 46 6C 61 67 73 00 
     573   00:555B                      TEXT_Register_Header:
     574   00:555B                      	db 	"Tone Vl  Tone Vl  Nois Mx  Env  Sh",0
     574   00:555B  54 6F 6E 65 20 56 6C 20 20 54 6F 6E 65 20 56 6C 
     574   00:556B  20 20 4E 6F 69 73 20 4D 78 20 20 45 6E 76 20 20 
     574   00:557B  53 68 00 
     575   00:557E                      TEXT_Register_Drum:
     576   00:557E                      	db 	"Macr Drm Tone Vl",0	
     576   00:557E  4D 61 63 72 20 44 72 6D 20 54 6F 6E 65 20 56 6C 
     576   00:558E  00 
     577   00:558F                      TEXT_Legend_Data:
     578   00:558F                      	db	"Legend: Psg, Fm, Voice, Env, Keyon, Command, Active(note)",0
     578   00:558F  4C 65 67 65 6E 64 3A 20 50 73 67 2C 20 46 6D 2C 
     578   00:559F  20 56 6F 69 63 65 2C 20 45 6E 76 2C 20 4B 65 79 
     578   00:55AF  6F 6E 2C 20 43 6F 6D 6D 61 6E 64 2C 20 41 63 74 
     578   00:55BF  69 76 65 28 6E 6F 74 65 29 00 
     579   00:55C9                      
     580   00:55C9                      	
     581   00:55C9                      	
     582   00:55C9                      font_data:
     583   00:55C9  (0800)              	incbin	".\fontpat.bin"
     584   00:5DC9                      
     585   00:5DC9                      ;	include ".\sfx.asm"
     586   00:5DC9                      	
     587   00:5DC9                      ;sfx_PSG_STREAMS:
     588   00:5DC9                      ;sfx_SCC_STREAMS:
     589   00:5DC9                      ;	dw	sfx1
     590   00:5DC9                      ;	dw	sfx2
     591   00:5DC9                      ;	dw	sfx3
     592   00:5DC9                      ;	dw	sfx4
     593   00:5DC9                      ;	dw	sfx5
     594   00:5DC9                      ;
     595   00:5DC9                      ;
     596   00:5DC9                      ;
     597   00:5DC9                      ;sfx1:
     598   00:5DC9                      ;	db	1,4*8
     599   00:5DC9                      ;	incbin	"..\ttsfxplay\sfx\menu1.afx"
     600   00:5DC9                      ;sfx2:
     601   00:5DC9                      ;	db	1,2*8
     602   00:5DC9                      ;	incbin	"..\ttsfxplay\sfx\menu2.afx"	
     603   00:5DC9                      ;sfx3:
     604   00:5DC9                      ;	db	1,3*8
     605   00:5DC9                      ;	incbin	"..\ttsfxplay\sfx\menu3.afx"
     606   00:5DC9                      ;sfx4:
     607   00:5DC9                      ;	db	1,5*8
     608   00:5DC9                      ;	incbin	"..\ttsfxplay\sfx\menu4.afx"
     609   00:5DC9                      ;sfx5:
     610   00:5DC9                      ;	db	1,6*8
     611   00:5DC9                      ;	incbin	"..\ttsfxplay\sfx\menu5.afx"
     612   00:5DC9                      ;
     613   00:5DC9                      	
     614   00:5DC9                      	
     615   00:5DC9  (C000)              	map	0xc000
     616   00:5DC9                      	include	"..\code\ttreplaySMSRAM.asm"
       1.  00:5DC9                      ;================================
       2.  00:5DC9                      ; The new replayer.
       3.  00:5DC9                      ;
       4.  00:5DC9                      ; Persistent RAM unswappable
       5.  00:5DC9                      ;
       6.  00:5DC9                      ;================================
       7.  00:5DC9                      
       8.  00:5DC9  (00:FFFFFFEF)       TRACK_Instrument		equ 0-17
       9.  00:5DC9  (00:FFFFFFF0)       TRACK_Command		equ 1-17
      10.  00:5DC9  (00:FFFFFFF1)       TRACK_MacroPointer	equ 2-17
      11.  00:5DC9  (00:FFFFFFF3)       TRACK_MacroStart		equ 4-17
      12.  00:5DC9  (00:FFFFFFF5)       TRACK_MacroRestart 	equ 6-17		; no longer needed
      13.  00:5DC9  (00:FFFFFFF6)       TRACK_Note			equ 7-17
      14.  00:5DC9  (00:FFFFFFF7)       TRACK_Volume		equ 8-17
      15.  00:5DC9  (00:FFFFFFF8)       TRACK_Voice			equ 9-17
      16.  00:5DC9  (00:FFFFFFF9)       TRACK_Flags			equ 10-17
      17.  00:5DC9                      	; 0 = note trigger
      18.  00:5DC9                      	; 1 = note active
      19.  00:5DC9                      	; 4 = morph active		;-< for SCC when 1 then waveform is following morph buffer
      20.  00:5DC9                      	; 3 = command trigger
      21.  00:5DC9                      	; 2 = envelope trigger
      22.  00:5DC9                      	; 5 = instrument trigger
      23.  00:5DC9                      	; 6 = waveform trigger
      24.  00:5DC9                      	; 7 = PSG/SCC
      25.  00:5DC9  (00:FFFFFFFA)       TRACK_empty			equ 11-17		; needed for pushing 0 at note start
      26.  00:5DC9  (00:FFFFFFFB)       TRACK_ToneAdd		equ 12-17		; reset after note set
      27.  00:5DC9  (00:FFFFFFFD)       TRACK_VolumeAdd		equ 14-17		; reset after note set
      28.  00:5DC9  (00:FFFFFFFE)       TRACK_Noise			equ 15-17	;[OBSOLETE]	; reset after note set
      29.  00:5DC9  (00:FFFFFFFF)       TRACK_cmd_VolumeAdd	equ 16-17		; reset after note set
      30.  00:5DC9  (00:0000)           TRACK_cmd_ToneSlideAdd	equ 17-17		; reset after note set
      31.  00:5DC9  (00:0002)           TRACK_cmd_ToneAdd		equ 19-17		; reset after note set
      32.  00:5DC9                      
      33.  00:5DC9  (00:0004)           TRACK_cmd_detune		equ 21-17
      34.  00:5DC9  (00:0005)           TRACK_cmd_0			equ 22-17
      35.  00:5DC9  (00:0006)           TRACK_cmd_1			equ 23-17
      36.  00:5DC9  (00:0007)           TRACK_cmd_2			equ 24-17
      37.  00:5DC9  (00:0008)           TRACK_cmd_3			equ 25-17
      38.  00:5DC9  (00:0009)           TRACK_cmd_4_depth		equ 26-17
      39.  00:5DC9  (00:000A)           TRACK_cmd_4_step		equ 27-17
      40.  00:5DC9  (00:000B)           TRACK_cmd_NoteAdd		equ 28-17		;x reset after note set
      41.  00:5DC9  (00:000C)           TRACK_cmd_A			equ 29-17		
      42.  00:5DC9  (00:000D)           TRACK_cmd_B			equ 30-17		
      43.  00:5DC9  (00:000E)           TRACK_cmd_E			equ 31-17
      44.  00:5DC9  (00:000F)           TRACK_Timer			equ 32-17		; used for timing by all cmd's
      45.  00:5DC9  (00:0010)           TRACK_Step			equ 33-17		; only for VIBRATO???
      46.  00:5DC9  (00:0011)           TRACK_Delay			equ 34-17		; rows to wait till next data
      47.  00:5DC9                      ;TRACK_Retrig		equ 35-17		; rows to retrigger command
      48.  00:5DC9  (00:0013)           TRACK_prevDelay		equ 36-17
      49.  00:5DC9  (00:0014)           TRACK_cmd_A_add		equ 37-17		;<< Still in use???
      50.  00:5DC9                      
      51.  00:5DC9  (00:0026)           TRACK_REC_SIZE		equ 38
      52.  00:5DC9                      
      53.  00:5DC9                      
      54.  00:5DC9  (00:0000)           B_TRGNOT			equ 0			; note trigger
      55.  00:5DC9  (00:0001)           B_ACTNOT			equ 1			; note active
      56.  00:5DC9  (00:0002)           B_TRGENV			equ 2			; envelope trigger
      57.  00:5DC9  (00:0003)           B_TRGCMD			equ 3			; command active
      58.  00:5DC9  (00:0004)           B_KEYON			equ 4			; for fm note trigger
      59.  00:5DC9  (00:0005)           B_SUST			equ 5			; for fm note sustain
      60.  00:5DC9  (00:0006)           B_TRGVOI			equ 6			; custom voice trigger	
      61.  00:5DC9  (00:0007)           B_PSGFM			equ 7			; chip type (PSG or FM)	
      62.  00:5DC9                      
      63.  00:5DC9                      ;B_ACTMOR			equ 4			; morph active
      64.  00:5DC9                      ;B_TRGINS			equ 5			; instrument trigger
      65.  00:5DC9                      ;B_TRGWAV			equ 6			; waveform trigger
      66.  00:5DC9                      
      67.  00:5DC9                      
      68.  00:5DC9  (00:C000)           _SP_Storage			#2			; to store the SP
      69.  00:5DC9                      
      70.  00:5DC9  (00:C002)           replay_trigger		#1			; trigger byte.
      71.  00:5DC9  (00:C003)           replay_mainPSGvol		#2			; volume mixer for PSG SCC balance
      72.  00:5DC9  (00:C005)           replay_mainSCCvol		#2			; volume mixer for PSG SCC balance
      73.  00:5DC9                      ;replay_songbase:		#2			; pointer to song data
      74.  00:5DC9                      
      75.  00:5DC9                      ; Do not move these
      76.  00:5DC9  (00:C007)           replay_voicebase:		#2			; pointer to custom voice data
      77.  00:5DC9  (00:C009)           replay_drumbase:		#2			; pointer to drum macro data
      78.  00:5DC9  (00:C00B)           replay_insbase:		#2			; pointer to instrument data
      79.  00:5DC9  (00:C00D)           TRACK_pointer1		#2
      80.  00:5DC9  (00:C00F)           TRACK_pointer2		#2
      81.  00:5DC9  (00:C011)           TRACK_pointer3		#2
      82.  00:5DC9  (00:C013)           TRACK_pointer4		#2
      83.  00:5DC9  (00:C015)           TRACK_pointer5		#2
      84.  00:5DC9  (00:C017)           TRACK_pointer6		#2
      85.  00:5DC9  (00:C019)           TRACK_pointer7		#2
      86.  00:5DC9  (00:C01B)           TRACK_pointer8		#2
      87.  00:5DC9                      ; / Do not move above
      88.  00:5DC9                      
      89.  00:5DC9                      
      90.  00:5DC9                      
      91.  00:5DC9  (00:C01D)           replay_orderpointer:	#2			; pointer to the order track list pointers
      92.  00:5DC9                      
      93.  00:5DC9  (00:C01F)           replay_speed 		#1			; speed to replay (get from song)
      94.  00:5DC9  (00:C020)           replay_speed_subtimer 	#1			; counter for finer speed
      95.  00:5DC9  (00:C021)           replay_speed_timer 	#1 			; counter for speed
      96.  00:5DC9  (00:C022)           replay_mode 		#1			; Replayer status
      97.  00:5DC9                      ; mode 0  = no sound output
      98.  00:5DC9                      ; mode 1  = replay song 
      99.  00:5DC9  (00:C023)           replay_chan_setup		#1			; 0 = 2 psg+ 6 fm, 1 = 3psg + 5 fm
     100.  00:5DC9  (00:C024)           replay_arp_speed		#1			; arpeggio speed ( 0 = fast, $f = slowest)
     101.  00:5DC9  (00:C025)           replay_fade			#1			; Fade active (value = fade speed)
     102.  00:5DC9  (00:C026)           replay_fade_timer		#1			; Timer for fade
     103.  00:5DC9  (00:C027)           replay_fade_vol		#1			; fade volume to lower the channel volume.
     104.  00:5DC9                      
     105.  00:5DC9  (00:C028)           replay_previous_note	#1			; previous note played
     106.  00:5DC9  (00:C029)           replay_mainvol		#2			; the volume correction.
     107.  00:5DC9                      
     108.  00:5DC9  (00:C02B)           replay_vib_table		#2			; pointer to the vibrato table
     109.  00:5DC9                      ;replay_tonetable_PSG	#2			; ToneTable (affected by transpose);
     110.  00:5DC9                      ;replay_tonetable_FM	#2			; ToneTable (affected by transpose);
     111.  00:5DC9  (00:C02D)           replay_tonetable		#2			; Current tonetable to read from
     112.  00:5DC9                      
     113.  00:5DC9  (00:C02F)           equalization_freq:	#1	; vdp type for correct playback on 60hz 0=50Hx, >0=60Hz
     114.  00:5DC9  (00:C030)           equalization_cnt:		#1	; counter for correct playback on 60hz
     115.  00:5DC9  (00:C031)           equalization_flag:	#1	; flag indicating if only instruments need to be processed.
     116.  00:5DC9                      
     117.  00:5DC9                      
     118.  00:5DC9                      
     119.  00:5DC9  (00:C032)           TRACK_Chan1			#TRACK_REC_SIZE
     120.  00:5DC9  (00:C058)           TRACK_Chan2			#TRACK_REC_SIZE
     121.  00:5DC9  (00:C07E)           TRACK_Chan3			#TRACK_REC_SIZE
     122.  00:5DC9  (00:C0A4)           TRACK_Chan4			#TRACK_REC_SIZE
     123.  00:5DC9  (00:C0CA)           TRACK_Chan5			#TRACK_REC_SIZE
     124.  00:5DC9  (00:C0F0)           TRACK_Chan6			#TRACK_REC_SIZE
     125.  00:5DC9  (00:C116)           TRACK_Chan7			#TRACK_REC_SIZE
     126.  00:5DC9  (00:C13C)           TRACK_Chan8			#TRACK_REC_SIZE
     127.  00:5DC9                      
     128.  00:5DC9                      
     129.  00:5DC9                      
     130.  00:5DC9                      ;--- AY SPECIFIC
     131.  00:5DC9  (00:C162)           PSG_registers		#0 
     132.  00:5DC9  (00:C162)           PSG_regToneA 		#2	; Tone A freq low (8bit)
     133.  00:5DC9                      					; Tone A freq high (4bit)
     134.  00:5DC9  (00:C164)           PSG_regToneB 		#2	; Tone B freq low
     135.  00:5DC9                      					; Tone B freq high
     136.  00:5DC9  (00:C166)           PSG_regToneC 		#2	; Tone C freq low
     137.  00:5DC9                      					; Tone C freq high
     138.  00:5DC9  (00:C168)           PSG_regNOISE 		#1	; Noise freq (5bit)
     139.  00:5DC9  (00:C169)           PSG_regMIXER 		#1	;0x38	;x3f	; Mixer control (1 = off, 0 = on)
     140.  00:5DC9  (00:C16A)           PSG_regVOLA 			#1	; Chan A volume
     141.  00:5DC9  (00:C16B)           PSG_regVOLB 			#1	; Chan B volume
     142.  00:5DC9  (00:C16C)           PSG_regVOLC  		#1	; Chan C volume
     143.  00:5DC9  (00:C16D)           PSG_regVOLN			#1
     144.  00:5DC9  (00:C16E)           PSG_regNOISEold		#1
     145.  00:5DC9  (00:C16F)           GG_panning			#1
     146.  00:5DC9                      ;PSG_regEnvL 			#1	; Volume Env Freq low (8bit)	
     147.  00:5DC9                      ;PSG_regEnvH 			#1	; Volume Env Freq high (4bit)
     148.  00:5DC9                      ;PSG_regEnvShape 		#1	; Volume Env Shape (4bit)
     149.  00:5DC9                      
     150.  00:5DC9                      ;--- SCC SPECIFIC
     151.  00:5DC9                      ;
     152.  00:5DC9                      ;_0x9800:	#32			; Waveform data
     153.  00:5DC9                      ;_0x9820:	#32
     154.  00:5DC9                      ;_0x9840:	#32
     155.  00:5DC9                      ;_0x9860:	#32
     156.  00:5DC9                      
     157.  00:5DC9                      FM_Registers:
     158.  00:5DC9  (00:C170)           FM_regToneA 		#2	; Tone A freq low (8bit)
     159.  00:5DC9                      					; Tone A freq high (4bit)
     160.  00:5DC9  (00:C172)           FM_regToneB 		#2	; Tone B freq low
     161.  00:5DC9                      					; Tone B freq high
     162.  00:5DC9  (00:C174)           FM_regToneC 		#2	; Tone C freq low
     163.  00:5DC9                      					; Tone C freq high
     164.  00:5DC9  (00:C176)           FM_regToneD 		#2	; Tone D freq low
     165.  00:5DC9                      					; Tone D freq high
     166.  00:5DC9  (00:C178)           FM_regToneE 		#2	; Tone E freq low
     167.  00:5DC9                      					; Tone E freq high
     168.  00:5DC9  (00:C17A)           FM_regToneF 		#2	; Tone F freq low
     169.  00:5DC9                      					; Tone F freq high					
     170.  00:5DC9  (00:C17C)           FM_regVOLA 			#1	; Chan A volume
     171.  00:5DC9  (00:C17D)           FM_regVOLB 			#1	; Chan B volume
     172.  00:5DC9  (00:C17E)           FM_regVOLC  		#1	; Chan C volume
     173.  00:5DC9  (00:C17F)           FM_regVOLD 			#1	; Chan D volume
     174.  00:5DC9  (00:C180)           FM_regVOLE  		#1	; Chan E volume
     175.  00:5DC9  (00:C181)           FM_regVOLF  		#1	; Chan F volume
     176.  00:5DC9                      
     177.  00:5DC9                      
     178.  00:5DC9  (00:C182)           FM_DRUM			#1	; Percussion bits
     179.  00:5DC9  (00:C183)           FM_DRUM_Flags		#1	; 7, percusion, 6,4,2 = tone update, 5,3,1 = vol update
     180.  00:5DC9  (00:C184)           FM_freqreg1			#2	; Base drum
     181.  00:5DC9  (00:C186)           FM_volreg1			#1	; Drum (low)
     182.  00:5DC9  (00:C187)           FM_freqreg2			#2	; Snare + HiHat
     183.  00:5DC9  (00:C189)           FM_volreg2			#1	; Snare(low) Hihat(High)
     184.  00:5DC9  (00:C18A)           FM_freqreg3			#2	; Cymbal + TomTom
     185.  00:5DC9  (00:C18C)           FM_volreg3			#1	; Cymbal(low) TomTom (High)
     186.  00:5DC9                      
     187.  00:5DC9  (00:C18D)           FM_DRUM_LEN			#1	; Length of drum macro
     188.  00:5DC9  (00:C18E)           FM_DRUM_MACRO		#2	; Pointer to drum macro data
     189.  00:5DC9                      
     190.  00:5DC9  (00:C190)           FM_softvoice_req		#1	; Software voice requested
     191.  00:5DC9  (00:C191)           FM_softvoice_set 		#1	; Software voice currently loaded
     192.  00:5DC9                      
     193.  00:5DC9                      
     194.  00:5DC9                      ; DEze lijkt niet meer nodig
     195.  00:5DC9  (00:C192)           FM_regMIXER 		#1	; x3f	; Mixer control (1 = off, 0 = on)
     196.  00:5DC9                      
     197.  00:5DC9                      
     198.  00:5DC9                      
     199.  00:5DC9                      
     200.  00:5DC9                      ;/// see to remove this.
     201.  00:5DC9                      ;-- SCC registers
     202.  00:5DC9  (00:C193)           oldregs:	#(32*4)+(3*5)+1		; a way to int the SCC
     203.  00:5DC9                      
     204.  00:5DC9                      
     617   00:5DC9                      	
     618   00:5DC9                      
     619   00:5DC9  (00:C223)           debug_pointer1:	#2
     620   00:5DC9  (00:C225)           debug_pointer2:	#2	
     621   00:5DC9  (00:C227)           debug_pnt:		#8*80
     622   00:5DC9  (00:C4A7)           TEXT_Chan		#40
     623   00:5DC9                      
     624   00:5DC9                      	
     625   00:5DC9                      ;	include	"..\ttsfxplay\ttsfxplay_RAM.asm"
     626   00:5DC9  (00:C4CF)           pattern	#1

    LABELS
-------------------------------------------------
00:00004010   initmain
00:000040B2   infinite
00:000040D2   isr
00:000040F6   write_debug
00:00004103   _wd_loop
00:0000410C   clear_debug
00:0000411A   debuginfo
00:00004123   debuginfo.loop
00:00004165   step_debug
00:00004190   register_debug
00:000041CA   register_debug_loop
00:000041F1   REG_list
00:0000422D   clear_TEXT
00:00004239   debug_flags
00:000042A4   init_vdp
00:00000082   _UPLEFT
00:00000081   _HORIZONTAL
00:00000083   _UPRIGHT
00:00000080   _VERTICAL
00:00000087 X _VERTICAL_SMALL
00:00000086 X _VERTICAL_DOUBLE
00:0000008B X _VERTICAL_STEP
00:000000B0 X _ARROWLEFT
00:000000B1 X _ARROWRIGHT
00:000000AE X _LOOPSIGN
00:000000F1 X _TONE_OFF_SIGN
00:000000F2 X _TONE_ON_SIGN
00:000000F3 X _NOISE_OFF_SIGN
00:000000F4 X _NOISE_ON_SIGN
00:000000F5 X _ENV_OFF_SIGN
00:000000F6 X _ENV_ON_SIGN
00:000000BF X _CMD_SIGN
00:000000FE X _CURSOR
00:000000FC X MOUSE_CHR
00:00002000   _PNT
00:00002A00   _CNT
00:000042F0   clear_screen
00:00004305 X clear_cnt
00:0000431C X clear_files
00:00004337   draw_label
00:0000433F   draw_label_loop
00:00004349   draw_label_end
00:0000434B   draw_label_fast
00:0000435C X draw_fake_hex_sp
00:00004372 X draw_fake_hex_sp_small
00:0000437D X draw_hex_sp_small
00:00004385   draw_hex
00:00004387 X draw_fakehex
00:00004390   draw_hex_small
00:00004395   draw_hex2
00:000043A4 X conv_decimal
00:000043A5   draw_decimal
00:000043B2   _dd_Num1
00:000043B4   _dd_Num2
00:000043BC   draw_decimal3
00:000043C4 X draw_box
00:000043CE   draw_box_loop1
00:000043CF   draw_box_loop0
00:00004408   draw_box_end
00:0000440A X draw_colorbox
00:00004417   _dc_maskleft_loop
00:00004432   _dc_maskright_loop
00:00004455   _dc_start_loop
00:00004474   _cb_copyloop_main
00:00004499   _cb_copyloop
00:000044BA   _cp_clip_copy
00:000044DC X erase_colorbox
00:000044E9   _ecb_maskleft_loop
00:00004506   _ecb_maskright_loop
00:0000452B   _ecb_start_loop
00:0000454A   _ecb_copyloop_main
00:0000456F   _ecb_copyloop
00:00004590   _ecb_clip_copy
00:000045B2   set_vdpwrite
00:000045CF   set_vdpread
00:00000000   cb_maskleft
00:00000001   cb_maskright
00:00000002   cb_fullbytes
00:00000003 X cb_status
00:000045EA   init_font
00:000045F9   _fontloop
00:0000007C   FM_WRITE
00:0000007D   FM_DATA
00:00000060   _REL
00:00000061   _SUS
00:00000062   _VOL
00:00000071   _INS
00:00000090   _CMD
00:000000B8 X _SPC
00:000000BF   _EOT
00:000000C0   _WAIT
00:00004602   replay_init
00:0000461E   replay_pause
00:00004625 X _r_pause_enable
00:0000462B   _r_pause_disable
00:00004647   _r_pause_loop
00:0000464C X replay_fade_out
00:00004657   replay_set_FM_balance
00:0000465E   replay_set_PSG_balance
00:00004665   _getnewbalancebase
00:00004673   replay_loadsong
00:00004721   replay_play
00:0000472C X replay_play.NTSC
00:00004740   replay_play.PAL
00:00004757 X decode_data
00:0000475D X decode_data.decode1
00:0000477E   decode_data.decode2
00:000047A5   decode_data.decode3
00:000047C6   decode_data.decode4
00:000047E7   decode_data.decode5
00:00004808   decode_data.decode6
00:00004829   decode_data.decode7
00:0000484A   decode_data.decode8
00:0000486B   decode_data.decode_end
00:0000486B   process_data
00:000048B6 X _rdd_3psg_5fm
00:000048E5   _rdd_2psg_6fm
00:00004913   _rdd_cont
00:0000498D   _rdd_cont.cont_fadeing
00:00004993   _rdd_cont.no_new_step
00:000049A7   _rdd_cont.calc_vol
00:000049AD   _rdd_cont.no_carry
00:000049B2   _replay_check_patternend
00:000049D6   _replay_check_patternend.no_restart
00:000049E4   decode_data_chan
00:000049F8   _rdn2
00:000049FD   _rdv2
00:00004A02   _rdi2
00:00004A0A   _rdn
00:00004A12   _rdi
00:00004A1A   _rdv
00:00004A22   _rdc
00:00004A23   _rdc_noinc
00:00004A2C   _rd_delay
00:00004A33   _replay_decode_note
00:00004A3F   _replay_decode_release
00:00004A4A   _replay_decode_sustain
00:00004A55   _replay_decode_ins
00:00004A6A   _replay_decode_ins.skip
00:00004A87   _replay_decode_ins.skip_soft
00:00004A8A   _replay_decode_ins.skip_ins
00:00004A8F   _replay_decode_vol
00:00004AA4   _replay_decode_delay
00:00004AB1   _replaydecode_cmd
00:00004AC5   _replaydecode_cmd.skip
00:00004ACC   DECODE_CMDLIST
00:00004AF8   decode_cmd0_arpeggio
00:00004B0B   decode_cmd1_port_up
00:00004B16   decode_cmd2_port_down
00:00004B21   decode_cmd3_port_tone
00:00004B38 X _decode_newNote
00:00004B47   _decode_newNote.skip
00:00004B5D   _decode_newNote.skip2
00:00004B71   decode_cmd4_vibrato
00:00004B88   decode_cmd5_vibrato_port_tone
00:00004B88   decode_cmd6_vibrato_vol
00:00004B88   decode_cmd7_vol_slide
00:00004B90   decode_cmd8_note_cut
00:00004B99   decode_cmd9_note_delay
00:00004BB7   decode_cmd10_command_end
00:00004BBC   decode_cmd11_drum
00:00004BE2   decode_cmd12_short_arp
00:00004BEE   decode_cmd13_fine_up
00:00004BEE   decode_cmd14_fine_down
00:00004BFA   decode_cmd15_notelink
00:00004C02   decode_cmd16_track_detune
00:00004C17   decode_cmd16_track_detune.pos
00:00004C21   decode_cmd17_trigger
00:00004C27   decode_cmd18_speed
00:00004C3A   decode_cmd19_tone_panning
00:00004C3D   decode_cmd20_noise_panning
00:00004C40   decode_cmd21_chan_setup
00:00004C43   process_data_chan
00:00004C6F   process_data_chan.skip
00:00004C74   process_commandEND
00:00004C74   process_note
00:00004C79 X process_triggerNote
00:00004C9D   process_noNoteTrigger
00:00004CBD   _vol_change
00:00004CC4 X _vol_rel
00:00004CD6   _vol_rel.skip
00:00004CD7   _vol_base
00:00004CDA   _noVolumeChange
00:00004CE5 X _noVolumeChange.add_Vadd
00:00004CEF   _noVolumeChange.sub_Vadd
00:00004CFB   _noVolumeChange.skip2
00:00004CFB   _Vadd
00:00004D05   _Vadd.skip
00:00004D0F   _Vadd.skip2
00:00004D14 X _noVolume
00:00004D23   _noNoise
00:00004D3C   _noNoise.skip
00:00004D43   _noNoiseVol
00:00004D51   _noLink
00:00004D67   _noLink.skip
00:00004D6E   process_noToneAdd
00:00004D77   process_noToneAdd.noend
00:00004D84   process_noToneBit
00:00004D94   process_noToneBit.skip
00:00004DB5 X _wrap_highcheck
00:00004DDC   _wrap_lowcheck
00:00004DFF   _wrap_skip
00:00004E0F   process_noNoteActive
00:00004E17   process_cmd_list
00:00004E2B   process_cmd0_arpeggio
00:00004E47   process_cmd0_arpeggio.step2
00:00004E5B   process_cmd0_arpeggio.step3
00:00004E62   process_cmd1_port_up
00:00004E76   process_cmd2_port_down
00:00004E8A   process_cmd3_port_tone
00:00004E98 X process_cmd3_add
00:00004EAB   process_cmd3_sub
00:00004EBE   process_cmd3_stop
00:00004ECB   process_cmd4_vibrato
00:00004EDE X process_cmd4_vibrato.neg
00:00004EF9   process_cmd4_vibrato.pos
00:00004F03   process_cmd4_vibrato.zero
00:00004F0D   process_cmd5_vibrato_port_tone
00:00004F13   process_cmd6_vibrato_vol
00:00004F19   process_cmd7_vol_slide
00:00004F1F   process_cmdasub
00:00004F34 X process_cmda_dec
00:00004F3D   process_cmda_inc
00:00004F46   process_cmd8_note_cut
00:00004F53   process_cmd9_note_delay
00:00004F66   replay_route
00:00004F66 X route_SN
00:00005007 X route_gg
00:00005026   _tt_voice_fmloop
00:00005038   _tt_route_fm_novoice
00:00005042   _tt_route_fmvol
00:00005078   _tt_route_fmtone
00:000050B2 X debug
00:00005133   _VOLUME_TABLE
00:00000D40   C_PER
00:00000C80   C1_PER
00:00000BC0   D_PER
00:00000B20   D1_PER
00:00000A80   E_PER
00:000009E0   F_PER
00:00000940   F1_PER
00:000008C0   G_PER
00:00000840   G1_PER
00:000007E0   A_PER
00:00000760   A1_PER
00:00000700   B_PER
00:00005233   TRACK_ToneTable_PSG
00:000052F3   TRACK_ToneTable_FM
00:000053B3   TRACK_Vibrato_sine
00:000054B3   demo_song
00:000054BA   demo_song.restart
00:000054CE   demo_song.customvoice_start
00:000054CE X demo_song.waveform_start
00:000054CE   demo_song.drummacro_start
00:000054CE   demo_song.instrument_start
00:000054D0   demo_song.instrument_00
00:000054D1   demo_song.rst_i00
00:000054D5   demo_song.track_000
00:000054EA   demo_song.track_001
00:00005500   demo_song.track_002
00:00005516   demo_song.track_003
00:00005518   TEXT_Title
00:0000553D   TEXT_Step
00:00005543   TEXT_Header_Data
00:0000555B   TEXT_Register_Header
00:0000557E   TEXT_Register_Drum
00:0000558F   TEXT_Legend_Data
00:000055C9   font_data
00:FFFFFFEF   TRACK_Instrument
00:FFFFFFF0   TRACK_Command
00:FFFFFFF1   TRACK_MacroPointer
00:FFFFFFF3   TRACK_MacroStart
00:FFFFFFF5 X TRACK_MacroRestart
00:FFFFFFF6   TRACK_Note
00:FFFFFFF7   TRACK_Volume
00:FFFFFFF8   TRACK_Voice
00:FFFFFFF9   TRACK_Flags
00:FFFFFFFA X TRACK_empty
00:FFFFFFFB   TRACK_ToneAdd
00:FFFFFFFD   TRACK_VolumeAdd
00:FFFFFFFE X TRACK_Noise
00:FFFFFFFF   TRACK_cmd_VolumeAdd
00:00000000   TRACK_cmd_ToneSlideAdd
00:00000002   TRACK_cmd_ToneAdd
00:00000004   TRACK_cmd_detune
00:00000005   TRACK_cmd_0
00:00000006   TRACK_cmd_1
00:00000007   TRACK_cmd_2
00:00000008   TRACK_cmd_3
00:00000009   TRACK_cmd_4_depth
00:0000000A   TRACK_cmd_4_step
00:0000000B   TRACK_cmd_NoteAdd
00:0000000C   TRACK_cmd_A
00:0000000D X TRACK_cmd_B
00:0000000E   TRACK_cmd_E
00:0000000F   TRACK_Timer
00:00000010   TRACK_Step
00:00000011   TRACK_Delay
00:00000013   TRACK_prevDelay
00:00000014 X TRACK_cmd_A_add
00:00000026   TRACK_REC_SIZE
00:00000000   B_TRGNOT
00:00000001   B_ACTNOT
00:00000002 X B_TRGENV
00:00000003   B_TRGCMD
00:00000004   B_KEYON
00:00000005   B_SUST
00:00000006   B_TRGVOI
00:00000007   B_PSGFM
00:0000C000   _SP_Storage
00:0000C002   replay_trigger
00:0000C003   replay_mainPSGvol
00:0000C005   replay_mainSCCvol
00:0000C007   replay_voicebase
00:0000C009   replay_drumbase
00:0000C00B   replay_insbase
00:0000C00D   TRACK_pointer1
00:0000C00F   TRACK_pointer2
00:0000C011   TRACK_pointer3
00:0000C013   TRACK_pointer4
00:0000C015   TRACK_pointer5
00:0000C017   TRACK_pointer6
00:0000C019   TRACK_pointer7
00:0000C01B   TRACK_pointer8
00:0000C01D   replay_orderpointer
00:0000C01F   replay_speed
00:0000C020   replay_speed_subtimer
00:0000C021   replay_speed_timer
00:0000C022   replay_mode
00:0000C023   replay_chan_setup
00:0000C024   replay_arp_speed
00:0000C025   replay_fade
00:0000C026   replay_fade_timer
00:0000C027   replay_fade_vol
00:0000C028   replay_previous_note
00:0000C029   replay_mainvol
00:0000C02B X replay_vib_table
00:0000C02D   replay_tonetable
00:0000C02F   equalization_freq
00:0000C030   equalization_cnt
00:0000C031   equalization_flag
00:0000C032   TRACK_Chan1
00:0000C058   TRACK_Chan2
00:0000C07E   TRACK_Chan3
00:0000C0A4   TRACK_Chan4
00:0000C0CA   TRACK_Chan5
00:0000C0F0   TRACK_Chan6
00:0000C116   TRACK_Chan7
00:0000C13C   TRACK_Chan8
00:0000C162 X PSG_registers
00:0000C162   PSG_regToneA
00:0000C164   PSG_regToneB
00:0000C166   PSG_regToneC
00:0000C168   PSG_regNOISE
00:0000C169   PSG_regMIXER
00:0000C16A   PSG_regVOLA
00:0000C16B   PSG_regVOLB
00:0000C16C   PSG_regVOLC
00:0000C16D   PSG_regVOLN
00:0000C16E   PSG_regNOISEold
00:0000C16F   GG_panning
00:00005DC9   FM_Registers
00:0000C170   FM_regToneA
00:0000C172   FM_regToneB
00:0000C174   FM_regToneC
00:0000C176   FM_regToneD
00:0000C178   FM_regToneE
00:0000C17A   FM_regToneF
00:0000C17C   FM_regVOLA
00:0000C17D   FM_regVOLB
00:0000C17E   FM_regVOLC
00:0000C17F   FM_regVOLD
00:0000C180   FM_regVOLE
00:0000C181   FM_regVOLF
00:0000C182   FM_DRUM
00:0000C183 X FM_DRUM_Flags
00:0000C184   FM_freqreg1
00:0000C186   FM_volreg1
00:0000C187   FM_freqreg2
00:0000C189   FM_volreg2
00:0000C18A   FM_freqreg3
00:0000C18C   FM_volreg3
00:0000C18D   FM_DRUM_LEN
00:0000C18E   FM_DRUM_MACRO
00:0000C190   FM_softvoice_req
00:0000C191   FM_softvoice_set
00:0000C192   FM_regMIXER
00:0000C193 X oldregs
00:0000C223   debug_pointer1
00:0000C225 X debug_pointer2
00:0000C227   debug_pnt
00:0000C4A7   TEXT_Chan
00:0000C4CF   pattern


 Output: main.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00008000  Used: 00001DC9

   Address   Length Align   Label
   00004000    7625         initmain
   00005DC9   25143       <empty>
